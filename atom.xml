<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[笨跑的一刀]]></title>
  <link href="http://yidao620c.github.io/atom.xml" rel="self"/>
  <link href="http://yidao620c.github.io/"/>
  <updated>2015-05-28T16:08:11+08:00</updated>
  <id>http://yidao620c.github.io/</id>
  <author>
    <name><![CDATA[熊能]]></name>
    <email><![CDATA[yidao620@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开心一刻]]></title>
    <link href="http://yidao620c.github.io/blog/20200815/joke.html"/>
    <updated>2020-08-15T14:02:04+08:00</updated>
    <id>http://yidao620c.github.io/blog/20200815/joke</id>
    <content type="html"><![CDATA[<p>乌龟生病了，他的朋友蜗牛帮他去买药，走了三天没回来。乌龟生气的说：“这个小蜗牛也太慢啦！”
话音刚落，蜗牛开门说：“你要是再说我，我可不去了啊。”</p>

<p>我女朋友哪都好，就是路痴，这都多少年了还没找到我。</p>

<p>一程序员向一暗恋好久的MM表白，MM拒绝了，程序员含着泪问MM：“那你把我当什么？”
MM：“真人版Windows优化大师！”</p>

<p>十年前，男：我就抱抱不干什么。女：不行！ 十年后，男：我就抱抱不干什么。女：不行！<!--more--></p>

<p>北体大运动会一哥们跑1500。最后一名。突然他女神跑上主席台。大喊XXX你要是能跑第一我当你女朋友。
之后除了他以外的所有运动员都停下了。只有他一个人在跑。每当他超过一个人。
那个被超过的人就会说：“兄弟哥们只能帮你这些了”。之后他俩就在一起了。我喜欢这个故事，这就是体育！</p>

<p>一老汉赶驴车进城，遇到一个妇女搭车，路上妇女说：大哥你看天真热，让驴吃点草，
咱俩去小树林凉快一会，一路凉快了十来次！眼看快到城了，妇女说：大哥今天遇见你也是缘份，
不知道何时在见，让驴在啃会草，咱俩在凉快一次吧？
老汉口吐白沫的说：妹子你看这样行不行，我去啃会草，你跟驴凉快凉快行不？</p>

<p>在一个烟雨蒙蒙的清晨，你站在窗前，心里十分惆怅，感慨万千。
曾经失望过，曾经失落过，但一切的曾经都代替不了现在的行走，活在当下，
曾经终究不是未来。水一滴滴从屋檐自由落下，你的思绪也随之荡漾开。
你突然发现它通过屋檐下高为1.4m的窗户时用时0.2s，空气阻力不计，求窗户离屋檐的距离。</p>

<p>研表究明，汉字序顺并不定一影阅响读。比如当你看完这句话后，才发这现里的字全是都乱的。</p>

<p>昨天晚上无聊跑到楼顶，看见个姑娘站在天台！穿着蛮性感，居然要跳楼！我看可惜了就想劝劝她别轻生，
可她不听劝！于是我想也太可惜了。就问她，反正你要死，就临死前做下好事吧。她问我什么事？
我说反正你都无所谓了，死前让我舒服舒服下吧！她居然骂我变态！
我看她居然骂我，就说：那你快点跳吧，我在楼下等你！反正到时也可以舒服！
于是我救了她！</p>

<p>一天，打电话给心仪的女孩，约她出来吃饭，女孩答应了，吃完饭，女孩问我接下来去哪呢，
我说带身份证了么？女孩娇羞的点点头，于是我转身犀利的走向了网吧。</p>

<p>一天，妻子和丈夫一起上街，裙子突然被大风吹起来，
妻子惊慌地按着扬起的裙子大喊：“天啊！春光外泄！”丈夫白了她一眼说：“拜托！是家丑外扬吧！”</p>

<p>有一位美国数学家最怕坐飞机。他研究了近20年的统计数据，发现恐怖分子带炸弹上飞机的几率非常低。
但他还是不放心，又做进一步研究，发现两个人同时带炸弹上飞机的几率为零，
于是他坐飞机都自己携带一枚炸弹。</p>

<p>强烈要求广电总局禁播红高粱，我家今年种了几十亩高粱，本以为今年有个好收成，自从电视剧红高粱热播后，
我家地里的高粱每天成片成片的倒，原因现在都还找不到…</p>

<p>天下武功，唯快不破。 <img src="http://yidaospace.qiniudn.com/rabbit.gif" alt="" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos6上安装Hadoop和HBase]]></title>
    <link href="http://yidao620c.github.io/blog/20150423/hadoop-hbase.html"/>
    <updated>2015-04-23T14:01:57+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150423/hadoop-hbase</id>
    <content type="html"><![CDATA[<h3 id="section">安装前的准备</h3>
<p>操作系统：CentOS 6.5 64位</p>

<p>在linux环境安装Hadoop之前，我们需要使用到ssh，所以要先安装ssh，并且创建一个hadoop用户</p>

<p><strong>备注：</strong> 下面所有的命令中，以#开头的表示是root用户，以$开头的是普通用户</p>

<h4 id="ssh">安装SSH</h4>
<p>先切换到root用户，执行下列步骤</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rpm -qa |grep ssh  #检查是否装了SSH包
</span><span class="line">yum install openssh-server  #安装ssh
</span><span class="line">chkconfig --list sshd #检查SSHD是否设置为开机启动
</span><span class="line">chkconfig --level 2345 sshd on  #如果没设置启动就设置下.
</span><span class="line">service sshd restart  #重新启动</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="hadoop--more--">创建hadoop用户<!--more--></h4>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ su
</span><span class="line">password:
</span><span class="line"># useradd hadoop
</span><span class="line"># passwd hadoop
</span><span class="line">New passwd:
</span><span class="line">Retype new passwd</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="pub-key">生成pub-key</h4>
<p>切换到hadoop用户后，执行</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ ssh-keygen -t rsa
</span><span class="line">$ cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class="line">$ chmod 0600 ~/.ssh/authorized_keys</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后确认下是否能正常使用ssh连接</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ssh localhost</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="jdk17">安装JDK1.7</h3>

<p>进入oracle官网<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html</a></p>

<p>下载jdk-7u79-linux-x64.gz，然后执行：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ tar zxf jdk-7u79-linux-x64.gz
</span><span class="line">$ ls
</span><span class="line">jdk1.7.0_79 jdk-7u79-linux-x64.gz
</span><span class="line">$ su
</span><span class="line">password:
</span><span class="line"># mv jdk1.7.0_79 /usr/local/
</span><span class="line"># exit</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>打开~/.bashrc文件，写入JAVA_HOME环境变量</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">export JAVA_HOME=/usr/local/jdk1.7.0_79
</span><span class="line">export PATH= $PATH:$JAVA_HOME/bin</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>保存刷新下：<code>$ source ~/.bashrc</code></p>

<p>切换到root用户，然后执行下面的语句确保JDK版本更改完成</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># alternatives --install /usr/bin/java java /usr/local/jdk1.7.0_79/bin/java 2
</span><span class="line"># alternatives --install /usr/bin/javac javac /usr/local/jdk1.7.0_79/bin/javac 2
</span><span class="line"># alternatives --install /usr/bin/jar jar /usr/local/jdk1.7.0_79/bin/jar 2
</span><span class="line"># alternatives --set java /usr/local/jdk1.7.0_79/bin/java
</span><span class="line"># alternatives --set javac /usr/local/jdk1.7.0_79/bin/javac
</span><span class="line"># alternatives --set jar /usr/local/jdk1.7.0_79/bin/jar</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>最后执行下：<code>java -version</code>看看是不是已经成功安装了JDK7</p>

<h3 id="hadoop">安装配置Hadoop</h3>

<h4 id="hadoophadoop260httpapachefayeacomhadoopcommonstablehadoop-260targz">下载Hadoophadoop2.6.0下载地址：<a href="http://apache.fayea.com/hadoop/common/stable/hadoop-2.6.0.tar.gz">http://apache.fayea.com/hadoop/common/stable/hadoop-2.6.0.tar.gz</a></h4>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ su
</span><span class="line">password:
</span><span class="line"># cd /usr/local
</span><span class="line"># wget http://apache.fayea.com/hadoop/common/stable/hadoop-2.6.0.tar.gz
</span><span class="line"># tar xzf hadoop-2.6.0.tar.gz
</span><span class="line"># mv hadoop-2.6.0 hadoop
</span><span class="line"># exit</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>hadoop有很多种模式，本篇我们演示的是伪分布式模式，包括后面的HBase也选择这种模式。</p>

<h4 id="hadoop-1">配置Hadoop环境</h4>
<p>第一步，配置环境变量</p>

<p>打开~/.bashrc文件，写入如下内容</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class=""><span class="line">export HADOOP_HOME=/usr/local/hadoop
</span><span class="line">export HADOOP_MAPRED_HOME=$HADOOP_HOME
</span><span class="line">export HADOOP_COMMON_HOME=$HADOOP_HOME
</span><span class="line">export HADOOP_HDFS_HOME=$HADOOP_HOME
</span><span class="line">export YARN_HOME=$HADOOP_HOME
</span><span class="line">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
</span><span class="line">export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
</span><span class="line">export HADOOP_INSTALL=$HADOOP_HOME</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后应用设置</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ source ~/.bashrc</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>第二步，hadoop配置文件</p>

<p>hadoop的配置文件都放在”$HADOOP_HOME/etc/hadoop”目录中，
你可以根据自己的需要来修改它们。</p>

<p>在此之前，还需要修改下hadoop-env.sh，更改其中的JAVA_HOME变量</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">vim /usr/local/hadoop/etc/hadoop/hadoop-env.sh</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后修改JAVA_HOME为真实的目录</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">export JAVA_HOME=/usr/local/jdk1.7.0_79</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>接下来我们去到hadoop的配置文件目录</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ cd $HADOOP_HOME/etc/hadoop</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>1. 首先打开core-site.xml，写入如下配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;configuration&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>/usr/local/hadoop/tmp<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>fs.defaultFS<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>hdfs://localhost:9000<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line"><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2. 然后打开hdfs-site.xml，写入如下配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;configuration&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>dfs.replication<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>dfs.name.dir<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>file:///home/hadoop/hadoopinfra/hdfs/namenode<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>dfs.data.dir<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>file:///home/hadoop/hadoopinfra/hdfs/datanode<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>dfs.permissions<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>false<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line"><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上面的文件夹需要我们手动来创建，那么我们创建下就行了</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ mkdir -p /home/hadoop/hadoopinfra/hdfs/namenode
</span><span class="line">$ mkdir -p /home/hadoop/hadoopinfra/hdfs/datanode
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3. 然后打开yarn-site.xml文件，写入如下配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;configuration&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>yarn.nodemanager.aux-services<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>mapreduce_shuffle<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>yarn.resourcemanager.scheduler.address<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>localhost:54313<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line"><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>4. 配置mapred-site.xml，先重命名</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ cp mapred-site.xml.template mapred-site.xml
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>打开mapred-site.xml文件，写入如下配置</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;configuration&gt;</span>
</span><span class="line">    <span class="nt">&lt;property&gt;</span>
</span><span class="line">        <span class="nt">&lt;name&gt;</span>yarn.nodemanager.aux-services<span class="nt">&lt;/name&gt;</span>
</span><span class="line">        <span class="nt">&lt;value&gt;</span>mapreduce_shuffle<span class="nt">&lt;/value&gt;</span>
</span><span class="line">    <span class="nt">&lt;/property&gt;</span>
</span><span class="line"><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="hadoop-2">确认Hadoop的安装</h4>
<p>1. NameNode确认</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ cd ~
</span><span class="line">$ hdfs namenode -format
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>结果应该类似下面</p>

<pre><code>STARTUP_MSG: Starting NameNode
STARTUP_MSG:   host = centos00/127.0.0.1
STARTUP_MSG:   args = [-format]
STARTUP_MSG:   version = 2.6.0
...
/************************************************************
SHUTDOWN_MSG: Shutting down NameNode at centos00/127.0.0.1
************************************************************/
</code></pre>

<p>2. Hadoop dfs确认</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ start-dfs.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>结果应该类似下面</p>

<pre><code>Starting namenodes on [localhost]
localhost: starting namenode, logging to ....out
localhost: starting datanode, logging to ....out
Starting secondary namenodes [0.0.0.0]
The authenticity of host '0.0.0.0 (0.0.0.0)' can't be established.
RSA key fingerprint is fd:01:fc:f2:53:a0:58:8e:96:9c:5f:f2:6e:5b:69:1a.
Are you sure you want to continue connecting (yes/no)? yes
0.0.0.0: Warning: Permanently added '0.0.0.0' (RSA) to the list of known hosts.
0.0.0.0: starting secondarynamenode, logging to ...
</code></pre>

<p>3. Yarn Srcipt确认</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ start-yarn.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>结果应该类似下面这样</p>

<pre><code>starting yarn daemons
starting resourcemanager, logging to ....out
localhost: starting nodemanager, logging to ....out
</code></pre>

<p>4. 浏览器访问Hadoop</p>

<p>默认访问Hadoop的端口是50070，在浏览器中打开链接<a href="http://localhost:50070">http://localhost:50070</a>来访问Hadoop服务。</p>

<p>5. 浏览器确认应用集群</p>

<p>默认访问应用集群的端口号是8088，在浏览器中打开链接<a href="http://localhost:8088">http://localhost:8088</a>来确认下。</p>

<h3 id="hbase">安装HBase</h3>
<p>你可以在三种模式下安装HBase：单机模式、伪分布式模式、全分布式模式。
下面我们演示在伪分布式模式下HBase的安装和配置。</p>

<h4 id="hbase-1">下载HBase</h4>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ su
</span><span class="line"># cd /usr/local/
</span><span class="line"># wget http://apache.fayea.com/hbase/hbase-0.98.12/hbase-0.98.12-hadoop2-bin.tar.gz
</span><span class="line"># tar -zxvf hbase-0.98.12-hadoop2-bin.tar.gz
</span><span class="line"># mv hbase-0.98.12-hadoop2 hbase
</span><span class="line"># chown -R hadoop:hadoop /usr/local/hbase
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="hbase-sitexml">配置hbase-site.xml</h4>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">su hadoop
</span><span class="line">$ cd /usr/local/hbase/conf
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后打开hbase-env.sh文件，修改如下</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">export JAVA_HOME=/usr/local/jdk1.7.0_79
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>修改hbase-site.xml文件，如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;property&gt;</span>
</span><span class="line">    <span class="nt">&lt;name&gt;</span>hbase.rootdir<span class="nt">&lt;/name&gt;</span>
</span><span class="line">    <span class="nt">&lt;value&gt;</span>hdfs://localhost:9000/hbase<span class="nt">&lt;/value&gt;</span>
</span><span class="line"><span class="nt">&lt;/property&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;property&gt;</span>
</span><span class="line">    <span class="nt">&lt;name&gt;</span>hbase.zookeeper.property.dataDir<span class="nt">&lt;/name&gt;</span>
</span><span class="line">    <span class="nt">&lt;value&gt;</span>/home/hadoop/zookeeper<span class="nt">&lt;/value&gt;</span>
</span><span class="line"><span class="nt">&lt;/property&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;property&gt;</span>
</span><span class="line">    <span class="nt">&lt;name&gt;</span>hbase.cluster.distributed<span class="nt">&lt;/name&gt;</span>
</span><span class="line">    <span class="nt">&lt;value&gt;</span>true<span class="nt">&lt;/value&gt;</span>
</span><span class="line"><span class="nt">&lt;/property&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>编辑/etc/profile，增加HBASE_HOME环境变量</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">export HBASE_HOME=/usr/local/hbase
</span><span class="line">export PATH=$PATH:$HBASE_HOME/bin
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>应用更改。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">source /etc/profile
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>OK，现在为止，HBase的安装和配置都已经完成了。</p>

<p>现在你可以通过执行start-hbase.sh来启动HBase</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ cd /usr/local/hbase/bin
</span><span class="line">$ ./start-hbase.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后执行<code>jps</code>命令应该可以看到HMaster和HRegionServer这两个进程。类似下面</p>

<pre><code>10941 DataNode
13744 HQuorumPeer
14207 Jps
11126 SecondaryNameNode
11276 ResourceManager
10840 NameNode
13843 HMaster
10016 HRegionServer
11378 NodeManager
</code></pre>

<p>如果没有看到，可以查看日志<code>/usr/local/hbase/logs/hbase-hadoop-master-xx.log</code></p>

<h4 id="hdfshbase">在HDFS中检查HBase目录</h4>
<p>HBase会在HDFS中创建自己的目录，在hadoop目录下面执行：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">$ ./bin/hadoop fs -ls /hbase
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>显示如下</p>

<pre><code>drwxr-xr-x   - hadoop supergroup          0 2015-04-24 16:06 /hbase/.tmp
drwxr-xr-x   - hadoop supergroup          0 2015-04-24 16:06 /hbase/WALs
drwxr-xr-x   - hadoop supergroup          0 2015-04-24 16:06 /hbase/data
-rw-r--r--   1 hadoop supergroup         42 2015-04-24 16:06 /hbase/hbase.id
-rw-r--r--   1 hadoop supergroup          7 2015-04-24 16:06 /hbase/hbase.version
drwxr-xr-x   - hadoop supergroup          0 2015-04-24 16:06 /hbase/oldWALs
</code></pre>

<p>那么恭喜你，配置成功了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SiteMesh使用笔记]]></title>
    <link href="http://yidao620c.github.io/blog/20150423/sitemesh.html"/>
    <updated>2015-04-23T10:42:23+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150423/sitemesh</id>
    <content type="html"><![CDATA[<h3 id="section">简介</h3>
<p>SiteMesh的介绍就不多说了，主要是用来统一页面风格，减少重复编码的。</p>

<p>它定义了一个过滤器，然后把页面都加上统一的头部和底部。</p>

<p>在maven工程的pom.xml中加入SiteMesh依赖：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;dependency&gt;</span>
</span><span class="line">    <span class="nt">&lt;groupId&gt;</span>opensymphony<span class="nt">&lt;/groupId&gt;</span>
</span><span class="line">    <span class="nt">&lt;artifactId&gt;</span>sitemesh<span class="nt">&lt;/artifactId&gt;</span>
</span><span class="line">    <span class="nt">&lt;version&gt;</span>2.4.2<span class="nt">&lt;/version&gt;</span>
</span><span class="line"><span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">过滤器定义：</h3>
<p>在web.xml中：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;filter&gt;</span>
</span><span class="line">    <span class="nt">&lt;filter-name&gt;</span>sitemeshFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class="line">    <span class="nt">&lt;filter-class&gt;</span>com.opensymphony.sitemesh.webapp.SiteMeshFilter<span class="nt">&lt;/filter-class&gt;</span>
</span><span class="line"><span class="nt">&lt;/filter&gt;</span>
</span><span class="line"><span class="nt">&lt;filter-mapping&gt;</span>
</span><span class="line">    <span class="nt">&lt;filter-name&gt;</span>sitemeshFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class="line">    <span class="nt">&lt;url-pattern&gt;</span>*.html<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class="line"><span class="nt">&lt;/filter-mapping&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="web-infdecoratorsxml--more--">WEB-INF下新建decorators.xml文件：<!--more--></h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class="line"><span class="nt">&lt;decorators</span> <span class="na">defaultdir=</span><span class="s">&quot;/WEB-INF/layouts/&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="c">&lt;!-- 此处用来定义不需要过滤的页面 --&gt;</span>
</span><span class="line">    <span class="nt">&lt;excludes&gt;</span>
</span><span class="line">        <span class="nt">&lt;pattern&gt;</span>/static/*<span class="nt">&lt;/pattern&gt;</span>
</span><span class="line">    <span class="nt">&lt;/excludes&gt;</span>
</span><span class="line">    <span class="c">&lt;!-- 用来定义装饰器要过滤的页面 --&gt;</span>
</span><span class="line">    <span class="nt">&lt;decorator</span> <span class="na">name=</span><span class="s">&quot;default&quot;</span> <span class="na">page=</span><span class="s">&quot;default.jsp&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;pattern&gt;</span>/*<span class="nt">&lt;/pattern&gt;</span>
</span><span class="line">    <span class="nt">&lt;/decorator&gt;</span>
</span><span class="line"><span class="nt">&lt;/decorators&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>不用过滤/static/目录下的文件，然后指定了装饰器：/WEB-INF/layouts/default.jsp。</p>

<h3 id="defaultjsp">default.jsp模板</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="jsp"><span class="line"><span class="k">&lt;%@</span> <span class="n">page</span> <span class="n">contentType</span><span class="o">=</span><span class="s">&quot;text/html;charset=UTF-8&quot;</span> <span class="k">%&gt;</span>
</span><span class="line"><span class="k">&lt;%@</span> <span class="n">taglib</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&quot;sitemesh&quot;</span> <span class="n">uri</span><span class="o">=</span><span class="s">&quot;http://www.opensymphony.com/sitemesh/decorator&quot;</span> <span class="k">%&gt;</span>
</span><span class="line"><span class="k">&lt;%@</span> <span class="n">taglib</span> <span class="n">prefix</span><span class="o">=</span><span class="s">&quot;c&quot;</span> <span class="n">uri</span><span class="o">=</span><span class="s">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="k">%&gt;</span>
</span><span class="line"><span class="nt">&lt;c:set</span> <span class="na">var=</span><span class="s">&quot;ctx&quot;</span> <span class="na">value=</span><span class="s">&quot;${pageContext.request.contextPath}&quot;</span><span class="nt">/&gt;</span>
</span><span class="line"><span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span>快贷发平台:<span class="nt">&lt;sitemesh:title/&gt;&lt;/title&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html;charset=utf-8&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;viewport&quot;</span> <span class="na">content=</span><span class="s">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">type=</span><span class="s">&quot;image/x-icon&quot;</span> <span class="na">href=</span><span class="s">&quot;${ctx}/static/images/favicon.ico&quot;</span> <span class="na">rel=</span><span class="s">&quot;shortcut icon&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;${ctx}/static/bootstrap/3.3.1/css/bootstrap.min.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;${ctx}/static/jquery-validation/1.11.1/validate.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;${ctx}/static/styles/default.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;${ctx}/static/jquery/jquery-1.9.1.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;${ctx}/static/jquery-validation/1.11.1/jquery.validate.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;${ctx}/static/jquery-validation/1.11.1/messages_bs_zh.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;sitemesh:head/&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="k">&lt;%@</span> <span class="n">include</span> <span class="n">file</span><span class="o">=</span><span class="s">&quot;/WEB-INF/layouts/header.jsp&quot;</span> <span class="k">%&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;sitemesh:body/&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="k">&lt;%@</span> <span class="n">include</span> <span class="n">file</span><span class="o">=</span><span class="s">&quot;/WEB-INF/layouts/footer.jsp&quot;</span> <span class="k">%&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;script</span> <span class="na">src=</span><span class="s">&quot;${ctx}/static/bootstrap/3.3.1/js/bootstrap.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>首先引入了SiteMesh标签</p>

<ul>
  <li><code>&lt;sitemesh:title/&gt;</code>会自动替换为被过滤页面的title</li>
  <li><code>&lt;sitemesh:head/&gt;</code>会把被过滤页面head里面的东西（除了title）放在这个地方</li>
  <li><code>&lt;sitemesh:body/&gt;</code>会把被过滤的页面body里面的内容放在这里</li>
  <li>在content的上下引入了header和footer，我们在头部引入了js和css，就可以重用了</li>
</ul>

<p>使用的过程中，几乎感受不到SiteMesh的存在，例如下面的页面：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="jsp"><span class="line"><span class="k">&lt;%@</span> <span class="n">page</span> <span class="n">language</span><span class="o">=</span><span class="s">&quot;java&quot;</span> <span class="n">contentType</span><span class="o">=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span>
</span><span class="line">    <span class="n">pageEncoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="k">%&gt;</span>
</span><span class="line"><span class="cp">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="c">&lt;!-- 第一个被装饰(目标)页面  --&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;title&gt;</span>被装饰（目标）页面title<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;script</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;/js/hello.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;h4&gt;</span>被装饰（目标）页面body标签内内容。<span class="nt">&lt;/h4&gt;</span>
</span><span class="line">    <span class="nt">&lt;h3&gt;</span>使用SiteMesh的好处?<span class="nt">&lt;/h3&gt;</span>
</span><span class="line">    <span class="nt">&lt;ul&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>被装饰（目标）页面和装饰页面完全分离。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>做到真正的页面复用，一个装饰页面装饰多个被装饰（目标）页面。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>更容易实现统一的网站风格。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>还有。。。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">    <span class="nt">&lt;/ul&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这就是一个普通的页面，但是被SiteMesh装饰之后，就会自动去掉<code>&lt;html&gt; &lt;body&gt; &lt;head&gt;</code>等元素，
然后把相应的东西放在模板对应位置上。</p>

<p>我们来看一下，被SiteMesh装饰过的页面源代码：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line"><span class="nt">&lt;title&gt;</span>QuickStart示例:被装饰（目标）页面title<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html;charset=utf-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Cache-Control&quot;</span> <span class="na">content=</span><span class="s">&quot;no-store&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Pragma&quot;</span> <span class="na">content=</span><span class="s">&quot;no-cache&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Expires&quot;</span> <span class="na">content=</span><span class="s">&quot;0&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">type=</span><span class="s">&quot;image/x-icon&quot;</span> <span class="na">href=</span><span class="s">&quot;/SpringMVC/static/images/favicon.ico&quot;</span> <span class="na">rel=</span><span class="s">&quot;shortcut icon&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;/SpringMVC/sc/bootstrap/2.3.0/css/bootstrap.min.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;/SpringMVC/sc/jquery-validation/1.11.0/validate.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;/SpringMVC/css/base/default.css&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/SpringMVC/sc/jquery/jquery-1.9.1.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/SpringMVC/sc/jquery-validation/1.11.0/jquery.validate.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/SpringMVC/sc/jquery-validation/1.11.0/messages_bs_zh.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;/js/hello.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;header&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;h4&gt;</span>被装饰（目标）页面body标签内内容。<span class="nt">&lt;/h4&gt;</span>
</span><span class="line">    <span class="nt">&lt;h3&gt;</span>使用SiteMesh的好处?<span class="nt">&lt;/h3&gt;</span>
</span><span class="line">    <span class="nt">&lt;ul&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>被装饰（目标）页面和装饰页面完全分离。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>做到真正的页面复用，一个装饰页面装饰多个被装饰（目标）页面。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>更容易实现统一的网站风格。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">        <span class="nt">&lt;li&gt;</span>还有。。。<span class="nt">&lt;/li&gt;</span>
</span><span class="line">    <span class="nt">&lt;/ul&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;footer&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    Copyright <span class="ni">&amp;copy;</span> 2005-2012 <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>spring.org.cn<span class="nt">&lt;/a&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/SpringMVC/sc/bootstrap/2.3.0/js/bootstrap.min.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">总结</h3>
<p>SiteMesh配置简单，使用灵活，几乎不会影响我们的正常开发，作为一个默默无闻的好帮手，非常推荐使用。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用PyInstaller打包Python程序]]></title>
    <link href="http://yidao620c.github.io/blog/20150423/pyinstaller.html"/>
    <updated>2015-04-23T10:22:26+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150423/pyinstaller</id>
    <content type="html"><![CDATA[<h3 id="pyinstaller">PyInstaller介绍：</h3>
<p>PyInstaller是一个能将Python程序转换成单个可执行文件的程序，
操作系统支持Windows, Linux, Mac OS X, Solaris和AIX。并且很多包都支持开箱即用，不依赖环境。</p>

<p>环境为windows7操作系统，python2.7.8 virtual environment</p>

<p>官网：<a href="https://github.com/pyinstaller/pyinstaller">https://github.com/pyinstaller/pyinstaller</a></p>

<h3 id="section">详细步骤：</h3>
<p>1. win7下面先安装这个依赖：pywin32，下载下来后切换到venv2.7，然后使用easy_install xxx.exe安装</p>

<p>2. pip安装PyInstaller：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">pip install pyinstaller</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3. 打包过程中可能会出现msvcp90.dll找不到的问题，
去<a href="http://cn.dll-files.com/msvcp90.dll.html">http://cn.dll-files.com/msvcp90.dll.html</a>下载第三个zip文件，
解压后放到C:\Windows\System32，如果是64位的还要放到C:\Windows\SysWOW64目录下。<!--more--></p>

<p>4. 再次运行报MSVCR90.dll找不到，同理去<a href="http://cn.dll-files.com/MSVCR90.dll.html">http://cn.dll-files.com/MSVCR90.dll.html</a>下载MSVCR90.dll，
放到C:\Windows\System32和C:\Windows\SysWOW64中。</p>

<p>5. 将你的整个程序先复制到某个临时文件夹下面，比如D:\tmp\core-wxpython，此目录下有个main.py是执行入口</p>

<p>6. 执行build命令，并添加必要的搜索路径，外加执行文件的图标：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd D:\tmp\core-wxpython
</span><span class="line">pyinstaller -F -w -i d:\tmp\main.ico main.py</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>如果还想添加自定义的依赖库，就要加上-p参数：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">pyinstaller -F -w -p D:\tmp\core-python\libs -i d:\tmp\main.ico main.py</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>参数说明：</p>

<pre><code>-F 表示生成单个可执行文件
-w 表示去掉控制台窗口，这在GUI界面时非常有用。不过如果是命令行程序的话那就把这个选项删除吧！
-p 表示你自己自定义需要加载的类路径，一般情况下用不到
-i 表示可执行文件的图标
</code></pre>

<p><em>注意的事情</em></p>

<p>1). 检查生成的\XXX\build\pyi.win32\XXX\warnXXX.txt(XXX是你的项目名）中，
是否缺少了必要的模块。如果有缺少的，那么去如上所述，添加必要的搜素路径，
使得pyinstaller在运行时，可以找到对应的模块并集成进来。</p>

<p>2). 此处我这里没有UPX，暂时没去折腾。估计是用UPX去压缩，压缩后所生成的exe文件的大小，会小得多。</p>

<p>7. 如果发现报错：pywintypes.error: (193, ‘LoadLibraryEx’… )
原因是添加图标后缀必须是xxx.ico才行，重新去网上下载一个ico格式的图片，再次运行就好了。</p>

<p>8. 我测试了一个使用wxpython写的gui程序，源码里面引用了一张图片，
使用wx.Image(os.path.abspath(<strong>file</strong>/me.jpg), wx.BITMAP_TYPE_JPEG)来加载，
然后打包成exe后发现找不到图片了，报错。</p>

<p>解决办法：</p>

<p>第一步，在程序中将资源文件都放到一个单独的文件夹中，比如项目根目录下面的resources</p>

<p>第二步，修改程序中引用这些资源文件比如图片的代码：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">resource_path</span><span class="p">(</span><span class="n">relative_path</span><span class="p">):</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot;定义一个读取相对路径的函数&quot;&quot;&quot;</span>
</span><span class="line">    <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">sys</span><span class="p">,</span> <span class="s">&quot;_MEIPASS&quot;</span><span class="p">):</span>
</span><span class="line">        <span class="n">base_path</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">_MEIPASS</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">        <span class="n">base_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">base_path</span><span class="p">,</span> <span class="n">relative_path</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后每次在获取图片的时候，这么引用它的目录：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">img</span> <span class="o">=</span> <span class="n">wx</span><span class="o">.</span><span class="n">Image</span><span class="p">(</span><span class="n">resource_path</span><span class="p">(</span><span class="s">&#39;resources/me.jpg&#39;</span><span class="p">),</span> <span class="n">wx</span><span class="o">.</span><span class="n">BITMAP_TYPE_JPEG</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>第三步，先运行第6步生成一个main.spec文件</p>

<p>第四步，修改main.spec文件：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># -*- mode: python -*-</span>
</span><span class="line"><span class="n">a</span> <span class="o">=</span> <span class="n">Analysis</span><span class="p">([</span><span class="s">&#39;main.py&#39;</span><span class="p">],</span>
</span><span class="line">             <span class="n">pathex</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;d:</span><span class="se">\\</span><span class="s">tmp</span><span class="se">\\</span><span class="s">core-wxpython&#39;</span><span class="p">],</span>
</span><span class="line">             <span class="n">hiddenimports</span><span class="o">=</span><span class="p">[],</span>
</span><span class="line">             <span class="n">hookspath</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class="line">             <span class="n">runtime_hooks</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
</span><span class="line"><span class="n">pyz</span> <span class="o">=</span> <span class="n">PYZ</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">pure</span><span class="p">)</span>
</span><span class="line"><span class="n">exe</span> <span class="o">=</span> <span class="n">EXE</span><span class="p">(</span><span class="n">pyz</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">scripts</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">binaries</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">zipfiles</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">datas</span><span class="p">,</span>
</span><span class="line">          <span class="p">[(</span><span class="s">&#39;</span><span class="se">\\</span><span class="s">resources</span><span class="se">\\</span><span class="s">me.jpg&#39;</span><span class="p">,</span><span class="s">&#39;D:</span><span class="se">\\</span><span class="s">tmp</span><span class="se">\\</span><span class="s">core-wxpython</span><span class="se">\\</span><span class="s">resources</span><span class="se">\\</span><span class="s">me.jpg&#39;</span><span class="p">,</span><span class="s">&#39;DATA&#39;</span><span class="p">)],</span>
</span><span class="line">          <span class="n">name</span><span class="o">=</span><span class="s">&#39;main.exe&#39;</span><span class="p">,</span>
</span><span class="line">          <span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class="line">          <span class="n">strip</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class="line">          <span class="n">upx</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
</span><span class="line">          <span class="n">console</span><span class="o">=</span><span class="bp">True</span> <span class="p">,</span> <span class="n">icon</span><span class="o">=</span><span class="s">&#39;d:</span><span class="se">\\</span><span class="s">tmp</span><span class="se">\\</span><span class="s">main.ico&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>注意：我在a.datas下面添加了那行配置，具体的路径自己去修改下。</p>

<p>上面是添加单个文件，如果有多个文件，可以一个个的添加。不过如果文件多了话，那么就使用下面的方法：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># -*- mode: python -*-</span>
</span><span class="line"><span class="n">a</span> <span class="o">=</span> <span class="n">Analysis</span><span class="p">([</span><span class="s">&#39;main.py&#39;</span><span class="p">],</span>
</span><span class="line">             <span class="n">pathex</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;d:</span><span class="se">\\</span><span class="s">tmp</span><span class="se">\\</span><span class="s">core-wxpython&#39;</span><span class="p">],</span>
</span><span class="line">             <span class="n">hiddenimports</span><span class="o">=</span><span class="p">[],</span>
</span><span class="line">             <span class="n">hookspath</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class="line">             <span class="n">runtime_hooks</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">extra_datas</span><span class="p">(</span><span class="n">mydir</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">rec_glob</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">files</span><span class="p">):</span>
</span><span class="line">        <span class="kn">import</span> <span class="nn">os</span>
</span><span class="line">        <span class="kn">import</span> <span class="nn">glob</span>
</span><span class="line">        <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">p</span><span class="p">):</span>
</span><span class="line">            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">d</span><span class="p">):</span>
</span><span class="line">                <span class="n">files</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span><span class="line">            <span class="n">rec_glob</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="s">/*&quot;</span> <span class="o">%</span> <span class="n">d</span><span class="p">,</span> <span class="n">files</span><span class="p">)</span>
</span><span class="line">    <span class="n">files</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line">    <span class="n">rec_glob</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="s">/*&quot;</span> <span class="o">%</span> <span class="n">mydir</span><span class="p">,</span> <span class="n">files</span><span class="p">)</span>
</span><span class="line">    <span class="n">extra_datas</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line">    <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
</span><span class="line">        <span class="n">extra_datas</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">f</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="s">&#39;DATA&#39;</span><span class="p">))</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="n">extra_datas</span>
</span><span class="line">
</span><span class="line"><span class="c"># append the &#39;resources&#39; dir</span>
</span><span class="line"><span class="n">a</span><span class="o">.</span><span class="n">datas</span> <span class="o">+=</span> <span class="n">extra_datas</span><span class="p">(</span><span class="s">&#39;resources&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">pyz</span> <span class="o">=</span> <span class="n">PYZ</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">pure</span><span class="p">)</span>
</span><span class="line"><span class="n">exe</span> <span class="o">=</span> <span class="n">EXE</span><span class="p">(</span><span class="n">pyz</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">scripts</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">binaries</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">zipfiles</span><span class="p">,</span>
</span><span class="line">          <span class="n">a</span><span class="o">.</span><span class="n">datas</span><span class="p">,</span>
</span><span class="line">          <span class="n">name</span><span class="o">=</span><span class="s">&#39;main.exe&#39;</span><span class="p">,</span>
</span><span class="line">          <span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class="line">          <span class="n">strip</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
</span><span class="line">          <span class="n">upx</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
</span><span class="line">          <span class="n">console</span><span class="o">=</span><span class="bp">True</span> <span class="p">,</span> <span class="n">icon</span><span class="o">=</span><span class="s">&#39;d:</span><span class="se">\\</span><span class="s">tmp</span><span class="se">\\</span><span class="s">main.ico&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>它会把某个指定的文件下的所有文件递归的添加到最终的包中。省去很多事情！</p>

<p>第五步，执行：pyinstaller D:\tmp\core-wxpython\main.spec</p>

<p>然后就大功告成了！！！在dist目录下面有个main.exe单独的可执行文件，打开它吧。^_^</p>

<p>如果在执行过程中出错，或者双击打开没任何反应。
可以先去掉-w参数后，在控制台窗口打开这个可执行文件，会输出详细出错信息去调试。</p>

<h3 id="section-1">其他问题记录</h3>
<p>1. 找不到pkg_resources</p>

<pre><code>ImportError: No module named pkg_resources
</code></pre>

<p>解决办法是在安装pycrypto之前，先安装distribute库</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">curl</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">svn</span><span class="o">.</span><span class="n">apache</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">repos</span><span class="o">/</span><span class="n">asf</span><span class="o">/</span><span class="n">oodt</span><span class="o">/</span><span class="n">tools</span><span class="o">/</span><span class="n">oodtsite</span><span class="o">.</span><span class="n">publisher</span><span class="o">/</span><span class="n">trunk</span><span class="o">/</span><span class="n">distribute_setup</span><span class="o">.</span><span class="n">py</span> <span class="o">|</span> <span class="n">python</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后再安装windows下面对应的pycrypto库</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># http://www.voidspace.org.uk/python/modules.shtml#pycrypto</span>
</span><span class="line"><span class="n">easy_install</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">voidspace</span><span class="o">.</span><span class="n">org</span><span class="o">.</span><span class="n">uk</span><span class="o">/</span><span class="n">downloads</span><span class="o">/</span><span class="n">pycrypto26</span><span class="o">/</span><span class="n">pycrypto</span><span class="o">-</span><span class="mf">2.6</span><span class="o">.</span><span class="n">win</span><span class="o">-</span><span class="n">amd64</span><span class="o">-</span><span class="n">py2</span><span class="o">.</span><span class="mf">7.</span><span class="n">exe</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2. 打包时加上-w选项去掉console时出错</p>

<p>不要在程序中使用任何print语句，或者是你将stdout重定向到一个日志、文件或任何其他非控制台地方。</p>

<p>最好的方法是利用日志功能，将输出定向到日志文件中去，在main函数开头添加如下代码：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">logging</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">tempfile</span>
</span><span class="line"><span class="n">logging</span><span class="o">.</span><span class="n">basicConfig</span><span class="p">(</span><span class="n">level</span><span class="o">=</span><span class="n">logging</span><span class="o">.</span><span class="n">INFO</span><span class="p">,</span>
</span><span class="line">                    <span class="n">filename</span><span class="o">=</span><span class="n">tempfile</span><span class="o">.</span><span class="n">TemporaryFile</span><span class="p">()</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
</span><span class="line">                    <span class="n">format</span><span class="o">=</span><span class="s">&#39;</span><span class="si">%(asctime)s</span><span class="s"> </span><span class="si">%(message)s</span><span class="s">&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>用到logging的时候，需要配置日志到文件中，而不是console：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">logging</span>
</span><span class="line"><span class="n">_LOGGING</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">getLogger</span><span class="p">(</span><span class="n">__file__</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>3. pyinstaller用one file方式打包的程式如果有用到subprocess.Popen會有問題</p>

<p>问题参考：<a href="http://www.pyinstaller.org/ticket/597">http://www.pyinstaller.org/ticket/597</a></p>

<p>最後找到的方法是
<a href="http://code.activestate.com/recipes/578300-python-subprocess-hide-console-on-windows/">http://code.activestate.com/recipes/578300-python-subprocess-hide-console-on-windows/</a></p>

<p>建立一個隐藏窗口，就正常了~</p>

<p>最后用pyinstaller設one folder &amp; no console打包都不跳出小窗口了</p>

<p>解决办法就是自定义一个subprocess_call函数来代替subprocess的call调用，不适用Popen了：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">subprocess_call</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class="line">    <span class="c"># also works for Popen. It creates a new *hidden* window,</span>
</span><span class="line">    <span class="c"># so it will work in frozen apps (.exe).</span>
</span><span class="line">    <span class="k">if</span> <span class="n">IS_WIN32</span><span class="p">:</span>
</span><span class="line">        <span class="n">_LOGGING</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="s">&#39;subprocess_call==IS_WIN32&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="n">startupinfo</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">STARTUPINFO</span><span class="p">()</span>
</span><span class="line">        <span class="n">startupinfo</span><span class="o">.</span><span class="n">dwFlags</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">CREATE_NEW_CONSOLE</span> <span class="o">|</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">STARTF_USESHOWWINDOW</span>
</span><span class="line">        <span class="n">startupinfo</span><span class="o">.</span><span class="n">wShowWindow</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">SW_HIDE</span>
</span><span class="line">        <span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;startupinfo&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">startupinfo</span>
</span><span class="line">    <span class="n">retcode</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">retcode</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>调用方法：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">exresult</span> <span class="o">=</span> <span class="n">subprocess_call</span><span class="p">(</span><span class="n">exe_command</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这个方法会等命令执行完成，返回值为0表示正常结束！</p>

<p>4. 打包后不能放到中文路径下执行
解决办法是下载安装PyInstaller的中文支持库，安装后再重新执行pyinstaller打包命令：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">dkw72n</span><span class="o">/</span><span class="n">pyinstaller</span><span class="o">.</span><span class="n">git</span>
</span><span class="line"><span class="n">python</span> <span class="n">setup</span><span class="o">.</span><span class="n">py</span> <span class="n">install</span>
</span><span class="line"><span class="n">pyinstaller</span> <span class="o">-</span><span class="n">F</span> <span class="o">-</span><span class="n">w</span> <span class="o">-</span><span class="n">i</span> <span class="n">d</span><span class="p">:</span>\<span class="n">tmp</span>\<span class="n">main</span><span class="o">.</span><span class="n">ico</span> <span class="n">main</span><span class="o">.</span><span class="n">py</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python函数装饰器详解]]></title>
    <link href="http://yidao620c.github.io/blog/20150423/python-decorator.html"/>
    <updated>2015-04-23T10:06:22+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150423/python-decorator</id>
    <content type="html"><![CDATA[<h3 id="section">装饰器简介</h3>
<p>python有着强大的表达式语法和函数特性，其中一个我的最爱便是装饰器。
在设计模式中，装饰器能够在不使用子类的情况下动态的修改函数、方法或类的功能。</p>

<p>当你需要扩展某个函数的功能却不想直接修改这个函数的时候，装饰器就可以派上用场了。
实现装饰器模式有很多种方法，但是python通过强大的语法支持来让这个变得相当容易。</p>

<p>在这篇文章中我将深入讲解Python的函数装饰器，并通过一系列的源码示例来彻底讲清楚这个东西。
所有例子都在Python2.7下运行通过，不过只需要稍作改变就可以运行在Python3上了，
甚至我猜测什么都不用改变都可以的，读者可以自己去试试。</p>

<p>本质上来讲，装饰器是以包装器形式工作的，其实就是在执行目标函数之前或之后加入自己的逻辑，
而不需要改变目标函数本身就可以增强它的功能，也就是说装饰了它。<!--more--></p>

<h3 id="section-1">你需要知道的函数</h3>
<p>在深入讨论之前，有一些基本的概念需要讲明清楚。
在Python中，函数是一等公民，它们就是对象，因此我们可以使用它来做很多事。</p>

<p>1.把函数赋值给某个变量：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">greet</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">    <span class="k">return</span> <span class="s">&quot;hello &quot;</span><span class="o">+</span><span class="n">name</span>
</span><span class="line">
</span><span class="line"><span class="n">greet_someone</span> <span class="o">=</span> <span class="n">greet</span>
</span><span class="line"><span class="k">print</span> <span class="n">greet_someone</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs: hello John</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2.在某个函数内部定义另外一个函数：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">greet</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_message</span><span class="p">():</span>
</span><span class="line">        <span class="k">return</span> <span class="s">&quot;Hello &quot;</span>
</span><span class="line">
</span><span class="line">    <span class="n">result</span> <span class="o">=</span> <span class="n">get_message</span><span class="p">()</span><span class="o">+</span><span class="n">name</span>
</span><span class="line">    <span class="k">return</span> <span class="n">result</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">greet</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs: Hello John</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3.函数可以被当做参数传递给另外一个函数：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">greet</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">   <span class="k">return</span> <span class="s">&quot;Hello &quot;</span> <span class="o">+</span> <span class="n">name</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">call_func</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">    <span class="n">other_name</span> <span class="o">=</span> <span class="s">&quot;John&quot;</span>
</span><span class="line">    <span class="k">return</span> <span class="n">func</span><span class="p">(</span><span class="n">other_name</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">call_func</span><span class="p">(</span><span class="n">greet</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs: Hello John</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>4.函数返回值可以是其他函数：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">compose_greet_func</span><span class="p">():</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_message</span><span class="p">():</span>
</span><span class="line">        <span class="k">return</span> <span class="s">&quot;Hello there!&quot;</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="n">get_message</span>
</span><span class="line">
</span><span class="line"><span class="n">greet</span> <span class="o">=</span> <span class="n">compose_greet_func</span><span class="p">()</span>
</span><span class="line"><span class="k">print</span> <span class="n">greet</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs: Hello there!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>5.内部函数可以访问包含它的函数的局部变量：</p>

<p>其实就是我们所说的闭包，在构建装饰器的时候这是一个非常有用的模式。
另外还要注意，Python只允许读取外部变量而不允许修改。</p>

<p>观察一下下面的代码，
注意我们是如何通过修改上面实例代码来读取外部函数中的name参数值并返回一个新的函数的。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">compose_greet_func</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_message</span><span class="p">():</span>
</span><span class="line">        <span class="k">return</span> <span class="s">&quot;Hello there &quot;</span><span class="o">+</span><span class="n">name</span><span class="o">+</span><span class="s">&quot;!&quot;</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="n">get_message</span>
</span><span class="line">
</span><span class="line"><span class="n">greet</span> <span class="o">=</span> <span class="n">compose_greet_func</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">print</span> <span class="n">greet</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs: Hello there John!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">构造装饰器</h3>
<p>函数装饰器就是已存在函数的一个包装器。我们把上面的这些结合起来就能构建一个装饰器了。</p>

<p>下面例子中我们先构造一个函数来用p标签包装其他函数返回的一个字符串。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">   <span class="k">return</span> <span class="s">&quot;lorem ipsum, {0} dolor sit amet&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">p_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">   <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">       <span class="k">return</span> <span class="s">&quot;&lt;p&gt;{0}&lt;/p&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">   <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">
</span><span class="line"><span class="n">my_get_text</span> <span class="o">=</span> <span class="n">p_decorate</span><span class="p">(</span><span class="n">get_text</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">my_get_text</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># &lt;p&gt;Outputs lorem ipsum, John dolor sit amet&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这是我们的第一个装饰器——一个增强其他函数功能并返回新函数的函数。
为了让get_text函数被p_decorate装饰，我们只需要将get_text作为参数传给后者，
并将结果赋值给一个变量，然后就可以对这个变量函数调用就能实现效果了。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">get_text</span> <span class="o">=</span> <span class="n">p_decorate</span><span class="p">(</span><span class="n">get_text</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs lorem ipsum, John dolor sit amet</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>主要原来的函数有一个name参数，那么我们调用的时候将这个参数传递给装饰器函数就行了。</p>

<h3 id="python">Python的装饰器语法</h3>
<p>Python通过一些语法糖让创建和使用装饰器变得相当简单。
我们并不需要使用语句<code>get_text = p_decorator(get_text)</code>来装饰get_text。
有一个快捷方式可以做到，它会在被装饰函数前面加一层装饰函数。装饰器的名字需要使用@前缀。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">p_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">   <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">       <span class="k">return</span> <span class="s">&quot;&lt;p&gt;{0}&lt;/p&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">   <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">
</span><span class="line"><span class="nd">@p_decorate</span>
</span><span class="line"><span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">   <span class="k">return</span> <span class="s">&quot;lorem ipsum, {0} dolor sit amet&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs &lt;p&gt;lorem ipsum, John dolor sit amet&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>现在我们再考虑下利用2个其他的函数来装饰我们的get_text函数，在其输出结果上添加一个div和strong标签。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">p_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">   <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">       <span class="k">return</span> <span class="s">&quot;&lt;p&gt;{0}&lt;/p&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">   <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">strong_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="s">&quot;&lt;strong&gt;{0}&lt;/strong&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">    <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">div_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="s">&quot;&lt;div&gt;{0}&lt;/div&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">    <span class="k">return</span> <span class="n">func_wrapper</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>如果我们使用原来的语法，那么就得这么写：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">get_text</span> <span class="o">=</span> <span class="n">div_decorate</span><span class="p">(</span><span class="n">p_decorate</span><span class="p">(</span><span class="n">strong_decorate</span><span class="p">(</span><span class="n">get_text</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>但是在python中，你就可以这样来定义了：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="nd">@div_decorate</span>
</span><span class="line"><span class="nd">@p_decorate</span>
</span><span class="line"><span class="nd">@strong_decorate</span>
</span><span class="line"><span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">   <span class="k">return</span> <span class="s">&quot;lorem ipsum, {0} dolor sit amet&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs &lt;div&gt;&lt;p&gt;&lt;strong&gt;lorem ipsum, John dolor sit amet&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>上面需要注意的是装饰器的顺序，如果顺序不同，输出结果也会不一样。</p>

<h3 id="section-3">装饰方法</h3>
<p>在python中，其实方法就是第一个参数为当前对象的引用的函数而已。
我们同样能够给方法构造装饰器，只需要将self参数放到包装函数中。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">p_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">   <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">       <span class="k">return</span> <span class="s">&quot;&lt;p&gt;{0}&lt;/p&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="bp">self</span><span class="p">))</span>
</span><span class="line">   <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Person</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;John&quot;</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">family</span> <span class="o">=</span> <span class="s">&quot;Doe&quot;</span>
</span><span class="line">
</span><span class="line">    <span class="nd">@p_decorate</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_fullname</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="o">+</span><span class="s">&quot; &quot;</span><span class="o">+</span><span class="bp">self</span><span class="o">.</span><span class="n">family</span>
</span><span class="line">
</span><span class="line"><span class="n">my_person</span> <span class="o">=</span> <span class="n">Person</span><span class="p">()</span>
</span><span class="line"><span class="k">print</span> <span class="n">my_person</span><span class="o">.</span><span class="n">get_fullname</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>一个更好的做法是改造我们的装饰器使他们可以作用于函数以及类方法。
可以将*args和**kwargs作为包装器的参数，然后它就能接受任意数量的位置参数和关键字参数了。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">p_decorate</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">   <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class="line">       <span class="k">return</span> <span class="s">&quot;&lt;p&gt;{0}&lt;/p&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">))</span>
</span><span class="line">   <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Person</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;John&quot;</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">family</span> <span class="o">=</span> <span class="s">&quot;Doe&quot;</span>
</span><span class="line">
</span><span class="line">    <span class="nd">@p_decorate</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_fullname</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="o">+</span><span class="s">&quot; &quot;</span><span class="o">+</span><span class="bp">self</span><span class="o">.</span><span class="n">family</span>
</span><span class="line">
</span><span class="line"><span class="n">my_person</span> <span class="o">=</span> <span class="n">Person</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">my_person</span><span class="o">.</span><span class="n">get_fullname</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-4">给装饰器传递参数</h3>
<p>回顾下上面的例子，你会发现例子中的装饰器太过冗余了。
3个装饰器(div_decorate,p_decorate, strong_decorate)拥有相同功能，只是使用了不同的标签包装而已。</p>

<p>我们可以做得更好，为什么不使用一种更加通用的方式，将标签作为参数传递进来呢？</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">tags</span><span class="p">(</span><span class="n">tag_name</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">tags_decorator</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">        <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">            <span class="k">return</span> <span class="s">&quot;&lt;{0}&gt;{1}&lt;/{0}&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">        <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">    <span class="k">return</span> <span class="n">tags_decorator</span>
</span><span class="line">
</span><span class="line"><span class="nd">@tags</span><span class="p">(</span><span class="s">&quot;p&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">    <span class="k">return</span> <span class="s">&quot;Hello &quot;</span><span class="o">+</span><span class="n">name</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="p">(</span><span class="s">&quot;John&quot;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="c"># Outputs &lt;p&gt;Hello John&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-5">调试被装饰函数</h3>
<p>最后当我们调试被装饰函数时会发现它的名字、模块和文档字符串都发生了改变。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="o">.</span><span class="n">__name__</span>
</span><span class="line"><span class="c"># Outputs func_wrapper</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>我们期望的输出应该是get_text，get_text的__name__、<strong>doc</strong> 和 __module__已经被包装函数覆盖了。</p>

<h3 id="functools">使用functools来解决</h3>
<p>幸运的是python2.5版本以上有了一个functools包可以来解决这个问题。
只需要简单在包装函数上标注@wrap标签即可。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="n">wraps</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">tags</span><span class="p">(</span><span class="n">tag_name</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">tags_decorator</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
</span><span class="line">        <span class="nd">@wraps</span><span class="p">(</span><span class="n">func</span><span class="p">)</span>
</span><span class="line">        <span class="k">def</span> <span class="nf">func_wrapper</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">            <span class="k">return</span> <span class="s">&quot;&lt;{0}&gt;{1}&lt;/{0}&gt;&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">func</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>
</span><span class="line">        <span class="k">return</span> <span class="n">func_wrapper</span>
</span><span class="line">    <span class="k">return</span> <span class="n">tags_decorator</span>
</span><span class="line">
</span><span class="line"><span class="nd">@tags</span><span class="p">(</span><span class="s">&quot;p&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">def</span> <span class="nf">get_text</span><span class="p">(</span><span class="n">name</span><span class="p">):</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot;returns some text&quot;&quot;&quot;</span>
</span><span class="line">    <span class="k">return</span> <span class="s">&quot;Hello &quot;</span><span class="o">+</span><span class="n">name</span>
</span><span class="line">
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="o">.</span><span class="n">__name__</span> <span class="c"># get_text</span>
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="o">.</span><span class="n">__doc__</span> <span class="c"># returns some text</span>
</span><span class="line"><span class="k">print</span> <span class="n">get_text</span><span class="o">.</span><span class="n">__module__</span> <span class="c"># __main__</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>从结果可以看出get_text函数的属性都恢复正常了。</p>

<h3 id="section-6">哪里使用装饰器</h3>
<p>这篇文章中的例子相对来讲是比较简单的。它能给你的程序带来很大的方便。
一般来讲，装饰器用在需要扩展某个函数行为而又不想改变这个函数本身内容的时候。</p>

<p>我建议你查阅一下Python Decorator库来获取更多非常有用的装饰器。</p>

<h3 id="section-7">更多阅读资源</h3>
<p>下面是一个值得去查看的关于装饰器的其他资源列表：</p>

<ul>
  <li><a href="https://wiki.python.org/moin/PythonDecorators#What_is_a_Decorator">什么是装饰器?</a></li>
  <li><a href="http://www.artima.com/weblogs/viewpost.jsp?thread=240808">Decorators I: Python装饰器入门</a></li>
  <li><a href="http://www.artima.com/weblogs/viewpost.jsp?thread=240845">Python Decorators II: 装饰器参数</a></li>
  <li><a href="http://www.artima.com/weblogs/viewpost.jsp?thread=241209">Python Decorators III: 一个基于装饰器的构建系统</a></li>
  <li><a href="http://www.amazon.com/gp/product/B006ZHJSIM/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B006ZHJSIM&amp;linkCode=as2&amp;tag=thcosh00-20">Python装饰器指南 Matt Harrison</a></li>
</ul>

<p>到此为止Python装饰器概率已经介绍完了。我希望你能从中受益，
如果你哈有任何的建议或问题，可以在评论中提出来。祝您编程快乐！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（14）- 集成Xadmin]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-14.html"/>
    <updated>2015-04-21T21:45:29+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-14</id>
    <content type="html"><![CDATA[<h3 id="xadmin">Xadmin介绍</h3>
<p>xadmin是一个django的管理后台实现，使用了更加灵活的架构设计及Bootstrap UI框架，
目的是替换现有的admin，国人开发，有许多新的特性：</p>

<ul>
  <li>兼容 Django Admin</li>
  <li>使用 Bootstrap 作为 UI 框架</li>
  <li>编辑页面灵活布局</li>
  <li>主页面仪表盘及小部件</li>
  <li>过滤器强化</li>
  <li>数据导出</li>
  <li>强大的插件机制</li>
</ul>

<p>项目主页：<a href="http://sshwsfc.github.io/django-xadmin/">http://sshwsfc.github.io/django-xadmin/</a></p>

<p>在线demo: <a href="http://demo.xadmin.io/">http://demo.xadmin.io/</a></p>

<h3 id="django">与django的集成</h3>

<p>本篇以simpleblog项目为例，介绍下怎样在django中集成xadmin<!--more--></p>

<h4 id="python27">python2.7环境切换</h4>

<p>注意，前面的教程都是在python3.4环境下开放的。
而目前为止xadmin还只能支持python2，所以我们要在此项目基础上新建一个分支py27，
然后我们创建一个python2.7的virtual environment，切换到此环境下面即可。</p>

<h4 id="section">添加依赖</h4>

<p>在requirements.txt中添加如下的依赖，注意：要用到xadmin的django1.7分支</p>

<pre><code>django-reversion==1.8.5
xlwt==0.7.5
git+https://github.com/sshwsfc/django-xadmin.git@django1.7
</code></pre>

<h4 id="settingspy">修改settings.py</h4>

<p>增加xadmin的配置如下</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">ADMINS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="c"># (&#39;Your Name&#39;, &#39;your_email@example.com&#39;),</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line"><span class="n">MANAGERS</span> <span class="o">=</span> <span class="n">ADMINS</span>
</span><span class="line">
</span><span class="line"><span class="c"># Application definition</span>
</span><span class="line"><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="c"># ...</span>
</span><span class="line">    <span class="s">&#39;xadmin&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;crispy_forms&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;reversion&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="c"># ...</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="xadmin-1">添加/xadmin的链接</h4>

<p>修改<code>mysite/urls.py</code>如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/env python</span>
</span><span class="line"><span class="c"># -*- encoding: utf-8 -*-</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line"><span class="c"># version模块自动注册需要版本控制的 Model</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">xadmin.plugins</span> <span class="kn">import</span> <span class="n">xversion</span>
</span><span class="line"><span class="n">xversion</span><span class="o">.</span><span class="n">register_models</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span>
</span><span class="line">    <span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;xadmin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">xadmin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;xadmin&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="c"># ...</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="adminxpy">创建adminx.py</h4>

<p>在blog/目录下创建adminx.py，内容如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/env python</span>
</span><span class="line"><span class="c"># -*- encoding: utf-8 -*-</span>
</span><span class="line"><span class="sd">&quot;&quot;&quot;</span>
</span><span class="line"><span class="sd">Topic: adminx定制类</span>
</span><span class="line"><span class="sd">Desc :</span>
</span><span class="line"><span class="sd">&quot;&quot;&quot;</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">xadmin</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">xadmin.views</span> <span class="kn">as</span> <span class="nn">xviews</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.models</span> <span class="kn">import</span> <span class="n">Tag</span><span class="p">,</span> <span class="n">Category</span><span class="p">,</span> <span class="n">Post</span><span class="p">,</span> <span class="n">Comment</span><span class="p">,</span> <span class="n">Evaluate</span><span class="p">,</span> <span class="n">Page</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">xadmin.layout</span> <span class="kn">import</span> <span class="n">Main</span><span class="p">,</span> <span class="n">TabHolder</span><span class="p">,</span> <span class="n">Tab</span><span class="p">,</span> <span class="n">Fieldset</span><span class="p">,</span> <span class="n">Row</span><span class="p">,</span> <span class="n">Col</span><span class="p">,</span> <span class="n">AppendedText</span><span class="p">,</span> <span class="n">Side</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">BaseSetting</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class="line">    <span class="n">enable_themes</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class="line">    <span class="n">use_bootswatch</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class="line"><span class="n">xadmin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">xviews</span><span class="o">.</span><span class="n">BaseAdminView</span><span class="p">,</span> <span class="n">BaseSetting</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">AdminSettings</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class="line">    <span class="c"># 设置base_site.html的Title</span>
</span><span class="line">    <span class="n">site_title</span> <span class="o">=</span> <span class="s">&#39;博客管理后台&#39;</span>
</span><span class="line">    <span class="c"># 设置base_site.html的Footer</span>
</span><span class="line">    <span class="n">site_footer</span> <span class="o">=</span> <span class="s">&#39;Winhong Inc.&#39;</span>
</span><span class="line">    <span class="n">menu_style</span> <span class="o">=</span> <span class="s">&#39;default&#39;</span>
</span><span class="line">
</span><span class="line">    <span class="c"># 菜单设置</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_site_menu</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="p">(</span>
</span><span class="line">            <span class="p">{</span><span class="s">&#39;title&#39;</span><span class="p">:</span> <span class="s">&#39;博客管理&#39;</span><span class="p">,</span> <span class="s">&#39;perm&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_model_perm</span><span class="p">(</span><span class="n">Page</span><span class="p">,</span> <span class="s">&#39;change&#39;</span><span class="p">),</span> <span class="s">&#39;menus&#39;</span><span class="p">:</span> <span class="p">(</span>
</span><span class="line">                <span class="p">{</span><span class="s">&#39;title&#39;</span><span class="p">:</span> <span class="s">&#39;所有页面&#39;</span><span class="p">,</span> <span class="s">&#39;icon&#39;</span><span class="p">:</span> <span class="s">&#39;fa fa-vimeo-square&#39;</span>
</span><span class="line">                    <span class="p">,</span> <span class="s">&#39;url&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_model_url</span><span class="p">(</span><span class="n">Page</span><span class="p">,</span> <span class="s">&#39;changelist&#39;</span><span class="p">)},</span>
</span><span class="line">                <span class="p">{</span><span class="s">&#39;title&#39;</span><span class="p">:</span> <span class="s">&#39;分类目录&#39;</span><span class="p">,</span> <span class="s">&#39;icon&#39;</span><span class="p">:</span> <span class="s">&#39;fa fa-vimeo-square&#39;</span>
</span><span class="line">                    <span class="p">,</span> <span class="s">&#39;url&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_model_url</span><span class="p">(</span><span class="n">Category</span><span class="p">,</span> <span class="s">&#39;changelist&#39;</span><span class="p">)},</span>
</span><span class="line">            <span class="p">)},</span>
</span><span class="line">        <span class="p">)</span>
</span><span class="line"><span class="n">xadmin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">xviews</span><span class="o">.</span><span class="n">CommAdminView</span><span class="p">,</span> <span class="n">AdminSettings</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">xadmin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Page</span><span class="p">)</span>
</span><span class="line"><span class="n">xadmin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Category</span><span class="p">)</span>
</span><span class="line"><span class="c"># xadmin.site.register(Tag)</span>
</span><span class="line"><span class="c"># xadmin.site.register(Post)</span>
</span><span class="line"><span class="c"># xadmin.site.register(Comment)</span>
</span><span class="line"><span class="c"># xadmin.site.register(Evaluate)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在这里，我们将所有的model都注册到xadmin中去，这样后台就能自动管理它们了。
并且自定义了后台的一些菜单、标题等等。具体的定制方法可以参考xadmin的官方文档。</p>

<h4 id="section-1">添加管理后台链接</h4>

<p>在<code>mysite/templates/mysite/base.html</code>模板中添加/xamdin的管理后台链接：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;meta-2&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;widget widget_meta&quot;</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">h3</span><span class="o">&gt;</span><span class="err">功能</span><span class="o">&lt;/</span><span class="n">h3</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class="line">        <span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">is_superuser</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;/xadmin&quot;</span><span class="o">&gt;</span><span class="err">管理站点</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class="line">        <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">is_authenticated</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;django.contrib.auth.views.logout&#39; %}&quot;</span><span class="o">&gt;</span><span class="err">登出</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;</span>
</span><span class="line">        <span class="o">&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class="line">        <span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;django.contrib.auth.views.login&#39; %}&quot;</span><span class="o">&gt;</span><span class="err">登录</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;</span>
</span><span class="line">        <span class="o">&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class="line">        <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;#&quot;</span><span class="o">&gt;</span><span class="err">文章</span><span class="o">&lt;</span><span class="n">abbr</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;RSS&quot;</span><span class="o">&gt;</span><span class="n">RSS</span><span class="o">&lt;/</span><span class="n">abbr</span><span class="o">&gt;&lt;/</span><span class="n">a</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-2">自定义后台登陆页面</h4>

<p>新建<code>mysite/templates/registration/login.html</code>模板，将xadmin模块中的login.html复制过来，
修改其内容，改成自己想要的形式即可</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line">{% load i18n %}
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;viewport&quot;</span>
</span><span class="line">          <span class="na">content=</span><span class="s">&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;robots&quot;</span> <span class="na">content=</span><span class="s">&quot;NONE,NOARCHIVE&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span>用户登录 - SimpleBlog<span class="nt">&lt;/title&gt;</span>
</span><span class="line">    <span class="c">&lt;!--...中间省略...--&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;xadmin/vendor/jquery/jquery.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body</span> <span class="na">class=</span><span class="s">&quot;login&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">action=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.login&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        {% csrf_token %}
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;panel panel-default panel-single&quot;</span> <span class="na">id=</span><span class="s">&quot;panel-login&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;panel-heading&quot;</span><span class="nt">&gt;</span>
</span><span class="line">                <span class="nt">&lt;h2</span> <span class="na">class=</span><span class="s">&quot;form-signin-heading&quot;</span><span class="nt">&gt;</span>请登录<span class="nt">&lt;/h2&gt;</span>
</span><span class="line">            <span class="nt">&lt;/div&gt;</span>
</span><span class="line">            <span class="c">&lt;!--...中间省略...--&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="c">&lt;!--...中间省略...--&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;xadmin/js/xadmin.main.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;xadmin/js/xadmin.responsive.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span>
</span><span class="line">        <span class="na">src=</span><span class="s">&quot;{% static &#39;xadmin/vendor/jquery-ui/jquery.ui.effect.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;xadmin/js/xadmin.plugin.themes.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这些完成后，我们打开应用，访问<code>管理站点</code>链接，应该可以看到如下的登录页面</p>

<p><img src="http://yidaospace.qiniudn.com/dj110.png" alt="" /></p>

<p>登录后的效果</p>

<p><img src="http://yidaospace.qiniudn.com/dj111.jpg" alt="" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（13）- redis缓存]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-13.html"/>
    <updated>2015-04-21T20:27:29+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-13</id>
    <content type="html"><![CDATA[<h3 id="wiki">Wiki</h3>
<p>Redis 是一个高性能的key-value数据库。redis的出现，
很大程度补偿了memcached这类keyvalue存储的不足，在部分场合可以对关系数据库起到很好的补充作用。
它提供了Python，Ruby，Erlang，PHP客户端，使用很方便。</p>

<p>目前Redis已经发布了3.0版本，正式支持分布式，这个特性太强大，以至于你再不用就对不住自己了。</p>

<h3 id="section">性能测试</h3>
<p>服务器配置：Linux 2.6, Xeon X3320 2.5Ghz</p>

<p>SET操作每秒钟110000次，GET操作每秒钟81000次</p>

<p>stackoverflow网站使用Redis做为缓存服务器。</p>

<h3 id="redis">安装redis</h3>
<p>服务器安装篇我写了专门文章，
请参阅<a href="http://yidao620c.github.io/blog/20150418/redis-install.html">redis入门与安装</a></p>

<h3 id="django">django中的配置</h3>
<p>我们希望在本博客系统中，对于文章点击数、阅览数等数据实现缓存，提高效率。<!--more--></p>

<h4 id="requirementstxt">requirements.txt</h4>
<p>添加如下内容，方便部署到heroku上面</p>

<pre><code>redis==2.10.3
django-redis==3.7.2
APScheduler==3.0.1
</code></pre>

<h4 id="settingspy">settings.py配置</h4>
<p>新增内容</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">urllib.parse</span> <span class="kn">import</span> <span class="n">urlparse</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">dj_database_url</span>
</span><span class="line">
</span><span class="line"><span class="n">redis_url</span> <span class="o">=</span> <span class="n">urlparse</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;REDISTOGO_URL&#39;</span><span class="p">,</span> <span class="s">&#39;redis://localhost:6959&#39;</span><span class="p">))</span>
</span><span class="line"><span class="n">CACHES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;BACKEND&#39;</span><span class="p">:</span> <span class="s">&#39;redis_cache.cache.RedisCache&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;LOCATION&#39;</span><span class="p">:</span> <span class="s">&#39;{0}:{1}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">redis_url</span><span class="o">.</span><span class="n">hostname</span><span class="p">,</span> <span class="n">redis_url</span><span class="o">.</span><span class="n">port</span><span class="p">),</span>
</span><span class="line">        <span class="s">&#39;OPTIONS&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">            <span class="s">&#39;DB&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class="line">            <span class="s">&#39;PASSWORD&#39;</span><span class="p">:</span> <span class="n">redis_url</span><span class="o">.</span><span class="n">password</span><span class="p">,</span>
</span><span class="line">            <span class="s">&#39;CLIENT_CLASS&#39;</span><span class="p">:</span> <span class="s">&#39;redis_cache.client.DefaultClient&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s">&#39;PICKLE_VERSION&#39;</span><span class="p">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="c"># Use the latest protocol version</span>
</span><span class="line">            <span class="s">&#39;SOCKET_TIMEOUT&#39;</span><span class="p">:</span> <span class="mi">60</span><span class="p">,</span>  <span class="c"># in seconds</span>
</span><span class="line">            <span class="s">&#39;IGNORE_EXCEPTIONS&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">SESSION_ENGINE</span> <span class="o">=</span> <span class="s">&#39;django.contrib.sessions.backends.cache&#39;</span>
</span><span class="line"><span class="n">SESSION_CACHE_ALIAS</span> <span class="o">=</span> <span class="s">&#39;default&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c"># 本地开发配置放在local_settings.py中</span>
</span><span class="line"><span class="k">try</span><span class="p">:</span>
</span><span class="line">    <span class="kn">from</span> <span class="nn">.local_settings</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line"><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class="line">    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="localsettingspy">local_settings.py配置</h4>
<p>这个是本地开发时候使用到的配置文件</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line"><span class="n">CACHES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;BACKEND&#39;</span><span class="p">:</span> <span class="s">&#39;redis_cache.cache.RedisCache&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;LOCATION&#39;</span><span class="p">:</span> <span class="s">&#39;192.168.203.95:6379:1&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;OPTIONS&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">            <span class="s">&#39;CLIENT_CLASS&#39;</span><span class="p">:</span> <span class="s">&#39;redis_cache.client.DefaultClient&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="c"># &#39;PASSWORD&#39;: &#39;secretpassword&#39;,</span>
</span><span class="line">            <span class="s">&#39;PICKLE_VERSION&#39;</span><span class="p">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="c"># Use the latest protocol version</span>
</span><span class="line">            <span class="s">&#39;SOCKET_TIMEOUT&#39;</span><span class="p">:</span> <span class="mi">60</span><span class="p">,</span>  <span class="c"># in seconds</span>
</span><span class="line">            <span class="s">&#39;IGNORE_EXCEPTIONS&#39;</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">使用方法</h3>

<h4 id="cachemanagerpy">cache_manager.py缓存管理器</h4>
<p>我们新建一个缓存管理器cache_manager.py，内容如下</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/env python</span>
</span><span class="line"><span class="c"># -*- encoding: utf-8 -*-</span>
</span><span class="line"><span class="sd">&quot;&quot;&quot;</span>
</span><span class="line"><span class="sd">Topic: redis缓存管理器</span>
</span><span class="line"><span class="sd">&quot;&quot;&quot;</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">..models</span> <span class="kn">import</span> <span class="n">Post</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">redis_cache</span> <span class="kn">import</span> <span class="n">get_redis_connection</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">apscheduler.schedulers.background</span> <span class="kn">import</span> <span class="n">BackgroundScheduler</span>
</span><span class="line">
</span><span class="line"><span class="n">RUNNING_TIMER</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class="line"><span class="n">REDIS_DB</span> <span class="o">=</span> <span class="n">get_redis_connection</span><span class="p">(</span><span class="s">&#39;default&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">update_click</span><span class="p">(</span><span class="n">post</span><span class="p">):</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot; 更新点击数 &quot;&quot;&quot;</span>
</span><span class="line">    <span class="k">if</span> <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hexists</span><span class="p">(</span><span class="s">&quot;CLICKS&quot;</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">):</span>
</span><span class="line">        <span class="k">print</span><span class="p">(</span><span class="s">&#39;REDIS_DB.hexists...&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">))</span>
</span><span class="line">        <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hincrby</span><span class="p">(</span><span class="s">&#39;CLICKS&#39;</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">        <span class="k">print</span><span class="p">(</span><span class="s">&#39;REDIS_DB.not_hexists...&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">))</span>
</span><span class="line">        <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hset</span><span class="p">(</span><span class="s">&#39;CLICKS&#39;</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">click</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">    <span class="n">run_timer</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">get_click</span><span class="p">(</span><span class="n">post</span><span class="p">):</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot; 获取点击数 &quot;&quot;&quot;</span>
</span><span class="line">    <span class="k">if</span> <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hexists</span><span class="p">(</span><span class="s">&quot;CLICKS&quot;</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hget</span><span class="p">(</span><span class="s">&#39;CLICKS&#39;</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">        <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hset</span><span class="p">(</span><span class="s">&#39;CLICKS&#39;</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">post</span><span class="o">.</span><span class="n">click</span><span class="p">)</span>
</span><span class="line">        <span class="k">return</span> <span class="n">post</span><span class="o">.</span><span class="n">click</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">sync_click</span><span class="p">():</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot;同步文章点击数&quot;&quot;&quot;</span>
</span><span class="line">    <span class="k">print</span><span class="p">(</span><span class="s">&#39;同步文章点击数start....&#39;</span><span class="p">)</span>
</span><span class="line">    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">REDIS_DB</span><span class="o">.</span><span class="n">hkeys</span><span class="p">(</span><span class="s">&#39;CLICKS&#39;</span><span class="p">):</span>
</span><span class="line">        <span class="k">try</span><span class="p">:</span>
</span><span class="line">            <span class="n">p</span> <span class="o">=</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class="line">            <span class="k">print</span><span class="p">(</span><span class="s">&#39;db_click={0}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">click</span><span class="p">))</span>
</span><span class="line">            <span class="n">cache_click</span> <span class="o">=</span> <span class="n">get_click</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class="line">            <span class="k">print</span><span class="p">(</span><span class="s">&#39;cache_click={0}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">cache_click</span><span class="p">))</span>
</span><span class="line">            <span class="k">if</span> <span class="n">cache_click</span> <span class="o">!=</span> <span class="n">p</span><span class="o">.</span><span class="n">click</span><span class="p">:</span>
</span><span class="line">                <span class="n">p</span><span class="o">.</span><span class="n">click</span> <span class="o">=</span> <span class="n">get_click</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class="line">                <span class="n">p</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">        <span class="k">except</span><span class="p">:</span>
</span><span class="line">            <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="viewspy">views.py修改</h4>
<p>然后我们修改view.py，在相应的action里使用这个cache_manager：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">.commons</span> <span class="kn">import</span> <span class="n">cache_manager</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">post_list</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot;所有已发布文章&quot;&quot;&quot;</span>
</span><span class="line">    <span class="n">posts</span> <span class="o">=</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">annotate</span><span class="p">(</span><span class="n">num_comment</span><span class="o">=</span><span class="n">Count</span><span class="p">(</span><span class="s">&#39;comment&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span>
</span><span class="line">        <span class="n">published_date__isnull</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">prefetch_related</span><span class="p">(</span>
</span><span class="line">        <span class="s">&#39;category&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">prefetch_related</span><span class="p">(</span><span class="s">&#39;tags&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="s">&#39;-published_date&#39;</span><span class="p">)</span>
</span><span class="line">    <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">posts</span><span class="p">:</span>
</span><span class="line">        <span class="n">p</span><span class="o">.</span><span class="n">click</span> <span class="o">=</span> <span class="n">cache_manager</span><span class="o">.</span><span class="n">get_click</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_list.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;posts&#39;</span><span class="p">:</span> <span class="n">posts</span><span class="p">})</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">post_detail</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
</span><span class="line">    <span class="k">try</span><span class="p">:</span>
</span><span class="line">        <span class="k">pass</span>
</span><span class="line">    <span class="k">except</span><span class="p">:</span>
</span><span class="line">        <span class="k">raise</span> <span class="n">Http404</span><span class="p">()</span>
</span><span class="line">    <span class="k">if</span> <span class="n">post</span><span class="o">.</span><span class="n">published_date</span><span class="p">:</span>
</span><span class="line">        <span class="n">cache_manager</span><span class="o">.</span><span class="n">update_click</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class="line">        <span class="n">post</span><span class="o">.</span><span class="n">click</span> <span class="o">=</span> <span class="n">cache_manager</span><span class="o">.</span><span class="n">get_click</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>其他的我就不多演示了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（12）- i18n国际化]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-12.html"/>
    <updated>2015-04-21T19:27:29+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-12</id>
    <content type="html"><![CDATA[<h3 id="wiki">Wiki</h3>
<p>国际化与本地化的目的为了能为各个不同的用户以他们最熟悉的语言和格式来显示网页。</p>

<p>Django能完美支持文本翻译、日期时间和数字的格式化、时区。</p>

<p>另外，Django还有两点优势：</p>

<ol>
  <li>允许开发者和模板作者指定他们哪些app应该被翻译或被格式化为本地形式。</li>
  <li>允许用户根据自己的偏好来实现本地化显示。翻译依据语言，格式化依据国家，
这些信息由浏览器中的<code>Accept-Language</code>头来决定。不过目前为止时区还未能实现。</li>
</ol>

<p>参考官方文档：<a href="https://docs.djangoproject.com/en/1.7/topics/i18n/">https://docs.djangoproject.com/en/1.7/topics/i18n/</a></p>

<h3 id="section">配置</h3>
<p>实际上django的国际化做的非常好了，配置很简单。</p>

<h4 id="settingspy">settings.py</h4>
<p>首先在settings中，添加如下内容：<!--more--></p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.utils.translation</span> <span class="kn">import</span> <span class="n">ugettext_lazy</span> <span class="k">as</span> <span class="n">_</span>
</span><span class="line"><span class="n">LANGUAGES</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="p">(</span><span class="s">&#39;zh-cn&#39;</span><span class="p">,</span> <span class="n">_</span><span class="p">(</span><span class="s">&#39;Simplified Chinese&#39;</span><span class="p">)),</span>
</span><span class="line">    <span class="p">(</span><span class="s">&#39;en&#39;</span><span class="p">,</span> <span class="n">_</span><span class="p">(</span><span class="s">&#39;English&#39;</span><span class="p">)),</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line"><span class="n">LOCALE_PATHS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&quot;locale&quot;</span><span class="p">),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>通过<code>LANGUAGES</code>执行语言列表，<code>LOCALE_PATHS</code>指定国际化目录。</p>

<p>在项目根目录下面创建一个locale文件夹，然后使用命令创建国际化文件：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">django</span><span class="o">-</span><span class="n">admin</span><span class="o">.</span><span class="n">py</span> <span class="n">makemessages</span> <span class="o">-</span><span class="n">l</span> <span class="n">zh_CN</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行完后，locale文件夹下面创建<code>zh_CN/LC_MESSAGES/django.po</code>，里面的内容类似下面：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># SOME DESCRIPTIVE TITLE.</span>
</span><span class="line"><span class="c"># Copyright (C) YEAR THE PACKAGE&#39;S COPYRIGHT HOLDER</span>
</span><span class="line"><span class="c"># This file is distributed under the same license as the PACKAGE package.</span>
</span><span class="line"><span class="c"># FIRST AUTHOR &lt;EMAIL@ADDRESS&gt;, YEAR.</span>
</span><span class="line"><span class="c">#</span>
</span><span class="line"><span class="c">#, fuzzy</span>
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;&quot;</span>
</span><span class="line"><span class="s">&quot;Project-Id-Version: PACKAGE VERSION</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;Report-Msgid-Bugs-To: </span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;POT-Creation-Date: 2014-11-26 11:45+0800</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;Last-Translator: FULL NAME &lt;EMAIL@ADDRESS&gt;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;Language-Team: LANGUAGE &lt;LL@li.org&gt;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;MIME-Version: 1.0</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;Content-Type: text/plain; charset=UTF-8</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;Content-Transfer-Encoding: 8bit</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line"><span class="s">&quot;Plural-Forms: nplurals=1; plural=0;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class="line">
</span><span class="line"><span class="c">#: .\mysite\settings.py:94</span>
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;Simplified Chinese&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;简体中文&quot;</span>
</span><span class="line">
</span><span class="line"><span class="c">#: .\mysite\settings.py:95</span>
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;English&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;English&quot;</span>
</span><span class="line">
</span><span class="line"><span class="c">#: base.html</span>
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;Simple Blog&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;极简博客&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;Hello&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;欢迎你&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;previous&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;上一页&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">msgid</span> <span class="s">&quot;next&quot;</span>
</span><span class="line"><span class="n">msgstr</span> <span class="s">&quot;下一页&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>将你页面上面需要翻译的内容写到这里面来即可。比如<code>previous</code>要翻译成<code>上一页</code>。</p>

<p>写好了所有的翻译后，再执行：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">django</span><span class="o">-</span><span class="n">admin</span><span class="o">.</span><span class="n">py</span> <span class="n">compilemessages</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这时候会生成文件<code>zh_CN/LC_MESSAGES/django.mo</code>，这个是最终的目标文件了。</p>

<h3 id="section-1">使用</h3>
<p>我们用<code>base.html</code>来做演示，打开<code>mysite/templates/mysite/base.html</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line">{% load i18n %}
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html;charset=utf-8&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span>{% trans &#39;Simple Blog&#39;%}<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body</span> <span class="na">class=</span><span class="s">&quot;customize-support&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    {% if user.is_authenticated %}
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_new&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span>
</span><span class="line">                <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-plus&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_draft_list&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span>
</span><span class="line">                <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-edit&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span> <span class="na">style=</span><span class="s">&quot;font-size: 15pt;&quot;</span><span class="nt">&gt;</span>{% trans &#39;Hello&#39;%} {{ user.username }}
</span><span class="line">            <span class="nt">&lt;small&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/small&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.logout&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;</span>
</span><span class="line">                <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-log-out&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;/p&gt;</span>
</span><span class="line">    {% else %}
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.login&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-log-in&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">    {% endif %}
</span><span class="line">    <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_list&#39; %}&quot;</span><span class="nt">&gt;</span>{% trans &#39;Simple Blog&#39;%}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span><span class="line">...
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>注意<code>&lt;title&gt;{% trans 'Simple Blog'%}&lt;/title&gt;</code>这句，
如果用户选择中文，那么就会被翻译成<code>极简博客</code>。
这个在django.po文件中定义过。其他的内容也是类似，就不多说了。</p>

<p>好了，i18n国际化就是这么简单。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（11）- 富文本与代码高亮]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-11.html"/>
    <updated>2015-04-21T18:27:29+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-11</id>
    <content type="html"><![CDATA[<h2 id="tinymce">TinyMCE介绍</h2>
<p>TinyMCE是一个轻量级的基于浏览器的所见即所得编辑器，支持目前流行的各种浏览器，由JavaScript写成。
功能配置灵活简单（两行代码就可以将编辑器嵌入网页中），支持AJAX。另一特点是加载速度非常快。</p>

<p>django里引用TinyMCE富文本编辑器，其实很简单，前提是你知道django的静态文件配置。
其实这个我已经在前面文章提到过，可以回去再看看。</p>

<p>TinyMCE的官方网站是：<a href="http://www.tinymce.com/">http://www.tinymce.com/</a></p>

<p>下载地址：<a href="http://download.moxiecode.com/tinymce/tinymce_4.1.9.zip">http://download.moxiecode.com/tinymce/tinymce_4.1.9.zip</a></p>

<p>TinyMCE的最新版本是4.1.9，下面是官网截屏：</p>

<p><img src="http://yidaospace.qiniudn.com/tinymce.png" alt="" /></p>

<p>下载下来后，我们把它解压到工程的static/目录下面，如下图所示：<!--more--></p>

<p><img src="http://yidaospace.qiniudn.com/dj101.png" alt="" /></p>

<h2 id="section">安装原理</h2>
<p>安装的原理很简单，只需要在使用编辑器的页面里引用tinymce.min.js文件并初始化就可以了。
tinymce.min.js文件在tinymce项目里，
tinymce.min.js会根据初始配置里的信息找到需要用编辑器的html节点。</p>

<p>例如在post_edit.html页面使用编辑器，只需要在模板文件写下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line">{% block header %}
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;tinymce/plugins/upload/plugin.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;tinymce/tinymce.min.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nx">tinymce</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span>
</span><span class="line">            <span class="nx">selector</span><span class="o">:</span> <span class="s2">&quot;textarea&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="c1">//width: 800,</span>
</span><span class="line">            <span class="nx">height</span><span class="o">:</span> <span class="mi">300</span><span class="p">,</span>
</span><span class="line">            <span class="nx">forced_root_block</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class="line">            <span class="nx">plugins</span><span class="o">:</span> <span class="p">[</span>
</span><span class="line">                <span class="s2">&quot;advlist autolink lists link image charmap print preview anchor sh4tinymce upload&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="s2">&quot;searchreplace visualblocks code fullscreen&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="s2">&quot;insertdatetime table contextmenu paste&quot;</span>
</span><span class="line">            <span class="p">],</span>
</span><span class="line">            <span class="nx">toolbar</span><span class="o">:</span> <span class="s2">&quot;insertfile undo redo | styleselect | bold italic | alignleft aligncenter&quot;</span> <span class="o">+</span>
</span><span class="line">            <span class="s2">&quot; alignright alignjustify | bullist numlist outdent indent | preview link image sh4tinymce&quot;</span>
</span><span class="line">        <span class="p">});</span>
</span><span class="line">    <span class="nt">&lt;/script&gt;</span>
</span><span class="line">{% endblock %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这段代码的含义是 初始化 tinyMCE编辑器，selector指需要将编辑器显示在html那个标签节点，
这里选了textareas。则表示<textareas>会变成编辑器所在的位置。</textareas></p>

<p>另外，我还自定义一下编辑器的高度、插件、菜单项目等。具体详细配置请参考官方文档，写的都比较清楚。</p>

<h2 id="tinymceaddmore">给TinyMCE增加一个addmore插件</h2>
<p>需求很简单，就是每次我写文章的时候需要插入某个<code>&lt;!--more--&gt;</code>标签，
这样可以在列表页面先只显示文章的一部分，然后碰到这个more标签就显示一个”点击阅读更多”的链接。</p>

<p>第一步，在tinymce/plugins文件下新增一个addmore文件夹，然后在里面新建一个plugin.min.js文件，
内容如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">tinymce.PluginManager.add(&quot;addmore&quot;, function (a) {
</span><span class="line">    a.addCommand(&quot;InsertMoreRule&quot;, function () {
</span><span class="line">        a.execCommand(&quot;mceInsertContent&quot;, !1, &quot;[!--more--]&quot;)
</span><span class="line">    }), a.addButton(&quot;addmore&quot;, {
</span><span class="line">        icon: &quot;addmore&quot;,
</span><span class="line">        tooltip: &quot;Insert More&quot;,
</span><span class="line">        cmd: &quot;InsertMoreRule&quot;
</span><span class="line">    }), a.addMenuItem(&quot;addmore&quot;, {
</span><span class="line">        icon: &quot;addmore&quot;,
</span><span class="line">        text: &quot;Insert More&quot;,
</span><span class="line">        cmd: &quot;InsertMoreRule&quot;,
</span><span class="line">        context: &quot;insert&quot;
</span><span class="line">    })
</span><span class="line">});
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在post_edit.html中修改tinymce.init方法，plugins项目后面添加一个addmore：</p>

<pre><code>...
plugins: [
    "advlist autolink lists link image charmap print preview anchor sh4tinymce upload",
    "searchreplace visualblocks code fullscreen",
    "insertdatetime table contextmenu paste addmore"
],
...
</code></pre>

<p>再看看效果，没问题了。</p>

<h2 id="syntaxhighlighter">SyntaxHighlighter代码高亮</h2>
<p>程序员写博客当然少不了代码高亮，这个功能页很容易实现。有一款插件叫SyntaxHighlighter值的推荐。</p>

<p>项目主页：<a href="http://alexgorbatchev.com/SyntaxHighlighter/">http://alexgorbatchev.com/SyntaxHighlighter/</a></p>

<p>下载地址：<a href="http://alexgorbatchev.com/SyntaxHighlighter/download/download.php?sh_current">http://alexgorbatchev.com/SyntaxHighlighter/download/download.php?sh_current</a></p>

<p>下载下来后直接解压到static/目录下面，这个跟tinymce是一样的原理。</p>

<p><strong>使用方法</strong></p>

<p>只需要修改django页面的基础模板就行了，非常简单。</p>

<p>打开mysite/templates/mysite/base.html页面，引入syntaxhighlighter：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line">{% load i18n %}
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html;charset=utf-8&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="c">&lt;!-- Latest compiled and minified CSS --&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;css/bootstrap.min.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="c">&lt;!-- Optional theme --&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;css/bootstrap-theme.min.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="c">&lt;!-- Blog CSS--&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;css/blog.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/styles/shCoreDefault.css&#39; %}&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shCore.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span><span class="nx">SyntaxHighlighter</span><span class="p">.</span><span class="nx">all</span><span class="p">();</span><span class="nt">&lt;/script&gt;</span>
</span><span class="line">    <span class="c">&lt;!-- Latest compiled and minified JavaScript --&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;{% static &#39;js/jquery-1.11.1.min.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;{% static &#39;js/base.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;{% static &#39;js/bootstrap.min.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    {% block header %}
</span><span class="line">    {% endblock %}
</span><span class="line">    <span class="nt">&lt;title&gt;</span>{% trans &#39;Simple Blog&#39;%}<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body</span> <span class="na">class=</span><span class="s">&quot;customize-support&quot;</span><span class="nt">&gt;</span>
</span><span class="line">中间省略...
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushJScript.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushBash.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushPhp.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushJava.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushSql.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushXml.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushPython.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushCss.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">class=</span><span class="s">&quot;javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;{% static &#39;syntaxhighlighter/scripts/shBrushCpp.js&#39; %}&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>由于我们之前已经安装过了TinyMCE，这个跟它结合起来就非常好用了，因为TinyMCE自带有选择代码语言功能。</p>

<p>下面是我创建文章时，插入了一段python代码的示例：</p>

<p><img src="http://yidaospace.qiniudn.com/dj102.png" alt="" /></p>

<p>这个是保存后的效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj103.png" alt="" /></p>

<h2 id="section-1">最后一件事</h2>
<p>别忘了部署到Heroku上面和别人分享你的成果。</p>

<p>OK，到此为止，前台的各种功能已经差不多了，你能一直坚持学到这里很不错了，为你自己鼓掌吧。</p>

<p>后面还有一个重头戏，就是django的后台管理，我选择了更美观更好用的xamdin，敬请期待…</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（10）- 全文搜索]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-10.html"/>
    <updated>2015-04-21T15:47:28+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-10</id>
    <content type="html"><![CDATA[<h3 id="wiki">Wiki：</h3>
<p>Django本身不提供全文检索的功能，但django-haystack为其提供了全文检索的框架。
django-haystack能为Django提供whoosh,solr,Xapian和Elasticsearc四种全文检索引擎作为后端。
其中whoosh为纯python的实现，不是非常大型的应用，是没有问题的。
本文将介绍Django1.7中通过django-haystack与whoosh集成以及whoosh的中文支持。</p>

<h3 id="section">安装依赖：</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">pip install django-haystack
</span><span class="line">pip install whoosh
</span><span class="line">pip install jieba</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-1">建立模型</h3>
<p>我们以文章为搜索目标，现在我的app名字为blog，
模型文件是mysite/blog/models.py ：<!--more--></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># coding=utf-8</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class="line"><span class="nd">@python_2_unicode_compatible</span>
</span><span class="line"><span class="k">class</span> <span class="nc">Post</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class="line">    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class="line">        <span class="n">verbose_name</span> <span class="o">=</span> <span class="s">u&#39;文章&#39;</span>
</span><span class="line">        <span class="n">verbose_name_plural</span> <span class="o">=</span> <span class="s">u&#39;文章&#39;</span>
</span><span class="line">    <span class="c"># 作者</span>
</span><span class="line">    <span class="n">author</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">User</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 标题</span>
</span><span class="line">    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 正文</span>
</span><span class="line">    <span class="n">text</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">()</span>
</span><span class="line">    <span class="c"># 标签</span>
</span><span class="line">    <span class="n">tags</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ManyToManyField</span><span class="p">(</span><span class="n">Tag</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 分类目录</span>
</span><span class="line">    <span class="n">category</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Category</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 点击量</span>
</span><span class="line">    <span class="n">click</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">IntegerField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 创建时间</span>
</span><span class="line">    <span class="n">created_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">timezone</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 发布时间</span>
</span><span class="line">    <span class="n">published_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">publish</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">published_date</span> <span class="o">=</span> <span class="n">timezone</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">title</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="searchindexespy">1. search_indexes.py</h3>
<p>在app目录下建立一个search_indexes.py（mysite/blog/search_indexes.py）代码如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#!/usr/bin/env python</span>
</span><span class="line"><span class="c"># -*- encoding: utf-8 -*-</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">models</span> <span class="kn">import</span> <span class="n">Post</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">haystack</span> <span class="kn">import</span> <span class="n">indexes</span>
</span><span class="line"><span class="k">class</span> <span class="nc">PostIndex</span><span class="p">(</span><span class="n">indexes</span><span class="o">.</span><span class="n">SearchIndex</span><span class="p">,</span> <span class="n">indexes</span><span class="o">.</span><span class="n">Indexable</span><span class="p">):</span>
</span><span class="line">    <span class="n">text</span> <span class="o">=</span> <span class="n">indexes</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">document</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">use_template</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class="line">    <span class="c"># 对title字段进行索引</span>
</span><span class="line">    <span class="n">title</span> <span class="o">=</span> <span class="n">indexes</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">model_attr</span><span class="o">=</span><span class="s">&#39;title&#39;</span><span class="p">)</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get_model</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="n">Post</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">index_queryset</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">using</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_model</span><span class="p">()</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><em>备注</em>：search_indexes.py文件名不能修改，否则报错：<code>No fields were found in any search_indexes.</code></p>

<h3 id="posttexttxt">2. post_text.txt</h3>
<p>因为在search_indexes.py使用了use_template=True，所以可以同时使用模板对索引字段进行定义。</p>

<p>如：<code>mysite/blog/templates/search/indexes/blog/post_text.txt</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p"></span>
</span><span class="line"><span class="p"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="settingspy">3. settings.py</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># Application definition</span>
</span><span class="line"><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="o">...</span>
</span><span class="line">    <span class="s">&#39;haystack&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="urlspy">4. urls.py</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span>
</span><span class="line">    <span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^admin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">)),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^xadmin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">xadmin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;xadmin&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^accounts/login/$&#39;</span><span class="p">,</span> <span class="s">&#39;django.contrib.auth.views.login&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^accounts/logout/$&#39;</span><span class="p">,</span> <span class="s">&#39;django.contrib.auth.views.logout&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;next_page&#39;</span><span class="p">:</span> <span class="s">&#39;/&#39;</span><span class="p">}),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^search/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;haystack.urls&#39;</span><span class="p">)),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;blog.urls&#39;</span><span class="p">)),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="jieba">5. jieba中文分词</h3>
<p>jieba其实已经提供了集成whoosh的ChineseAnalyzer，
也就是说不需要自己写ChineseAnalyzer了，直接在whoosh_backend.py中直接引用就好；
同时，不推荐将whoosh_backend.py放到Lib下面，这样移植性会有问题，自己的代码，还是放在项目下面为妙。</p>

<p>1. 将文件whoosh_backend.py拷贝到app下面，并重命名为whoosh_cn_backend.py，
如blog/whoosh_cn_backend.py。重点的改造有：</p>

<ul>
  <li>增加：</li>
</ul>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">jieba.analyse</span> <span class="kn">import</span> <span class="n">ChineseAnalyzer</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ul>
  <li>修改</li>
</ul>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">schema_fields</span><span class="p">[</span><span class="n">field_class</span><span class="o">.</span><span class="n">index_fieldname</span><span class="p">]</span> <span class="o">=</span> <span class="n">TEXT</span><span class="p">(</span><span class="n">stored</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">analyzer</span><span class="o">=</span><span class="n">ChineseAnalyzer</span><span class="p">(),</span>
</span><span class="line"> <span class="n">field_boost</span><span class="o">=</span><span class="n">field_class</span><span class="o">.</span><span class="n">boost</span><span class="p">,</span> <span class="n">sortable</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>2. 修改后端引擎，setting.py配置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># full text search</span>
</span><span class="line"><span class="n">HAYSTACK_CONNECTIONS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;blog.whoosh_cn_backend.WhooshEngine&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;PATH&#39;</span><span class="p">:</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&#39;whoosh_index&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">6. 重建索引</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">rebuild_index</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">7. 索引更新</h3>

<p>最简单的办法就是在settings.py中添加：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">HAYSTACK_SIGNAL_PROCESSOR</span> <span class="o">=</span> <span class="s">&#39;haystack.signals.RealtimeSignalProcessor&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-4">8. 自定义搜索示例</h3>

<p>(1) 先定义view：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">haystack.forms</span> <span class="kn">import</span> <span class="n">SearchForm</span>
</span><span class="line"><span class="k">def</span> <span class="nf">full_search</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="sd">&quot;&quot;&quot;全局搜索&quot;&quot;&quot;</span>
</span><span class="line">    <span class="n">keywords</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="p">[</span><span class="s">&#39;q&#39;</span><span class="p">]</span>
</span><span class="line">    <span class="n">sform</span> <span class="o">=</span> <span class="n">SearchForm</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">GET</span><span class="p">)</span>
</span><span class="line">    <span class="n">posts</span> <span class="o">=</span> <span class="n">sform</span><span class="o">.</span><span class="n">search</span><span class="p">()</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_search_list.html&#39;</span><span class="p">,</span>
</span><span class="line">                  <span class="p">{</span><span class="s">&#39;posts&#39;</span><span class="p">:</span> <span class="n">posts</span><span class="p">,</span> <span class="s">&#39;list_header&#39;</span><span class="p">:</span> <span class="s">&#39;关键字 </span><span class="se">\&#39;</span><span class="s">{}</span><span class="se">\&#39;</span><span class="s"> 搜索结果&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">keywords</span><span class="p">)})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>(2) 然后在template页面中：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="c">&lt;!-- searchbox START --&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;searchbox&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;{% url &#39;blog.views.full_search&#39; %}&quot;</span> <span class="na">method=</span><span class="s">&quot;get&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;label&gt;</span>
</span><span class="line">                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;textfield searchtip&quot;</span> <span class="na">name=</span><span class="s">&quot;q&quot;</span> <span class="na">size=</span><span class="s">&quot;24&quot;</span> <span class="na">value=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;/label&gt;</span>
</span><span class="line">            <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;button&quot;</span> <span class="na">value=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>更详细内容请参考官方文档：<a href="http://django-haystack.readthedocs.org/en/latest/">http://django-haystack.readthedocs.org/en/latest/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（9）- 用户认证]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-09.html"/>
    <updated>2015-04-21T14:47:47+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-09</id>
    <content type="html"><![CDATA[<h2 id="section">安全问题</h2>
<p>你应该注意到了一点，当你去新建、修改和删除文章的时候并不需要登录，
这样的话任何浏览网站的用户都能随时修改和删除我的文章。这个可不是我想要的！</p>

<h2 id="section-1">编辑和删除的认证</h2>
<p>我们需要保护post_new, post_edit和post_publish这三个视图，只有登录用户才有权去执行。
django为我们提供了很好的帮助类，其实就是利用了python中的decorators技术。
django中认证的装饰器位于模块django.contrib.auth.decorators中，名称叫login_required。</p>

<p>编辑blog/views.py文件，在import部分添加如下的导入语句：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.contrib.auth.decorators</span> <span class="kn">import</span> <span class="n">login_required</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后在post_new, post_edit和post_publish这三个函数上添加@login_required，
类似下面<!--more--></p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="nd">@login_required</span>
</span><span class="line"><span class="k">def</span> <span class="nf">post_new</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="p">[</span><span class="o">...</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>好的，现在你再去访问下http://localhost:8000/post/new/，看看有啥变化。</p>

<p>注：如果你仍然能正常进入新建页面，那可能是你之前在admin界面登陆过。
那么你需要先退出，访问http://localhost:8000/admin/logout/可以退出，然后你再看下效果。</p>

<p>我刚刚添加的@login_required装饰器检测到你尚未登陆的时候会重定向到login页面，
但是我现在还没有定义login的模板页面，所以这时候会是404错误页面。</p>

<h2 id="section-2">用户登录</h2>
<p>django在用户认证方面做得很好了，我们只需要去使用它就行。</p>

<p>在mysite/urls.py文件中，添加下面一行</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">url</span><span class="p">(</span><span class="s">r&#39;^accounts/login/$&#39;</span><span class="p">,</span> <span class="s">&#39;django.contrib.auth.views.login&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>现在这个文件内容如下：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
</span><span class="line"><span class="n">admin</span><span class="o">.</span><span class="n">autodiscover</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^admin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">)),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^accounts/login/$&#39;</span><span class="p">,</span> <span class="s">&#39;django.contrib.auth.views.login&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;blog.urls&#39;</span><span class="p">)),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后我们再定义一个登陆页面，创建目录mysite/templates/registration，
并在里面新建模板文件login.html，内容如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &quot;mysite/base.html&quot; %}
</span><span class="line">
</span><span class="line">{% block content %}
</span><span class="line">
</span><span class="line">    {% if form.errors %}
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Your username and password didn&#39;t match. Please try again.<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    {% endif %}
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">&quot;post&quot;</span> <span class="na">action=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.login&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    {% csrf_token %}
</span><span class="line">    <span class="nt">&lt;table&gt;</span>
</span><span class="line">    <span class="nt">&lt;tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;td&gt;</span>{{ form.username.label_tag }}<span class="nt">&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;td&gt;</span>{{ form.username }}<span class="nt">&lt;/td&gt;</span>
</span><span class="line">    <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">    <span class="nt">&lt;tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;td&gt;</span>{{ form.password.label_tag }}<span class="nt">&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;td&gt;</span>{{ form.password }}<span class="nt">&lt;/td&gt;</span>
</span><span class="line">    <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">    <span class="nt">&lt;/table&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;login&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;hidden&quot;</span> <span class="na">name=</span><span class="s">&quot;next&quot;</span> <span class="na">value=</span><span class="s">&quot;{{ next }}&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line">{% endblock %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>你可以看到我们仍然使用到了模板继承。这个时候可以定义一个mysite/templates/mysite/base.html，
把blog/templates/blog/base.html的内容复制给它即可。</p>

<p>不过我们需要在mysite/settings.py中再添加一个urls配置：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">LOGIN_REDIRECT_URL</span> <span class="o">=</span> <span class="s">&#39;/&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这样的话当用户直接访问login页面后登录成功会重定向到文章列表页面去。</p>

<h2 id="section-3">改进显示</h2>
<p>现在的确只有登录用户才能修改和删除文章，但是未登录用户却能看到这些按钮，
这个是很不好的体验。现在如果是未登录用户的话就把这些按钮给隐藏掉。</p>

<p>因此我们修改mysite/templates/mysite/base.html如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        {% if user.is_authenticated %}
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_new&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-plus&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_draft_list&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-edit&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        {% else %}
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.login&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-lock&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        {% endif %}
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_list&#39; %}&quot;</span><span class="nt">&gt;</span>Django Girls<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            {% block content %}
</span><span class="line">            {% endblock %}
</span><span class="line">            <span class="nt">&lt;/div&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后修改blog/templates/blog/post_detail.html如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &#39;blog/base.html&#39; %}
</span><span class="line">
</span><span class="line">{% block content %}
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;date&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        {% if post.published_date %}
</span><span class="line">            {{ post.published_date }}
</span><span class="line">        {% else %}
</span><span class="line">            {% if user.is_authenticated %}
</span><span class="line">                <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_publish&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;</span>Publish<span class="nt">&lt;/a&gt;</span>
</span><span class="line">            {% endif %}
</span><span class="line">        {% endif %}
</span><span class="line">        {% if user.is_authenticated %}
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_edit&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-pencil&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">            <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_remove&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-remove&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        {% endif %}
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>{{ post.title }}<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">{% endblock %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-4">用户注销</h2>
<p>当用户登录后显示欢迎语句，Hello ，然后后面跟一个logout链接。还是依靠django帮我们处理logout动作。</p>

<p>修改mysite/templates/mysite/base.html文件如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    {% if user.is_authenticated %}
</span><span class="line">    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_new&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-plus&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_draft_list&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-edit&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">    <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;</span>Hello {{ user.username }}<span class="nt">&lt;small&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.logout&#39; %}&quot;</span><span class="nt">&gt;</span>Log out<span class="nt">&lt;/a&gt;&lt;/p&gt;</span>
</span><span class="line">    {% else %}
</span><span class="line">    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;django.contrib.auth.views.login&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-lock&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">    {% endif %}
</span><span class="line">    <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_list&#39; %}&quot;</span><span class="nt">&gt;</span>Django Girls<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>很显然这时候logout肯定会报错。我们还得做些事情。</p>

<p>对于这方面的详细文档请参考：<a href="https://docs.djangoproject.com/en/1.7/topics/auth/default/">https://docs.djangoproject.com/en/1.7/topics/auth/default/</a></p>

<p>打开mysite/urls.py文件，添加一个logout配置：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
</span><span class="line"><span class="n">admin</span><span class="o">.</span><span class="n">autodiscover</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^admin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">)),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^accounts/login/$&#39;</span><span class="p">,</span> <span class="s">&#39;django.contrib.auth.views.login&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^accounts/logout/$&#39;</span><span class="p">,</span> <span class="s">&#39;django.contrib.auth.views.logout&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;next_page&#39;</span><span class="p">:</span> <span class="s">&#39;/&#39;</span><span class="p">}),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;blog.urls&#39;</span><span class="p">)),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>如果访问网站时出现模板找不到错误，那么你就在mysite/settings.py中添加如下配置：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># TEMPLATE_DIRS</span>
</span><span class="line"><span class="n">TEMPLATE_DIRS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&#39;mysite/templates&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&#39;blog/templates&#39;</span><span class="p">),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>好的，现在你已经可以达成如下的效果了：</p>

<ol>
  <li>需要一个用户名和密码登录系统</li>
  <li>在添加/编辑/删除/发布文章的时候需要登录</li>
  <li>也能注销</li>
</ol>

<p>这么说的话，这个博客系统算功能比较完善了！朋友，祝福你。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（8）- 继续完善]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-08.html"/>
    <updated>2015-04-21T14:24:11+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-08</id>
    <content type="html"><![CDATA[<p>到现在为止我们已经完成的差不多了，并且基本的东西都已经学到了，是时候用起来了。
我们的博客还有很多功能需要完善，下面抛砖引玉新增几个功能，还有其他功能等你自己去发现和实现。</p>

<h2 id="section">草稿箱</h2>
<p>之前我们新建文章的时候只是是保存到数据库，也就是仅仅保存了草稿，还没有对外发布，
在博客首页上面是看不到的，因为published_date字段为空。这里我们需要添加一个草稿箱的链接。还是四部曲。</p>

<p>第一步，添加一个链接：</p>

<p>打开mysite/templates/mysite/base.html文件，在</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>的上面一行添加如下链接：<!--more--></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_draft_list&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-edit&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>第二步就是配置urls，在blog/urls.py中添加：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">url</span><span class="p">(</span><span class="s">r&#39;^drafts/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_draft_list</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;post_draft_list&#39;</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>第三步在blog/views.py中添加一个view：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_draft_list</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="n">posts</span> <span class="o">=</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">published_date__isnull</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="s">&#39;-created_date&#39;</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_draft_list.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;posts&#39;</span><span class="p">:</span> <span class="n">posts</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>第四步添加一个template，新建blog/templates/blog/post_draft_list.html，内容如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &#39;blog/base.html&#39; %}
</span><span class="line">{% block content %}
</span><span class="line">    {% for post in posts %}
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;date&quot;</span><span class="nt">&gt;</span>created: {{ post.created_date|date:&#39;d-m-Y&#39; }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">            <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_detail&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">            <span class="nt">&lt;p&gt;</span>{{ post.text|truncatechars:200 }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    {% endfor %}
</span><span class="line">{% endblock %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个模板跟我们的post_list.html非常相似。</p>

<p>刷新首页，点击那个草稿箱链接，看看效果。</p>

<p><img src="http://yidaospace.qiniudn.com/dj024.jpg" alt="" /></p>

<h2 id="section-1">发布功能</h2>
<p>在文章详情页面添加一个发布的按钮，如果觉得合适的时候就能发布文章了。
每个新功能都是四部曲，你照着这四步做就行，你会发现越来越简单。</p>

<p>第一步在页面上添加一个链接或Form表单，这里我们添加一个链接。</p>

<p>打开blog/template/blog/post_detail.html，将下面这段</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% if post.published_date %}
</span><span class="line">    {{ post.published_date }}
</span><span class="line">{% endif %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>换成下面这段：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% if post.published_date %}
</span><span class="line">    {{ post.published_date }}
</span><span class="line">{% else %}
</span><span class="line">    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_publish&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;</span>Publish<span class="nt">&lt;/a&gt;</span>
</span><span class="line">{% endif %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这里增加了一个else语句，意思是如果没有发布日期的话就增加一个发布按钮。</p>

<p>第二步添加urls配置，打开blog/urls.py：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/(?P&lt;pk&gt;[0-9]+)/publish/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_publish</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;post_publish&#39;</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>第三步视图，打开blog/views.py：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_publish</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
</span><span class="line">    <span class="n">post</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Post</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">publish</span><span class="p">()</span>
</span><span class="line">    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;blog.views.post_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>第四步模板，由于这次没有引入新的模板，所以这步省略。</p>

<p>刷新后看效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj025.jpg" alt="" /></p>

<p>发布之后的效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj026.jpg" alt="" /></p>

<p>注意观察发布前和发布后文章的发布日期那个位置的变化。并且发布后再去首页看看，文章已经可以正常显示了。</p>

<h2 id="section-2">删除功能</h2>
<p>最后当然需要一个删除功能了，还是四部曲！</p>

<p>第一步是在页面上添加链接，打开blog/templates/blog/post_detail.html，在编辑按钮下面一行添加如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;post_remove&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-remove&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>第二步配置urls映射，打开blog/urls.py，添加如下一行：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/(?P&lt;pk&gt;[0-9]+)/remove/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_remove</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;post_remove&#39;</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>第三步添加视图view，打开blog/views.py，添加一个视图函数：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_remove</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
</span><span class="line">    <span class="n">post</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Post</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">delete</span><span class="p">()</span>
</span><span class="line">    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;blog.views.post_list&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>第四步模板，由于这次又没有新的模板，所有这步省略。</p>

<p>OK，刷新页面看效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj027.jpg" alt="" /></p>

<p>删除后再去首页看，已经没有这篇文章了。</p>

<h2 id="section-3">分页功能</h2>
<p>在首页显示文章列表时候需要分页显示，这时候可以使用django的一个插件叫pagination</p>

<p>设置非常简单，简直是简单到变态。</p>

<p>settings.py文件中</p>

<ol>
  <li>INSTALLED_APPS增加’pagination’项</li>
</ol>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># Application definition</span>
</span><span class="line"><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="s">&#39;django.contrib.admin&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.auth&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.contenttypes&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.sessions&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.messages&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.staticfiles&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;blog&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;pagination&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ol>
  <li>MIDDLEWARE_CLASSES增加’pagination.middleware.PaginationMiddleware’</li>
</ol>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">MIDDLEWARE_CLASSES</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="s">&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.middleware.common.CommonMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.middleware.csrf.CsrfViewMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.messages.middleware.MessageMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;pagination.middleware.PaginationMiddleware&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ol>
  <li>TEMPLATE_CONTEXT_PROCESSORS增加’django.core.context_processors.request’</li>
</ol>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">TEMPLATE_CONTEXT_PROCESSORS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="s">&quot;django.contrib.auth.context_processors.auth&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.core.context_processors.debug&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.core.context_processors.i18n&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.core.context_processors.media&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.core.context_processors.static&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.core.context_processors.tz&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.contrib.messages.context_processors.messages&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;blog.commons.context_processors.custom_proc&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&quot;django.core.context_processors.request&quot;</span><span class="p">,</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ol>
  <li>requirements.txt中增加依赖：</li>
</ol>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">django</span><span class="o">-</span><span class="n">pagination</span><span class="o">-</span><span class="n">py3</span><span class="o">==</span><span class="mf">1.1</span><span class="o">.</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ol>
  <li>修改post_list.html页面，增加autopaginate标签</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">extends</span> <span class="s">&#39;mysite/base.html&#39;</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">load</span> <span class="n">blog_tags</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">load</span> <span class="n">pagination_tags</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">block</span> <span class="n">content</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">list_header</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;box&quot;</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">list_header</span> <span class="p">}}</span><span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="n">autopaginate</span> <span class="n">posts</span> <span class="mi">10</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="k">for</span> <span class="n">post</span> <span class="ow">in</span> <span class="n">posts</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;post&quot;</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;blog.views.post_detail&#39; pk=post.pk %}&quot;</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">title</span> <span class="p">}}</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;info&quot;</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;date&quot;</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">published_date</span><span class="o">|</span><span class="n">date</span><span class="p">:</span><span class="s">&#39;Y年m月d日&#39;</span> <span class="p">}}</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;comments&quot;</span><span class="o">&gt;</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">post</span><span class="o">.</span><span class="n">num_comment</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                        <span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">num_comment</span> <span class="p">}}</span> <span class="err">条评论</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                        <span class="err">没有评论</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                <span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;comments&quot;</span><span class="o">&gt;</span>
</span><span class="line">                    <span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">click</span> <span class="p">}}</span> <span class="err">人阅读</span><span class="o">&amp;</span><span class="n">nbsp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">nbsp</span><span class="p">;</span>
</span><span class="line">                <span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;fixed&quot;</span><span class="o">&gt;&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;content&quot;</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="n">autoescape</span> <span class="n">off</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                        <span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">text</span><span class="o">|</span><span class="n">more</span><span class="p">:</span><span class="n">post</span><span class="o">.</span><span class="n">id</span> <span class="p">}}</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="n">endautoescape</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                <span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;under&quot;</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;categories&quot;</span><span class="o">&gt;</span><span class="err">分类</span><span class="p">:</span> <span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                    <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;blog.views.post_list_by_category&#39; cg=post.category.name %}&quot;</span>
</span><span class="line">                       <span class="n">rel</span><span class="o">=</span><span class="s">&quot;category tag&quot;</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">category</span><span class="o">.</span><span class="n">name</span> <span class="p">}}</span>
</span><span class="line">                    <span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;tags&quot;</span><span class="o">&gt;</span><span class="err">标签</span><span class="p">:</span> <span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                <span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="k">for</span> <span class="n">tg</span> <span class="ow">in</span> <span class="n">post</span><span class="o">.</span><span class="n">tags</span><span class="o">.</span><span class="n">all</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                        <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;blog.views.post_list_by_tag&#39; tag=tg.name %}&quot;</span>
</span><span class="line">                           <span class="n">rel</span><span class="o">=</span><span class="s">&quot;tag&quot;</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">tg</span><span class="o">.</span><span class="n">name</span> <span class="p">}}</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;&amp;</span><span class="n">nbsp</span><span class="p">;</span>
</span><span class="line">                    <span class="p">{</span><span class="o">%</span> <span class="n">endfor</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">                <span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">        <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="n">endfor</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="n">paginate</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">endblock</span> <span class="o">%</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>刷新下列表首页，看看分页效果。</p>

<p>恭喜你，你可以大声对自己喊：我太棒了。^_^</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（7）- 实现功能]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-07.html"/>
    <updated>2015-04-21T14:02:56+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-07</id>
    <content type="html"><![CDATA[<p>到目前为止我们已经完成了一个django应用的所有基础部分。
包括url配置、视图、模型和模板。接下来开始继续完善我们的博客系统了。</p>

<p>首先我们需要一个显示每篇文章的详细页面，对不？</p>

<h2 id="section">文章详情</h2>
<p>对于首页每一篇文章，我们希望点击标题后可以进入该文章的阅读页面。修改post_list.html中的标题href如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_detail&#39; pk=post.pk %}&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我来详细解释下这个{% url ‘blog.views.post_detail’ pk=post.pk %}，{% %}
表示使用django模板标签而不是普通的HTML文字，这里我们使用了url标签来生成真正的url链接。
blog.views.post_detail是视图的全路径。<!--more--></p>

<h3 id="url">url配置</h3>
<p>我们希望文章详细页面的链接类似这样：http://127.0.0.1:8000/post/1/</p>

<p>修改blog/urls.py为下面的这样：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.</span> <span class="kn">import</span> <span class="n">views</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_list</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/(?P&lt;pk&gt;[0-9]+)/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_detail</span><span class="p">),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个看起来有点复杂，我们来解释下：</p>

<ol>
  <li>^ 代表的是开始</li>
  <li>post/表示URL开始必须是post/</li>
  <li>(?P[0-9]+) – 这部分比较复杂。它表示一个命名参数pk，
它会捕获url中的这部分然后将它赋值给pk参数传递给视图。
[0-9]表示这部分必须是数字，+表示至少1个数字，也可以多个数字。</li>
  <li>/ – 然后后面接/</li>
  <li>$ – URL的结尾</li>
</ol>

<h3 id="postdetail">post_detail视图</h3>
<p>现在去访问还会报错，因为我们还没有post_detail这个视图。现在我们开始定义它。</p>

<p>修改文件blog/views.py如下：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span><span class="p">,</span> <span class="n">get_object_or_404</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">post_detail</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
</span><span class="line">    <span class="n">post</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Post</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_detail.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;post&#39;</span><span class="p">:</span> <span class="n">post</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="postdetail-1">post_detail模板</h3>
<p>然后再增加模板blog/templates/blog/post_detail.html：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &#39;blog/base.html&#39; %}
</span><span class="line">
</span><span class="line">{% block content %}
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;date&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        {% if post.published_date %}
</span><span class="line">            {{ post.published_date }}
</span><span class="line">        {% endif %}
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>{{ post.title }}<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">{% endblock %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这次我们还是采用模板继承方式，这里我们还用到了模板标签if，这是一个条件判断的标签。</p>

<p>OK，一切都已准备就绪，现在打开首页，然后点击任意一篇文章标题看下结果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj017.jpg" alt="" /></p>

<p>搞定！！</p>

<h2 id="section-1">创建文章</h2>
<p>最后一件事就是要实现文章创建和更新操作，这是博客系统最核心的功能。django自带的admin很酷，但是确很难定制和美化。
forms非常强大和自由，我们可以好好的利用它来实现我们需要的功能。</p>

<p>forms一个很好的特性就是它既能从头定义一个表单，也能创建一个ModelForm来将表单结果保存为一个模型。
而这正是我们想要的功能，我们可以创建一个ModelForm来将表单转换为一个Post模型。</p>

<p>表单对象的定义放在forms.py文件中。我们需要在blog文件夹中创建forms.py文件，结构如下：</p>

<pre><code>blog
   └── forms.py
</code></pre>

<p>在里面写入如下内容：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django</span> <span class="kn">import</span> <span class="n">forms</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.models</span> <span class="kn">import</span> <span class="n">Post</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">PostForm</span><span class="p">(</span><span class="n">forms</span><span class="o">.</span><span class="n">ModelForm</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class="line">        <span class="n">model</span> <span class="o">=</span> <span class="n">Post</span>
</span><span class="line">        <span class="n">fields</span> <span class="o">=</span> <span class="p">(</span><span class="s">&#39;title&#39;</span><span class="p">,</span> <span class="s">&#39;text&#39;</span><span class="p">,)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>PostForm需要继承自forms.ModelForm，这样django就能实现某些神奇的效果。
在里面我们定义了元类Meta，然后指定model为Post，还有字段为title和text。
因为我们只需要对外暴露标题和内容，至于作者就是登陆用户了，而发布日期和创建日期就是提交时间。</p>

<p>下面我们要做的就是在view中使用我们的form，并在template中显示它。</p>

<p>我们继续走四个步骤：页面上添加链接, 外加“三部曲”。基本上每个新功能的增加时只需要增加这四个东东就行了。</p>

<h3 id="section-2">增加链接</h3>
<p>打开blog/templates/blog/base.html，在名字为page-header的div中添加一个新增文章的链接：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_new&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-plus&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这时候你的base.html应该是这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://fonts.googleapis.com/css?family=Lobster&amp;subset=latin,latin-ext&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;css/blog.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;title&gt;</span>Django Girls Blog<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{% url &#39;blog.views.post_new&#39; %}&quot;</span> <span class="na">class=</span><span class="s">&quot;top-menu&quot;</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;glyphicon glyphicon-plus&quot;</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line">                {% block content %}
</span><span class="line">                {% endblock %}
</span><span class="line">            <span class="nt">&lt;/div&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="url-1">URL</h3>
<p>打开blog/urls.py文件，添加一条配置：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/new/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_new</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;post_new&#39;</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>现在它的内容应该是这样的：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.</span> <span class="kn">import</span> <span class="n">views</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_list</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/(?P&lt;pk&gt;[0-9]+)/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_detail</span><span class="p">),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/new/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_new</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;post_new&#39;</span><span class="p">),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="postnew">post_new视图</h3>
<p>打开文件blog/views.py，先引入PostForm</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">.forms</span> <span class="kn">import</span> <span class="n">PostForm</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后增加视图：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_new</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="n">form</span> <span class="o">=</span> <span class="n">PostForm</span><span class="p">()</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_edit.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;form&#39;</span><span class="p">:</span> <span class="n">form</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="postedithtml">post_edit.html模板</h3>
<p>在blog/templates/blog目录新建一个post_edit.html页面，然后写入下列内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &#39;blog/base.html&#39; %}
</span><span class="line">
</span><span class="line">{% block content %}
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>New post<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span> <span class="na">class=</span><span class="s">&quot;post-form&quot;</span><span class="nt">&gt;</span>{% csrf_token %}
</span><span class="line">        {{ form.as_p }}
</span><span class="line">        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;save btn btn-default&quot;</span><span class="nt">&gt;</span>Save<span class="nt">&lt;/button&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line">{% endblock %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>保存后，刷新首页，点击加号那个链接可以看到如下页面：</p>

<p><img src="http://yidaospace.qiniudn.com/dj018.jpg" alt="" /></p>

<p>但是当你写了文字后点击保存后会发现又跑到这个新建页面来了。
因为这个是POST提交，但是URL还是一样的，又会跑到post_new那个视图中去，
这个视图只做了页面跳转来到了这个新建页面。</p>

<p>那么我们需要修改下post_new视图逻辑了：</p>

<p>在头部先引入下面的依赖：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.core.urlresolvers</span> <span class="kn">import</span> <span class="n">reverse</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">redirect</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后修改post_new视图如下：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_new</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&quot;POST&quot;</span><span class="p">:</span>
</span><span class="line">        <span class="n">form</span> <span class="o">=</span> <span class="n">PostForm</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">POST</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="n">form</span><span class="o">.</span><span class="n">is_valid</span><span class="p">():</span>
</span><span class="line">            <span class="n">post</span> <span class="o">=</span> <span class="n">form</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">commit</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class="line">            <span class="n">post</span><span class="o">.</span><span class="n">author</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">user</span>
</span><span class="line">            <span class="n">post</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">            <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;blog.views.post_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">post</span><span class="o">.</span><span class="n">pk</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">        <span class="n">form</span> <span class="o">=</span> <span class="n">PostForm</span><span class="p">()</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_edit.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;form&#39;</span><span class="p">:</span> <span class="n">form</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上面表示我添加完一篇文章后自动跳转到文章详情页面去，保存后效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj019.jpg" alt="" /></p>

<h3 id="section-3">表单验证</h3>
<p>由于我们在Post模型中已经定义了title和text是必需的，django会自动帮我们做验证。
看下如果我们不输入title和text直接提交会怎样：</p>

<p><img src="http://yidaospace.qiniudn.com/dj020.jpg" alt="" /></p>

<p>django已经自动帮我们做了验证，是不是很酷呢？</p>

<h2 id="section-4">编辑文章</h2>
<p>我们刚刚已经实现了新建文章的功能，那么如果是编辑修改文章呢。接下来我会快速的讲解这个流程，现在你应该是可以看得懂的了。</p>

<p>首先打开blog/templates/blog/post_detail.html，添加一行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&lt;</span><span class="n">a</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;post_edit&#39; pk=post.pk %}&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;glyphicon glyphicon-pencil&quot;</span><span class="o">&gt;&lt;/</span><span class="n">span</span><span class="o">&gt;&lt;/</span><span class="n">a</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>现在它的内容是这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">extends</span> <span class="s">&#39;blog/base.html&#39;</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">block</span> <span class="n">content</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;date&quot;</span><span class="o">&gt;</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">post</span><span class="o">.</span><span class="n">published_date</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">        <span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">published_date</span> <span class="p">}}</span>
</span><span class="line">    <span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">a</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;{</span><span class="si">% u</span><span class="s">rl &#39;post_edit&#39; pk=post.pk %}&quot;</span><span class="o">&gt;&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;glyphicon glyphicon-pencil&quot;</span><span class="o">&gt;&lt;/</span><span class="n">span</span><span class="o">&gt;&lt;/</span><span class="n">a</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">title</span> <span class="p">}}</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{{</span> <span class="n">post</span><span class="o">.</span><span class="n">text</span><span class="o">|</span><span class="n">linebreaks</span> <span class="p">}}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">endblock</span> <span class="o">%</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后修改blog/urls.py文件，添加一条：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">url</span><span class="p">(</span><span class="s">r&#39;^post/(?P&lt;pk&gt;[0-9]+)/edit/$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_edit</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;post_edit&#39;</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我们会重用模板blog/templates/blog/post_edit.html，
因此只需要修改下view就可以了，打开文件blog/views.py，将下面的内容添加到最后：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_edit</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
</span><span class="line">    <span class="n">post</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Post</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">&quot;POST&quot;</span><span class="p">:</span>
</span><span class="line">        <span class="n">form</span> <span class="o">=</span> <span class="n">PostForm</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">POST</span><span class="p">,</span> <span class="n">instance</span><span class="o">=</span><span class="n">post</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="n">form</span><span class="o">.</span><span class="n">is_valid</span><span class="p">():</span>
</span><span class="line">            <span class="n">post</span> <span class="o">=</span> <span class="n">form</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">commit</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class="line">            <span class="n">post</span><span class="o">.</span><span class="n">author</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">user</span>
</span><span class="line">            <span class="n">post</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">            <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;blog.views.post_detail&#39;</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">post</span><span class="o">.</span><span class="n">pk</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">        <span class="n">form</span> <span class="o">=</span> <span class="n">PostForm</span><span class="p">(</span><span class="n">instance</span><span class="o">=</span><span class="n">post</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_edit.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;form&#39;</span><span class="p">:</span> <span class="n">form</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这个跟post_new几乎一模一样，先通过主键查到文章：<code>post = get_object_or_404(Post, pk=pk)</code>，
然后我们在提交和进入编辑页面的时候都将post作为instance参数传递给PostForm。</p>

<p>OK，现在让我们来测试下效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj021.jpg" alt="" /></p>

<p><img src="http://yidaospace.qiniudn.com/dj022.jpg" alt="" /></p>

<p><img src="http://yidaospace.qiniudn.com/dj023.jpg" alt="" /></p>

<p>完美，恭喜你！你的应用已经变得越来越酷了。</p>

<p>如果你想对django的表单有更深入的了解，
请查阅官方文档：<a href="https://docs.djangoproject.com/en/1.7/topics/forms/">https://docs.djangoproject.com/en/1.7/topics/forms/</a></p>

<h2 id="section-5">还有一件事</h2>
<p>发布到heroku上去。不要我每次提醒了吧，Enjoy it！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（6）- 模板继承]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-06.html"/>
    <updated>2015-04-21T11:44:21+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-06</id>
    <content type="html"><![CDATA[<h3 id="section">什么是模板继承？</h3>
<p>就是网站的多个页面可以共享同一个页面布局或者是页面的某几个部分的内容。
通过这种方式你就需要在每个页面复制粘贴同样的代码了。
如果你想改变页面某个公共部分，你不需要每个页面的去修改，只需要修改一个模板就行了，
这样最大化复用，减少了冗余，也减少了出错的几率，而且你敲的代码也少了。</p>

<h3 id="base">创建一个base模板</h3>
<p>一个base模板就是你全站所有页面都会继承的最基本的网站框架模板。我们在blog/templates/blog/中创建一个base.html模板：</p>

<pre><code>blog
└───templates
    └───blog
            base.html
            post_list.html
</code></pre>

<p>打开base.html，然后将post_list.html的所有内容都复制过来，现在它的内容如下：<!--more--></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://fonts.googleapis.com/css?family=Lobster&amp;subset=latin,latin-ext&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;css/blog.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;title&gt;</span>Django Girls Blog<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line">                {% for post in posts %}
</span><span class="line">                    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class="line">                        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">                        <span class="nt">&lt;p&gt;</span>published: {{ post.published_date }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">                        <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">                    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">                {% endfor %}
</span><span class="line">            <span class="nt">&lt;/div&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在base.html中，将…块替换成下面的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            {% block content %}
</span><span class="line">            {% endblock %}
</span><span class="line">            <span class="nt">&lt;/div&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我们其实就是将<code>{% for post in posts %}{% endfor %}</code>
替换成了<code>{% block content %}{% endblock %}</code>。
在base.html中我们创建了一个名字为content的block，其他页面可以通过继承base.html，
替换这个content块来生成新的页面，页面其他内容保持不变。</p>

<p>保存后，再修改post_list.html页面，只保留的内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% for post in posts %}
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">        <span class="nt">&lt;p&gt;</span>published: {{ post.published_date }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">        <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">{% endfor %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后添加这句到post_list.html页面的最开始部分：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &#39;blog/base.html&#39; %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这句话的意思就是该模板继承自blog/base.html模板</p>

<p>还有一步就是要将刚刚的内容放到{% block content %}和
{% endblock content %}之间，这时候整个页面是这样的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% extends &#39;blog/base.html&#39; %}
</span><span class="line">{% block content %}
</span><span class="line">{% for post in posts %}
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">        <span class="nt">&lt;p&gt;</span>published: {{ post.published_date }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">        <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">{% endfor %}
</span><span class="line">{% endblock content %}
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>保存后刷新页面，看下是不是能正常工作：</p>

<p><img src="http://yidaospace.qiniudn.com/dj016.jpg" alt="" /></p>

<p>一切都OK…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（5）- 页面美化]]></title>
    <link href="http://yidao620c.github.io/blog/20150421/simpleblog-05.html"/>
    <updated>2015-04-21T10:23:50+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150421/simpleblog-05</id>
    <content type="html"><![CDATA[<h3 id="css">什么是css？</h3>
<p>css是一种用来描述某种标记语言写的web站点的样式语言。
这里我们并不想展开讨论，关于CSS我在这里推荐一个很不错的资源： <a href="http://www.codecademy.com/tracks/web">Codeacademy HTML &amp; CSS course</a></p>

<p>不想从头开始写，因为我们有现成的css框架，没必要重复造轮子。</p>

<h3 id="bootstrap">使用Bootstrap</h3>
<p>目前最流行的css框架非bootstrap莫属了，官网地址：<a href="http://getbootstrap.com/">http://getbootstrap.com/</a></p>

<p>只需要在你的html模板页面的开始部分添加下面几句就行了</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>你的工程里面不需要引入任何的文件，因为这里直接引用了bootstrap公共的css和js文件。<!--more--></p>

<p>再次打开模板文件，效果如下：</p>

<p><img src="http://yidaospace.qiniudn.com/dj011.jpg" alt="" /></p>

<p>是不是感觉变美观了。^_^</p>

<h3 id="django">django静态文件</h3>
<p>这里我还将讲解下django中的静态文件。静态文件就是css、js、图片、视频等等那些内容不会改变的文件，不管任何时候，对于任何用户都是一样的。</p>

<p>css就是一种静态文件，为了自定义css，我们必须先再django中配置，你只需要配置一次就可以了。那让我们马上开始吧！</p>

<h3 id="django-1">django中配置静态文件</h3>
<p>首先我们需要创建一个目录来存储静态文件，在manage.py的同级目录中创建一个static文件夹</p>

<pre><code>mysite
├─── static
└─── manage.py
</code></pre>

<p>打开配置文件mysite/settings.py，在最后面添加如下配置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">STATICFILES_DIRS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&quot;static&quot;</span><span class="p">),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>它告知django应该在哪个位置去查找静态文件。</p>

<h3 id="css-1">第一个CSS文件</h3>
<p>现在我们开始创建自己的css文件了，首先在static目录中新建一个css目录，然后在里面创建一个blog.css文件。目录结构如下</p>

<pre><code>static
└─── css
     └───blog.css
</code></pre>

<p>打开文件static/css/blog.css后，添加如下内容</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nt">h1</span> <span class="nt">a</span> <span class="p">{</span>
</span><span class="line">    <span class="k">color</span><span class="o">:</span> <span class="m">#FCA205</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>h1 a是CSS选择器，上面的意思是在h1标签下的链接a的文字颜色会是#FCA205，其实就是橘黄色，颜色都是用十六进制表示的。</p>

<p>接下来我们要让模板加载静态css文件，打开blog/templates/blog/post_list.html，在最开始部分加入：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="p">{</span><span class="o">%</span> <span class="n">load</span> <span class="n">staticfiles</span> <span class="o">%</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后在bootstrap引用的后面添加下面这句</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="o">&lt;</span><span class="nt">link</span> <span class="nt">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nt">href</span><span class="o">=</span><span class="s2">&quot;{% static &#39;css/blog.css&#39; %}&quot;</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最后，整个模板文件类似这样：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">{% load staticfiles %}
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line">    <span class="nt">&lt;head&gt;</span>
</span><span class="line">        <span class="nt">&lt;title&gt;</span>Django Girls blog<span class="nt">&lt;/title&gt;</span>
</span><span class="line">        <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">        <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;{% static &#39;css/blog.css&#39; %}&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;/head&gt;</span>
</span><span class="line">    <span class="nt">&lt;body&gt;</span>
</span><span class="line">        <span class="nt">&lt;div&gt;</span>
</span><span class="line">            <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line">        {% for post in posts %}
</span><span class="line">            <span class="nt">&lt;div&gt;</span>
</span><span class="line">                <span class="nt">&lt;p&gt;</span>published: {{ post.published_date }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">                <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">                <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">            <span class="nt">&lt;/div&gt;</span>
</span><span class="line">        {% endfor %}
</span><span class="line">    <span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>OK，保存并刷新后看看效果</p>

<p><img src="http://yidaospace.qiniudn.com/dj012.jpg" alt="" /></p>

<p>我想要文字左边的边距大一点，这样会好看些。那么在blog.css中添加如下内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nt">body</span> <span class="p">{</span>
</span><span class="line">    <span class="k">padding-left</span><span class="o">:</span> <span class="m">15px</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>刷新页面后效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj013.jpg" alt="" /></p>

<p>我还想自定义文字标题的字体，在post_list.html模板的中添加如下一句</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://fonts.googleapis.com/css?family=Lobster&amp;subset=latin,latin-ext&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这句会引入Google的一个字体Lobster，然后修改blog.css中的h1 a的样式如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nt">h1</span> <span class="nt">a</span> <span class="p">{</span>
</span><span class="line">    <span class="k">color</span><span class="o">:</span> <span class="m">#FCA205</span><span class="p">;</span>
</span><span class="line">    <span class="k">font-family</span><span class="o">:</span> <span class="s1">&#39;Lobster&#39;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>刷新后的效果：</p>

<p><img src="http://yidaospace.qiniudn.com/dj014.jpg" alt="" /></p>

<h3 id="cssclass">CSS中的class</h3>
<p>在CSS中有一个class的概念，它可以让你只改变HTML中某一部分的样式而不会影响到其他部分。</p>

<p>这里我们将区别标题头和文章本身的样式。</p>

<p>在post_list.html中添加如下的标题段：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;page-header&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>文章列表段修改如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;content&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-8&quot;</span><span class="nt">&gt;</span>
</span><span class="line">            {% for post in posts %}
</span><span class="line">                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;post&quot;</span><span class="nt">&gt;</span>
</span><span class="line">                    <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">                    <span class="nt">&lt;p&gt;</span>published: {{ post.published_date }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">                    <span class="nt">&lt;p&gt;</span>{{ post.text|linebreaks }}<span class="nt">&lt;/p&gt;</span>
</span><span class="line">                <span class="nt">&lt;/div&gt;</span>
</span><span class="line">            {% endfor %}
</span><span class="line">        <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line"><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>blog.css样式修改如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nc">.page-header</span> <span class="p">{</span>
</span><span class="line">    <span class="k">background-color</span><span class="o">:</span> <span class="m">#ff9400</span><span class="p">;</span>
</span><span class="line">    <span class="k">margin-top</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class="line">    <span class="k">padding</span><span class="o">:</span> <span class="m">20px</span> <span class="m">20px</span> <span class="m">20px</span> <span class="m">40px</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.page-header</span> <span class="nt">h1</span><span class="o">,</span> <span class="nc">.page-header</span> <span class="nt">h1</span> <span class="nt">a</span><span class="o">,</span> <span class="nc">.page-header</span> <span class="nt">h1</span> <span class="nt">a</span><span class="nd">:visited</span><span class="o">,</span> <span class="nc">.page-header</span> <span class="nt">h1</span> <span class="nt">a</span><span class="nd">:active</span> <span class="p">{</span>
</span><span class="line">    <span class="k">color</span><span class="o">:</span> <span class="m">#ffffff</span><span class="p">;</span>
</span><span class="line">    <span class="k">font-size</span><span class="o">:</span> <span class="m">36pt</span><span class="p">;</span>
</span><span class="line">    <span class="k">text-decoration</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.content</span> <span class="p">{</span>
</span><span class="line">    <span class="k">margin-left</span><span class="o">:</span> <span class="m">40px</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span> <span class="p">{</span>
</span><span class="line">    <span class="k">font-family</span><span class="o">:</span> <span class="s1">&#39;Lobster&#39;</span><span class="o">,</span> <span class="k">cursive</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.date</span> <span class="p">{</span>
</span><span class="line">    <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class="line">    <span class="k">color</span><span class="o">:</span> <span class="m">#828282</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.save</span> <span class="p">{</span>
</span><span class="line">    <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.post-form</span> <span class="nt">textarea</span><span class="o">,</span> <span class="nc">.post-form</span> <span class="nt">input</span> <span class="p">{</span>
</span><span class="line">    <span class="k">width</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.top-menu</span><span class="o">,</span> <span class="nc">.top-menu</span><span class="nd">:hover</span><span class="o">,</span> <span class="nc">.top-menu</span><span class="nd">:visited</span> <span class="p">{</span>
</span><span class="line">    <span class="k">color</span><span class="o">:</span> <span class="m">#ffffff</span><span class="p">;</span>
</span><span class="line">    <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class="line">    <span class="k">font-size</span><span class="o">:</span> <span class="m">26pt</span><span class="p">;</span>
</span><span class="line">    <span class="k">margin-right</span><span class="o">:</span> <span class="m">20px</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.post</span> <span class="p">{</span>
</span><span class="line">    <span class="k">margin-bottom</span><span class="o">:</span> <span class="m">70px</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nc">.post</span> <span class="nt">h1</span> <span class="nt">a</span><span class="o">,</span> <span class="nc">.post</span> <span class="nt">h1</span> <span class="nt">a</span><span class="nd">:visited</span> <span class="p">{</span>
</span><span class="line">    <span class="k">color</span><span class="o">:</span> <span class="m">#000000</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>保存这些文件后，刷新页面，看看，是不是很酷了：</p>

<p><img src="http://yidaospace.qiniudn.com/dj015.jpg" alt="" /></p>

<p>已经比较美观了。上面的css应该看起来不会那么难，可以自己试着去修改它，没关系的，反正出错了可以撤销。最好多练习才行。</p>

<p>下一节我将介绍django中模板的继承机制！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（4）- 三部曲]]></title>
    <link href="http://yidao620c.github.io/blog/20150420/simpleblog-04.html"/>
    <updated>2015-04-20T19:16:02+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150420/simpleblog-04</id>
    <content type="html"><![CDATA[<h3 id="section">什么是三部曲？</h3>
<p>其实在django中实现一个功能只需要三个步骤即可，这里我姑且叫它三部曲。</p>

<p>这三部曲就是：</p>

<ol>
  <li>定义urls映射</li>
  <li>定义views</li>
  <li>定义templates</li>
</ol>

<h3 id="url">什么是URL？</h3>
<p>URL就算一个WEB地址，你在浏览器输入这个地址，然后浏览器返回相应的网页给你。
比如http://djangogirls.com是一个URL，而127.0.0.1:8000同样也是个URL，默认就是http协议的。</p>

<h3 id="djangourl">Django中的URL工作原理</h3>
<p>我们打开mysite/urls.py文件，会发现类似下面这样：<!--more--></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
</span><span class="line"><span class="n">admin</span><span class="o">.</span><span class="n">autodiscover</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="c"># Examples:</span>
</span><span class="line">    <span class="c"># url(r&#39;^$&#39;, &#39;mysite.views.home&#39;, name=&#39;home&#39;),</span>
</span><span class="line">    <span class="c"># url(r&#39;^blog/&#39;, include(&#39;blog.urls&#39;)),</span>
</span><span class="line">
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^admin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">)),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上面的两行注释先不要管，这个以后再用到。
django默认已经为我们添加了admin的URL配置。
当django碰到以admin/开头的URL的时候会去admin.site.urls里面去寻找对应的匹配。
所有和admin相关的urls配置都写在一个文件中，这样就便于管理了。</p>

<h3 id="section-1">正则表达式</h3>
<p>你可以看到上面的url用到了正则表达式，比如’^admin/’、’^$’等等，
django是通过正则式来匹配URL的。关于正则式这里不想展开太多。可以参考相关数据和教程。</p>

<h3 id="django-url">第一个django url配置</h3>
<p>现在我们要将http://127.0.0.1:8000/这个首页地址映射到一个显示最新文章列表的页面上面去。一般的博客首页基本都是这样的。</p>

<p>为了保持mysite/urls.py配置文件的简介，我们最好将博客的url配置放到单独的文件中。在mysite/urls.py中去将它引进来即可。</p>

<p>那么你的mysite/urls.py文件现在类似于这样了：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
</span><span class="line"><span class="n">admin</span><span class="o">.</span><span class="n">autodiscover</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^admin/&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">urls</span><span class="p">)),</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;&#39;</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">&#39;blog.urls&#39;</span><span class="p">)),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="blogurls">blog.urls</h3>
<p>创建文件blog/urls.py，然后加入下列内容</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">patterns</span><span class="p">,</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.</span> <span class="kn">import</span> <span class="n">views</span>
</span><span class="line">
</span><span class="line"><span class="n">urlpatterns</span> <span class="o">=</span> <span class="n">patterns</span><span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">url</span><span class="p">(</span><span class="s">r&#39;^$&#39;</span><span class="p">,</span> <span class="n">views</span><span class="o">.</span><span class="n">post_list</span><span class="p">),</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>现在我们将r’^$’的url映射到视图views.post_list。</p>

<p>不过你要是现在就访问首页http://127.0.0.1:8000/的话会报错的。</p>

<p><img src="http://yidaospace.qiniudn.com/dj006.jpg" alt="" /></p>

<p>为啥，因为你的视图views.post_list现在没有实现啊，找不到这个方法！</p>

<p>那么接下来我们就来讲解view的实现了。</p>

<h3 id="view">什么是view？</h3>
<p>view也叫视图，在django中它存放了实际的业务逻辑。这个跟我们通常所说的MVC中的view是不一样的。</p>

<p><strong>django的MTV模式</strong></p>

<p>这里我稍微解释下django的结构，一般我们称之为MTV模式：</p>

<ol>
  <li>M 代表模型（Model），即数据存取层。该层处理与数据相关的所有事务：如何存取、如何确认有效性、包含哪些行为以及数据之间的关系等。</li>
  <li>T 代表模板(Template)，即表现层。该层处理与表现相关的决定：如何在页面或其他类型文档中进行显示。</li>
  <li>V 代表视图（View），即业务逻辑层。该层包含存取模型及调取恰当模板的相关逻辑。你可以把它看作模型与模板之间的桥梁。</li>
</ol>

<p>那么通常意义的控制器Controller去哪里了呢，细心的童鞋应该会猜到了，那就是我们上一节所讲的urls.py配置文件。</p>

<p>一句话总结：URLconf+MTV构成了django的总体架构。</p>

<p><strong>blog/views.py</strong></p>

<p>这个文件初始内容是这样的：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
</span><span class="line">
</span><span class="line"><span class="c"># Create your views here.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>添加一个最简单的视图：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">post_list</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_list.html&#39;</span><span class="p">,</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我们定义了一个方法post_list，它的参数是request，使用render函数返回一个html模板blog/post_list.html。</p>

<p>接下来我们访问下首页，OMG，又出错了：</p>

<p><img src="http://yidaospace.qiniudn.com/dj007.jpg" alt="" /></p>

<p>这次报的错是模板blog/post_list.html找不到。这个是显而易见的，因为我们根本还没有定义这个html模板。</p>

<p>别着急，继续沿着教程往下看就行…</p>

<h3 id="section-2">什么是模板？</h3>
<p>一个模板就是一个使用固定格式呈现动态内容的可重用的文件。
比如你可以使用一个模板来写邮件，每封邮件可能有不同的内容，寄给不同的人，但是它们的格式是一样的。</p>

<p>Django中的模板使用HTML文件，至于神马是HTML，这个去参考下W3C或者自行google下，
不过如果做web开发的人不懂HTML，请不要告诉别人我认识你。^_^</p>

<p>** 第一个模板 **</p>

<p>创建一个模板就是创建一个HTML文件。模板文件存储在blog/templates/blog目录下面，
首先在blog目录下创建templates目录，然后再在templates目录下创建blog目录，至于为啥要这么做，
先不用管，django里面很多目录都是约定好的，这个就跟maven是一样的，约定高于配置。
所以你先照着做就是了。目录结构如下：</p>

<pre><code>blog
└───templates
    └───blog
</code></pre>

<p>然后在blog/templates/blog目录下创建一个post_list.html文件，现在里面还没有内容。</p>

<p>这时候再次访问首页，效果如下：</p>

<p><img src="http://yidaospace.qiniudn.com/dj008.jpg" alt="" /></p>

<p>一片空白，但没有报错了。</p>

<p>在post_list.html中添加点东西：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Hi there!<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>It works!<span class="nt">&lt;/p&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再次访问http://192.168.203.95:8000/：</p>

<p><img src="http://yidaospace.qiniudn.com/dj009.jpg" alt="" /></p>

<h3 id="section-3">动态模板</h3>
<p>不过目前为止我们还只能显示静态的网页。怎样将文章列表在首页显示出来呢？</p>

<p>我们已经有了模型Post，有了模板post_list.html，怎样使得模型数据在模板中显示出来呢，
这个就是视图的功能了，实际上，django中的视图的作用就是连接模型和模板的桥梁。
在视图中，通过QuerySet将数据库中的数据检索出来，然后传递给模板，模板负责显示出来。</p>

<p>首先打开blog/views.py，它目前的内容是这样的：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">post_list</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_list.html&#39;</span><span class="p">,</span> <span class="p">{})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这时候我们将Post模型导入进来</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.models</span> <span class="kn">import</span> <span class="n">Post</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>注意我们还是用到了相对导入，这是python3的强大功能。</p>

<h3 id="queryset">QuerySet</h3>
<p>是时候请出QuerySet了，在模型和ORM小节我们已经介绍过。</p>

<p>现在我们想要将数据库中的文章都检索出来并且按照发布日期逆序排序，使得最新的文章放前面。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.models</span> <span class="kn">import</span> <span class="n">Post</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">post_list</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
</span><span class="line">    <span class="n">posts</span> <span class="o">=</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">published_date__isnull</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="s">&#39;-published_date&#39;</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;blog/post_list.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;posts&#39;</span><span class="p">:</span> <span class="n">posts</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>注意render函数中最后一个参数{‘posts’: posts}，这个就是用来给模板传递数据的。</p>

<h3 id="section-4">模板标签</h3>
<p>HTML页面只识别HTML标签，那么怎样让生成动态的内容呢？答案就是使用django自带的模板标签，
包括了判断、循环、管道等语法。我们已经获取了文章的列表了，那么可以使用for循环来生成相应的HTML页面：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line"><span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span>Django Girls Blog<span class="nt">&lt;/title&gt;</span>
</span><span class="line"><span class="nt">&lt;/head&gt;</span>
</span><span class="line"><span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div&gt;</span>
</span><span class="line">        <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Django Girls Blog<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;/div&gt;</span>
</span><span class="line">    
</span><span class="line"><span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在<code>{% for %}</code> 和<code>{% endfor %}</code>之间会循环每个post，然后每次生成一段</p>

<p>现在再次访问首页，效果如下：</p>

<p><img src="http://yidaospace.qiniudn.com/dj010.jpg" alt="" /></p>

<h3 id="section-5">别忘了一件事</h3>
<p>别忘了把它push到heroku上面去。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">git add .
</span><span class="line">git commit -m &#39;动态文章列表首页&#39;
</span><span class="line">git push origin master
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>恭喜你，目前为止基本的全程已经贯通了。打开admin后添加几篇文章，
记得填上发布日期，再刷新下首页，看会不会显示出来。</p>

<p>好了，这时候你可以出门左拐去小卖部给自己买点棒棒糖奖励下自己了！</p>

<p>不过我们的教程还没完，怎样让页面变得漂亮呢？请看下一节。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（3）- 部署]]></title>
    <link href="http://yidao620c.github.io/blog/20150420/simpleblog-03.html"/>
    <updated>2015-04-20T19:03:57+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150420/simpleblog-03</id>
    <content type="html"><![CDATA[<p>到目前为止，你的网站只能在你自己的电脑上访问到。你需要将它发布到公网上去让地球上的人都能看到，那么要怎么做呢？</p>

<h3 id="heroku">Heroku简介</h3>
<p>Heroku是一个主机托管平台，对于访问量不是很大的小应用是免费的，正好适用于我们的这个例子。</p>

<p>Heroku官网上有一篇django的教程：
<a href="https://devcenter.heroku.com/articles/getting-started-with-django">getting started with django</a></p>

<p>这里我把它复制到这里来详细讲解一下。</p>

<h3 id="requirementstxt">requirements.txt文件</h3>
<p>我们需要创建一个requirements.txt文件来告知Heroku需要在服务器上创建哪些python包。</p>

<p>不过首先，Heroku需要我们在本地按照一些包。在python虚拟环境virtualenv下面执行：<!--more--></p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">(myvenv) [mango@centos mysite]$ pip install dj-database-url gunicorn whitenoise</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后，在mysite目录，也就是manage.py所在目录执行：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">(myvenv) [mango@centos00 mysite]$ pip freeze &gt; requirements.txt</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这条命令会新建一个requirements.txt文件，里面包含了工程的所有依赖包。</p>

<p>打开这个文件，添加下面这句话：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">psycopg2==2.5.4</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>要想在Heroku上面运行，必须加上这句。</p>

<h3 id="procfile">Procfile文件</h3>
<p>另一个需要创建的文件就是Procfile，它告知Heroku在启动网站时需要执行的命令。
同样在manage.py所在目录，新建一个文件名为Procfile，添加如下内容：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">web: gunicorn mysite.wsgi</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这句话的意思就是我们将要部署一个web应用程序，并且我们通过执行 gunicorn mysite.wsgi命令来完成。</p>

<p>gunicorn是一个类似django的runserver的程序，但是功能更强大。</p>

<h3 id="runtimetxt">runtime.txt文件</h3>
<p>我们需要告知Heroku运行时的python版本，这里我们指定为3.4.2。新建runtime.txt，加入</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">python-3.4.2</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="mysitelocalsettingspy">mysite/local_settings.py文件</h3>
<p>由于我们本地开发使用的数据库跟服务器上部署时使用的数据库是不一样的。
那么我们需要创建一个local_settings.py来指定本地用的数据库。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">os</span>
</span><span class="line"><span class="n">BASE_DIR</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.sqlite3&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&#39;db.sqlite3&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="mysitesettingspy">mysite/settings.py文件</h3>
<p>另外我们还需要修改settings.py文件，在文件结尾添加如下几行</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">dj_database_url</span>
</span><span class="line"><span class="n">DATABASES</span><span class="p">[</span><span class="s">&#39;default&#39;</span><span class="p">]</span> <span class="o">=</span>  <span class="n">dj_database_url</span><span class="o">.</span><span class="n">config</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">SECURE_PROXY_SSL_HEADER</span> <span class="o">=</span> <span class="p">(</span><span class="s">&#39;HTTP_X_FORWARDED_PROTO&#39;</span><span class="p">,</span> <span class="s">&#39;https&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">ALLOWED_HOSTS</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;*&#39;</span><span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="n">STATIC_ROOT</span> <span class="o">=</span> <span class="s">&#39;staticfiles&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">False</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后再导入本地开发配置，也是在最后添加</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">try</span><span class="p">:</span>
</span><span class="line">    <span class="kn">from</span> <span class="nn">.local_settings</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line"><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class="line">    <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="mysitewsgipy">mysite/wsgi.py文件</h3>
<p>打开mysite/wsgi.py文件，添加如下几行到最后：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">whitenoise.django</span> <span class="kn">import</span> <span class="n">DjangoWhiteNoise</span>
</span><span class="line"><span class="n">application</span> <span class="o">=</span> <span class="n">DjangoWhiteNoise</span><span class="p">(</span><span class="n">application</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>OK，工程配置修改做完了。</p>

<h3 id="heroku-1">Heroku账号</h3>
<p>首先你需要安装Heroku toolbelt，教程地址：<a href="https://toolbelt.heroku.com/">https://toolbelt.heroku.com/</a></p>

<p>两句话搞定：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">wget</span> <span class="o">-</span><span class="n">qO</span><span class="o">-</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">toolbelt</span><span class="o">.</span><span class="n">heroku</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">install</span><span class="o">.</span><span class="n">sh</span> <span class="o">|</span> <span class="n">sh</span>
</span><span class="line"><span class="n">echo</span> <span class="s">&#39;PATH=&quot;/usr/local/heroku/bin:$PATH&quot;&#39;</span> <span class="o">&gt;&gt;</span> <span class="o">~/.</span><span class="n">profile</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后申请一个账号：<a href="https://id.heroku.com/signup/www-home-top">https://id.heroku.com/signup/www-home-top</a></p>

<p>登录：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">heroku</span> <span class="n">login</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>如果报bad URI错误的话，那么代理设置必须是http://192.168.203.91:3128/这样的完整形式。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">work</span><span class="p">]</span><span class="err">$</span> <span class="n">heroku</span> <span class="n">login</span>
</span><span class="line"><span class="n">Enter</span> <span class="n">your</span> <span class="n">Heroku</span> <span class="n">credentials</span><span class="o">.</span>
</span><span class="line"><span class="n">Email</span><span class="p">:</span> <span class="n">yidao620</span><span class="nd">@gmail.com</span>
</span><span class="line"><span class="n">Password</span> <span class="p">(</span><span class="n">typing</span> <span class="n">will</span> <span class="n">be</span> <span class="n">hidden</span><span class="p">):</span>
</span><span class="line"><span class="n">Your</span> <span class="n">Heroku</span> <span class="n">account</span> <span class="n">does</span> <span class="ow">not</span> <span class="n">have</span> <span class="n">a</span> <span class="n">public</span> <span class="n">ssh</span> <span class="n">key</span> <span class="n">uploaded</span><span class="o">.</span>
</span><span class="line"><span class="n">Found</span> <span class="n">an</span> <span class="n">SSH</span> <span class="n">public</span> <span class="n">key</span> <span class="n">at</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">mango</span><span class="o">/.</span><span class="n">ssh</span><span class="o">/</span><span class="n">id_rsa</span><span class="o">.</span><span class="n">pub</span>
</span><span class="line"><span class="n">Would</span> <span class="n">you</span> <span class="n">like</span> <span class="n">to</span> <span class="n">upload</span> <span class="n">it</span> <span class="n">to</span> <span class="n">Heroku</span><span class="err">?</span> <span class="p">[</span><span class="n">Yn</span><span class="p">]</span> <span class="n">Y</span>
</span><span class="line"><span class="n">Uploading</span> <span class="n">SSH</span> <span class="n">public</span> <span class="n">key</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">mango</span><span class="o">/.</span><span class="n">ssh</span><span class="o">/</span><span class="n">id_rsa</span><span class="o">.</span><span class="n">pub</span><span class="o">...</span> <span class="n">done</span>
</span><span class="line"><span class="n">Authentication</span> <span class="n">successful</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="gitignore">.gitignore文件</h3>
<p>我们并不想将所有文件都上传到服务器上，
比如我们本地设置local_setttings.py，数据库文件等。
在我们工程主目录下面创建一个.gitignore文件，内容如下</p>

<pre><code>myvenv
__pycache__
*.pyc
staticfiles
local_settings.py
db.sqlite3
</code></pre>

<h3 id="heroku-2">部署到Heroku</h3>
<p>第一步先创建一个工程</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">heroku</span> <span class="n">create</span> <span class="n">yidaoblog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>返回结果</p>

<pre><code>Creating yidaoblog... done, stack is cedar
https://yidaoblog.herokuapp.com/ | git@heroku.com:yidaoblog.git
</code></pre>

<p>请记住上面的地址git@heroku.com:yidaoblog.git</p>

<p>第二步初始化git本地仓库提交，并添加上面的远程仓库地址</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">git</span> <span class="n">init</span>
</span><span class="line"><span class="err">初始化空的</span> <span class="n">Git</span> <span class="err">版本库于</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">mango</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">djangogirls</span><span class="o">/</span><span class="n">mysite</span><span class="o">/.</span><span class="n">git</span><span class="o">/</span>
</span><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s">&#39;yidao blog by django.&#39;</span>
</span><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">origin</span> <span class="n">git</span><span class="nd">@heroku.com</span><span class="p">:</span><span class="n">yidaoblog</span><span class="o">.</span><span class="n">git</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>第三步push工程</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">master</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最后得到类似下面的输出：</p>

<pre><code>Successfully installed Django dj-database-url gunicorn whitenoise psycopg2
     Cleaning up...

-----&gt; Preparing static assets
       Running collectstatic...
       61 static files copied to '/app/staticfiles'.

-----&gt; Discovering process types
       Procfile declares types -&gt; web

-----&gt; Compressing... done, 39.6MB
-----&gt; Launching... done, v5
       https://yidaoblog.herokuapp.com/ deployed to Heroku

To git@heroku.com:yidaoblog.git
 * [new branch]      master -&gt; master
</code></pre>

<p>大功告成。</p>

<h3 id="section">访问应用</h3>
<p>让Heroku启动你的应用</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="err">$</span> <span class="n">heroku</span> <span class="n">ps</span><span class="p">:</span><span class="n">scale</span> <span class="n">web</span><span class="o">=</span><span class="mi">1</span> <span class="o">--</span><span class="n">app</span> <span class="n">yidaoblog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>启动一个实例即可</p>

<p>同步数据库（这一步是必须要做的，否则会报500错误）：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="err">$</span> <span class="n">heroku</span> <span class="n">run</span><span class="p">:</span><span class="n">detached</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">migrate</span> <span class="o">--</span><span class="n">app</span> <span class="n">yidaoblog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>不过我运行后，只是表结构同步了，本地数据并没有同步，所以还要进行数据同步。
试了好多教程都不尽如人意。最后一个最好的方案是本地直接使用postgresql开发，然后使用import技术。</p>

<p>参考教程： <a href="https://devcenter.heroku.com/articles/heroku-postgres-import-export">https://devcenter.heroku.com/articles/heroku-postgres-import-export</a></p>

<p>如果本地要使用postgresql开发的话，local_settings.py文件需要修改如下：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">os</span>
</span><span class="line"><span class="n">BASE_DIR</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.postgresql_psycopg2&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="s">&#39;django&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;USER&#39;</span><span class="p">:</span> <span class="s">&#39;postgres&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;PASSWORD&#39;</span><span class="p">:</span> <span class="s">&#39;postgres&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;HOST&#39;</span><span class="p">:</span> <span class="s">&#39;192.168.203.95&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;PORT&#39;</span><span class="p">:</span> <span class="s">&#39;5432&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">DEBUG</span> <span class="o">=</span> <span class="bp">True</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="centos6postgresql93">在CentOS6上面安装postgresql9.3</h3>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">sudo</span> <span class="n">yum</span> <span class="n">install</span> <span class="n">python</span><span class="o">-</span><span class="n">devel</span>
</span><span class="line"><span class="n">export</span> <span class="n">PATH</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">pgsql</span><span class="o">-</span><span class="mf">9.3</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="p">:</span><span class="err">$</span><span class="n">PATH</span>
</span><span class="line"><span class="n">pip</span> <span class="n">install</span> <span class="n">psycopg2</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>出现pg_config命令找不到的时候可以先find：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">sudo</span> <span class="n">find</span> <span class="o">/</span><span class="n">usr</span> <span class="o">-</span><span class="n">name</span> <span class="n">pg_config</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>然后添加到PATH中去：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">export</span> <span class="n">PATH</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">pgsql</span><span class="o">-</span><span class="mf">9.3</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="p">:</span><span class="err">$</span><span class="n">PATH</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>使用postgres用户登录后备份数据库：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">su</span> <span class="o">-</span> <span class="n">postgres</span><span class="p">(</span><span class="n">postgres</span><span class="p">)</span>
</span><span class="line"><span class="n">pg_dump</span> <span class="n">dbname</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">mydb</span><span class="o">.</span><span class="n">txt</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>将输出的mydb.txt放到某个静态文件服务器上，必须在公网上可访问，比如七牛存储。
为什么我没有选择AWS S3呢？原因你肯定懂得啦，就算我有了梯子还是不行，
弄了一下午还是没成功，快气晕了。哎…</p>

<p>使用如下命令进行数据同步：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">heroku</span> <span class="n">pgbackups</span><span class="p">:</span><span class="n">restore</span> <span class="n">DATABASE_URL</span> <span class="s">&#39;http://yidaospace.qiniudn.com/mydb.txt&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>期间需要你输入你的app名字来确认，并且还需要给你的app添加一个免费的addon：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">heroku</span> <span class="n">addons</span><span class="p">:</span><span class="n">add</span> <span class="n">pgbackups</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>查看日志：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">heroku</span> <span class="n">logs</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>查看启动的实例</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">heroku</span> <span class="n">ps</span>
</span><span class="line"><span class="o">===</span> <span class="n">web</span> <span class="p">(</span><span class="mi">1</span><span class="n">X</span><span class="p">):</span> <span class="sb">`gunicorn mysite.wsgi`</span>
</span><span class="line"><span class="n">web</span><span class="o">.</span><span class="mi">1</span><span class="p">:</span> <span class="n">up</span> <span class="mi">2014</span><span class="o">/</span><span class="mi">11</span><span class="o">/</span><span class="mo">04</span> <span class="mi">09</span><span class="p">:</span><span class="mi">40</span><span class="p">:</span><span class="mi">43</span> <span class="p">(</span><span class="o">~</span> <span class="mi">7</span><span class="n">m</span> <span class="n">ago</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开浏览器访问吧！ Enjoy it…</p>

<p>输入网址 https://yidaoblog.herokuapp.com/admin 后的界面如下：</p>

<p><img src="http://yidaospace.qiniudn.com/dj005.jpg" alt="" /></p>

<p>停止应用的命令</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">heroku</span> <span class="n">ps</span><span class="p">:</span><span class="n">scale</span> <span class="n">web</span><span class="o">=</span><span class="mi">0</span> <span class="o">--</span><span class="n">app</span> <span class="n">yidaoblog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（2）- 模型]]></title>
    <link href="http://yidao620c.github.io/blog/20150420/simpleblog-02.html"/>
    <updated>2015-04-20T18:49:57+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150420/simpleblog-02</id>
    <content type="html"><![CDATA[<h3 id="section">什么是模型？</h3>
<p>django的模型就是用于在数据库中存储的某种类型的对象。在我们的博客系统中，
发表的文章就是一个模型，需要存储在数据库中。
这里我们使用django默认的sqlite3库，对于我们的这个小系统而言已经足够了。</p>

<h3 id="section-1">创建一个应用</h3>
<p>在django中有两个概念需要弄清楚。一个是工程（project）的概念，一个是应用（application）的概念。
它们的关系是：一个工程中包含多个应用。每个应用都是独立的，应用通过setting.py注册到工程中来就可以使用了。
这样可以解耦合，并且好的应用也可以复用。很好的模块化设计！</p>

<p>在manage.py文件所在目录，执行下面命令：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">(myvenv) [mango@centos00 mysite]$ python manage.py startapp blog</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>你会看到一个新的blog文件夹被创建，并且下面多了许多文件，目前结构如下：<!--more--></p>

<pre><code>mysite
├── mysite
|       __init__.py
|       settings.py
|       urls.py
|       wsgi.py
├── manage.py
└── blog
    ├── migrations
    |       __init__.py
    ├── __init__.py
    ├── admin.py
    ├── models.py
    ├── tests.py
    └── views.py
</code></pre>

<p>然后在setting.py中注册这个应用</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="s">&#39;django.contrib.admin&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.auth&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.contenttypes&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.sessions&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.messages&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;django.contrib.staticfiles&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;blog&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">创建一个博客文章的模型</h3>
<p>在blog/models.py中定义所有的模型，用vim打开后添加下面的内容</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">django.utils</span> <span class="kn">import</span> <span class="n">timezone</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">User</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Post</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class="line">    <span class="n">author</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">User</span><span class="p">)</span>
</span><span class="line">    <span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</span><span class="line">    <span class="n">text</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">TextField</span><span class="p">()</span>
</span><span class="line">    <span class="n">created_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="n">timezone</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
</span><span class="line">    <span class="n">published_date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">publish</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">published_date</span> <span class="o">=</span> <span class="n">timezone</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">title</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>我们定义了作者，标题，文章内容，创建时间，发布时间等。还添加了一个publish方法用于保存发布。
每个字段都需要定义它的类型，这里的几个类型解释如下：</p>

<pre><code>CharField：普通的文本
TextField：长文本
DateTimeField：日期时间类型
ForeignKey：外键类型
</code></pre>

<p>详细的字段类型说明请参考官方文档：<a href="https://docs.djangoproject.com/en/1.7/ref/models/fields/#field-types">field-types</a></p>

<p><strong>在数据库中为模型生成表结构：</strong></p>

<p>每次我们新建了一个模型后，需要在数据库中添加对应的表。</p>

<p>第一步是先让django感知到我们刚刚已经创建了一个新的模型：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">makemigrations</span> <span class="n">blog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>输出如下：</p>

<pre><code>Migrations for 'blog':
  0001_initial.py:
    - Create model Post
</code></pre>

<p>这时候django已经为我们准备好了数据库更新的sql文件。</p>

<p>第二步是让django帮我们执行这些文件：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">migrate</span> <span class="n">blog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>输出如下：</p>

<pre><code>Operations to perform:
  Apply all migrations: blog
Running migrations:
  Applying blog.0001_initial... OK
</code></pre>

<p>OK，这时候数据库中已经有post这张表了。</p>

<h3 id="orm">对象关系映射ORM</h3>
<p>下面我们看看django的ORM是怎样和数据库打交道的。</p>

<p>首先解释下QuerySet，它是某个模型的对象列表，用来从数据库中读取数据，过滤和排序等等。</p>

<h3 id="djangodjango-shell">Django控制台Django Shell</h3>
<p>执行以下命令可以打开django的控制台</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">shell</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>查询所有的博客文章</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">blog.models</span> <span class="kn">import</span> <span class="n">Post</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class="line"><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这时候肯定是空的，因为我们还没有任何数据。</p>

<p>下面我们去新建几篇文章</p>

<p>先要创建一个用户，因为Post里面有User外键</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">django.contrib.auth.models</span> <span class="kn">import</span> <span class="n">User</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">User</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="s">&#39;ola&#39;</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">User</span><span class="p">:</span> <span class="n">ola</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">User</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">User</span><span class="p">:</span> <span class="n">ola</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后添加文章：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">username</span><span class="o">=</span><span class="s">&#39;ola&#39;</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">author</span> <span class="o">=</span> <span class="n">user</span><span class="p">,</span> <span class="n">title</span> <span class="o">=</span> <span class="s">&#39;Sample title&#39;</span><span class="p">,</span> <span class="n">text</span> <span class="o">=</span> <span class="s">&#39;Test&#39;</span><span class="p">)</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Sample</span> <span class="n">title</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Sample</span> <span class="n">title</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>文章过滤</strong></p>

<p>先像前面那样再添加几篇文章，此处省略七十二个字….</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">author</span><span class="o">=</span><span class="n">user</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Sample</span> <span class="n">title</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Cool</span> <span class="n">day</span> <span class="n">Aha</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">LiLei</span> <span class="ow">and</span> <span class="n">Hanmeimei</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Happy</span> <span class="n">boy</span><span class="o">&gt;</span><span class="p">]</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">title__contains</span><span class="o">=</span><span class="s">&#39;LiLei&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">LiLei</span> <span class="ow">and</span> <span class="n">Hanmeimei</span><span class="o">&gt;</span><span class="p">]</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">published_date__isnull</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class="line"><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最后的输出表示所有的文章published_date都是空的。我想改变这个情况。可以这样做</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">post</span> <span class="o">=</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">post</span><span class="o">.</span><span class="n">publish</span><span class="p">()</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">published_date__isnull</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Sample</span> <span class="n">title</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>结果排序</strong></p>

<p>还可以根据某个或某几个字段来排序检索结果</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="s">&#39;created_date&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Sample</span> <span class="n">title</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Cool</span> <span class="n">day</span> <span class="n">Aha</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">LiLei</span> <span class="ow">and</span> <span class="n">Hanmeimei</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Happy</span> <span class="n">boy</span><span class="o">&gt;</span><span class="p">]</span>
</span><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="n">Post</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="s">&#39;-created_date&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">[</span><span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Happy</span> <span class="n">boy</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">LiLei</span> <span class="ow">and</span> <span class="n">Hanmeimei</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Cool</span> <span class="n">day</span> <span class="n">Aha</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">Post</span><span class="p">:</span> <span class="n">Sample</span> <span class="n">title</span><span class="o">&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>OK，目前为止你应该对django的ORM有了大体的了解了。</p>

<p>请用exit()退出django的控制台</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">&gt;&gt;&gt;</span> <span class="nb">exit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="django-admin">利用django admin修改模型</h3>
<p>在上面我们已经创建了Post模型并且通过django控制台来添加修改模型。
然后我们使用django自带的web管理界面admin来在页面上修改模型数据。</p>

<h3 id="section-3">模型注册</h3>
<p>首先我们需要在admin中注册对应的模型，打开blog/admin.py文件，修改如下</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">.models</span> <span class="kn">import</span> <span class="n">Post</span>
</span><span class="line">
</span><span class="line"><span class="n">admin</span><span class="o">.</span><span class="n">site</span><span class="o">.</span><span class="n">register</span><span class="p">(</span><span class="n">Post</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>注意上面的from .models import Post，使用到了python3的相对导入。</p>

<h3 id="section-4">运行服务器</h3>
<p>一切都这么简单，接下来我们启动服务器</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">runserver</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">203.95</span><span class="p">:</span><span class="mi">8000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>打开链接：http://192.168.203.95:8000/admin/</p>

<p>看到下面的界面：</p>

<p><img src="http://yidaospace.qiniudn.com/dj002.jpg" alt="" /></p>

<h3 id="section-5">添加管理员</h3>

<p>不过你需要一个管理员才能登录。运行python manage.py createsuperuser可以创建管理员账号。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">createsuperuser</span>
</span><span class="line"><span class="n">Username</span> <span class="p">(</span><span class="n">leave</span> <span class="n">blank</span> <span class="n">to</span> <span class="n">use</span> <span class="s">&#39;mango&#39;</span><span class="p">):</span> <span class="n">admin</span>
</span><span class="line"><span class="n">Email</span> <span class="n">address</span><span class="p">:</span> <span class="n">admin</span><span class="nd">@gmail.com</span>
</span><span class="line"><span class="n">Password</span><span class="p">:</span>
</span><span class="line"><span class="n">Password</span> <span class="p">(</span><span class="n">again</span><span class="p">):</span>
</span><span class="line"><span class="n">Superuser</span> <span class="n">created</span> <span class="n">successfully</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我创建了一个admin/admin的账户。这时候登录</p>

<p><img src="http://yidaospace.qiniudn.com/dj003.jpg" alt="" /></p>

<p>点击Posts修改或者增加等等，确保里面至少2个又published_date，这个后面会用到。</p>

<p><img src="http://yidaospace.qiniudn.com/dj004.jpg" alt="" /></p>

<p>更多关于django admin的内容，参考官方文档：<a href="https://docs.djangoproject.com/en/1.7/ref/contrib/admin/">admin</a></p>

<h3 id="section-6">接下来呢？</h3>
<p>先别急嘛，坐下来喝杯咖啡先。到现在为止你已经前进了很远了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django1.7开发博客（1）- 入门篇]]></title>
    <link href="http://yidao620c.github.io/blog/20150420/simpleblog-01.html"/>
    <updated>2015-04-20T17:31:20+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150420/simpleblog-01</id>
    <content type="html"><![CDATA[<h3 id="section">开篇</h3>
<p>笔者用过django一段时间了，是时候做点笔记了。不过官网文档稍微有点复杂，对新手而言很困难，
而网上的一些教程很多都过时了。
最近看到一个外文的教程非常不错，
网址是：<a href="http://tutorial.djangogirls.org/">http://tutorial.djangogirls.org/</a>，
这个是基于最新的django1.7写的，通俗易懂，非常适合新手入门。
那么我自己参考这个整理了一下这个教程，同时还将源码上传到GitHub上去了。
希望对于大家有帮助。教程中如果有不足之处希望大家不吝赐教 ^_^</p>

<p>参考教程：<a href="http://tutorial.djangogirls.org/">http://tutorial.djangogirls.org/</a></p>

<p>GitHub项目地址：<a href="https://github.com/yidao620c/simpleblog">https://github.com/yidao620c/simpleblog</a></p>

<p>Heroku演示地址：<a href="https://yidaoblog.herokuapp.com/">https://yidaoblog.herokuapp.com/</a><!--more--></p>

<p>非常期待有人合作一起完成正式版1.0。目前有35个人fork，但暂时还木有收到任何的pull requests。→_→</p>

<h3 id="django">Django是神马？</h3>

<p>Django是一个开源免费的Web框架，使用Python编写。能够让你快速写出一个Web应用，
因为它包含了绝大部分的组件，比如认证，表单，ORM，Session，安全，文件上传，页面模板等，避免了重复造轮子。</p>

<p>官方网站：<a href="https://www.djangoproject.com/">https://www.djangoproject.com/</a></p>

<p>笔者写这篇教程的时候，最新版本是1.7.</p>

<h3 id="django17">安装Django1.7</h3>

<p><strong>安装python虚拟环境：</strong></p>

<p>为了开发应用的时候使用单独的环境，最好是安装virtual environment，
这样有很好的独立性，可以在里面乱搞而不会影响到其他的应用开发。</p>

<p>下面我以cetnos6.5测试环境为例子介绍怎样去安装python的virtual environment，
该测试机的IP地址是192.168.203.95。</p>

<p>1，先安装python3，最新版本是3.4.2</p>

<p>centos6.5上面默认没有安装python3，那么需要先安装python3。
注意不能简单的使用yum去安装。关于这个教程，可以去网上搜索下。</p>

<p>笔者给出一个参考：<a href="http://www.shayanderson.com/linux/install-python-3-on-centos-6-server.htm">install-python3-on-centos6</a></p>

<p>2， 安装virtualenv</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">pip3 install virtualenv</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>关于virtualenv的详细说明，请参考文档：<a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/">virtualenv</a></p>

<p>3，创建一个文件夹叫djangogirls</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">mkdir djangogirls
</span><span class="line">cd djangogirls</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>4，创建虚拟环境myenv</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">python3 -m venv myvenv</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>5，激活虚拟环境</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">source myvenv/bin/activate</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果看到下面这个提示，说明成功进入了虚拟环境：<code>(myvenv) ~/djangogirls$</code></p>

<p>这时候可以使用python来代替python3了。</p>

<p>6，在虚拟环境中安装django1.7</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">(myvenv) ~$ pip install django==1.7
</span><span class="line">Downloading/unpacking django==1.7
</span><span class="line">Installing collected packages: django
</span><span class="line">Successfully installed django
</span><span class="line">Cleaning up...</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>OK，到此为止，django1.7环境已经搞定了。</p>

<h3 id="section-1">生成项目骨架</h3>

<p>接下来一步是生成项目骨架，Django为我们提供了很多有用的脚本让我们可以很方便的使用简单的命令即可生成基本的目录和文件。</p>

<p>对于生产的文件和目录名称请不要随意去修改，也不要随意去移动文件的位置，
因为这些都是约定好的。Django会根据特定的结构去查找对应的文件。</p>

<p>假设你已经在刚刚的djangogirls目录中了，那么执行下面的命令：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">(myvenv) [mango@centos00 djangogirls]$ django-admin.py startproject mysite</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>会自动在djangogirls目录中生成一个mysite目录，进入mysite目录，会是下面的结构：</p>

<pre><code>myste
├───manage.py
└───mysite
        settings.py
        urls.py
        wsgi.py
        __init__.py
</code></pre>

<p>manage.py是管理网站的脚本，可以使用它来启动一个简单的web服务器，这个对于开发调试非常有用。</p>

<p>setting.py是工程的核心配置文件。</p>

<p>urls.py是路径配置文件，可以配置URL到实际Controller的映射关系。</p>

<h3 id="section-2">修改默认配置</h3>

<p>我们可以试着去修改下setting.py配置文件中的时区配置，改为你所在的地区的时区。
关于时区可以参考：<a href="http://en.wikipedia.org/wiki/List_of_tz_database_time_zones">http://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>
因为我现在在广州地区，所以把它改成了这样：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">LANGUAGE_CODE = 'zh-cn'
</span><span class="line">TIME_ZONE = 'Asia/Shanghai'</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">配置数据库</h3>
<p>目前使用默认的sqlite3即可，最简单，什么依赖都没有。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.sqlite3&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">BASE_DIR</span><span class="p">,</span> <span class="s">&#39;db.sqlite3&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>为我们的博客系统生成数据库，我们需要运行下面的命令：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos00</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>出现如下的信息表示成功了：</p>

<pre><code>Operations to perform:
  Apply all migrations: sessions, contenttypes, admin, auth
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying sessions.0001_initial... OK
</code></pre>

<h3 id="section-4">运行服务器</h3>
<p>接下来我们通过manage.py来运行服务器</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="p">[</span><span class="n">mango</span><span class="nd">@centos</span> <span class="n">mysite</span><span class="p">]</span><span class="err">$</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">runserver</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">203.95</span><span class="p">:</span><span class="mi">8000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后在浏览器中打开这个地址：http://192.168.203.95:8000/</p>

<p>按CTRL+C可以停止服务器</p>

<p>如果你看到下面这个页面，那么恭喜你，成功入门。</p>

<p><img src="http://yidaospace.qiniudn.com/dj001.jpg" alt="" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6.5上LVS和KeepAlived搭建高可用负载均衡集群]]></title>
    <link href="http://yidao620c.github.io/blog/20150420/lvs-keepalived.html"/>
    <updated>2015-04-20T16:40:04+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150420/lvs-keepalived</id>
    <content type="html"><![CDATA[<h2 id="section">一、理论知识（原理）</h2>
<p>我们不仅要知其然，而且要知其所以然，所以先给大家准备一些理论知识课，这样对以后的应用将会事半功倍。</p>

<p><strong>1、什么是LVS？</strong></p>

<p>请阅读作者章文嵩博士自己的研究报告，共计4部分，看完后对集群和LVS就有了初步的了解，不懂时可以翻翻。</p>

<ul>
  <li>LVS项目介绍：<a href="http://www.linuxvirtualserver.org/zh/lvs1.html">http://www.linuxvirtualserver.org/zh/lvs1.html</a></li>
  <li>LVS集群的体系结构：<a href="http://www.linuxvirtualserver.org/zh/lvs2.html">http://www.linuxvirtualserver.org/zh/lvs2.html</a></li>
  <li>LVS集群中的IP负载均衡技术：<a href="http://www.linuxvirtualserver.org/zh/lvs3.html">http://www.linuxvirtualserver.org/zh/lvs3.html</a></li>
  <li>LVS集群的负载调度：<a href="http://www.linuxvirtualserver.org/zh/lvs4.html">http://www.linuxvirtualserver.org/zh/lvs4.html</a></li>
</ul>

<p><strong>2、什么是KeepAlived?</strong></p>

<p>Keepalived原理与实战精讲： <a href="http://zhumeng8337797.blog.163.com/blog/static/100768914201191762253640/">http://zhumeng8337797.blog.163.com/blog/static/100768914201191762253640/</a></p>

<p><strong>3、什么是CentOS?</strong></p>

<p>百度百科给出的答案：<a href="http://baike.baidu.com/link?url=X3SzN3bJWjW_PkWC6GB2MTs5KhVmxBAxnCRjs9W7-IARDiHloZ_oRWj17BEz0kY3">什么是CentOS</a></p>

<p><strong>4、小结</strong></p>

<p>相信读了以上的理论知识后，已经对集群的实现原理有了大概的了解，那接下来我们就开始动手吧。<!--more--></p>

<p>系统架构图：</p>

<p><img src="http://yidaospace.qiniudn.com/0002.png" alt="" /></p>

<h2 id="section-1">二、服务器的安装</h2>
<p>我们会用到4个服务器，横向分2层：</p>

<p>第1层是LVS服务器（1个主，1个从；从可以多个）用来转发请求，需要安装ipvsadm和keepAlived；
第2层是提供具体服务的服务器（表中用了2个；当然也可以是多个，现实的应用会上百台。），
安装的是具体的服务，这里我们安装的是TOMCAT。</p>

<p>主机环境如下：</p>

<pre><code>192.168.203.107　 LVS_VIP（VIP：Virtual IP）
192.168.203.103　 LVS_Master　　
192.168.203.104　 LVS_Backup
192.168.203.93　  WEB1_RealServer
192.168.203.94　  WEB2_RealServer
</code></pre>

<p>克隆：我们先安装配置好一层的一个服务器，其他服务器使用克隆方式。</p>

<h3 id="virtualbox4212">1. 安装虚拟机VirtualBox4.2.12</h3>

<h3 id="centos-65">2. 安装CentOS 6.5</h3>

<p>这一步先安装一台虚拟机，然后其他的通过克隆方式安装，不过注意的是，
克隆之后需要修改相应的IP地址已经eth0等配置。具体方法是：</p>

<h4 id="etcudevrulesd70-persistent-netrules">1) 修改/etc/udev/rules.d/70-persistent-net.rules</h4>

<p>拷贝eth1的硬件地址到eth0，删除eth1信息</p>

<h4 id="etcsysconfignetwork-scriptsifcfg-eth0">2) 配置/etc/sysconfig/network-scripts/ifcfg-eth0</h4>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">DEVICE="eth0"
</span><span class="line">BOOTPROTO="static"
</span><span class="line">HWADDR="00:0C:29:91:42:2C"
</span><span class="line">MTU="1500"
</span><span class="line">NM_CONTROLLED="yes"
</span><span class="line">ONBOOT="yes"
</span><span class="line">IPADDR=192.168.203.94
</span><span class="line">NETMASK=255.255.255.0
</span><span class="line">GATEWAY=192.168.203.254</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="reboot">3) reboot</h4>

<p>这样可以保证所有的机器网卡都是eth0接口</p>

<h3 id="lvslvskeepalived">3. LVS层安装LVS和KeepAlived</h3>

<p>首先是LVS_MASTER机器的安装配置，打开LVS_Master服务器；</p>

<p>先安装lvs_master的服务，lvs_backup使用克隆虚拟机的方式，然后在配置文件修改三个参数即可，下面会讲到。</p>

<h4 id="ipvsadm">1) 安装IPVSADM</h4>

<p>知识点：IPVSADM理解为IPVS管理工具；LVS（Linux Virtual Server）的核心为IPVS（IP Virtual Server），
从Linux内核版本2.6起，IPVS模块已经编译进了Linux内核。</p>

<p>使用yum命令进行安装，系统会选择最适合内核版本的ipvsadm</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">yum -y install ipvsadm</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-2">2) 防火墙</h4>

<p>为了测试方便，我们直接关闭防火墙，在实际使用中开启需要的端口即可。</p>

<p>具体配置可参考：<a href="http://www.cnblogs.com/rockee/archive/2012/05/17/2506671.html">http://www.cnblogs.com/rockee/archive/2012/05/17/2506671.html</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">service iptables stop</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="keepalived-">3) KeepAlived 的安装</h4>

<p>知识点：KeepAlived是一个路由软件，它主要的目的是让我们通过简单的配置，实现高可用负载均衡，
当然负载均衡依赖于Linux虚拟服务器（IPVS）的内核模块，其高可用性使用VRRP协议来实现，
KeepAlived不仅会检测负载均衡服务器池中每台机器的健康状况并通知IPVS将非健康的机器从池中移除掉；
同时它还能对负载均衡调度器本身实现健康状态检查，当主负载均衡调度器出现问题时，备用负载均衡调度器顶替主进行工作。
逐条执行如下命令，执行的原因暂不解释，实际就是需要这些组件，安装即可。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd /usr/src
</span><span class="line">yum -y install openssl-devel
</span><span class="line">wget http://www.keepalived.org/software/keepalived-1.2.7.tar.gz
</span><span class="line">wget http://mirror.centos.org/centos/6/os/x86_64/Packages/popt-static-1.13-7.el6.x86_64.rpm
</span><span class="line">yum -y install popt-static-1.13-7.el6.x86_64.rpm
</span><span class="line">yum -y install kernel-devel make gcc openssl-devel libnl* popt*
</span><span class="line">ln -s /usr/src/kernels/2.6.32-220.13.1.el6.x86_64/ /usr/src/linux
</span><span class="line">tar zxvf keepalived-1.2.7.tar.gz
</span><span class="line">cd keepalived-1.2.7
</span><span class="line">./configure --with-kernel-dir=/usr/src/kernels/2.6.32-358.2.1.el6.x86_64/
</span><span class="line">make &amp;&amp; make install
</span><span class="line">cp /usr/local/etc/rc.d/init.d/keepalived /etc/rc.d/init.d/
</span><span class="line">cp /usr/local/etc/sysconfig/keepalived /etc/sysconfig/
</span><span class="line">mkdir /etc/keepalived
</span><span class="line">cp /usr/local/etc/keepalived/keepalived.conf /etc/keepalived/
</span><span class="line">cp /usr/local/sbin/keepalived /usr/sbin/</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>注：上面的kernel路径自己去用tab键弄出来
OK，KeepAlived安装完毕，然后进行配置。</p>

<h4 id="keepalivde">4) KeepAlivde的配置</h4>

<p><strong>一步：打开IP Forward 功能</strong></p>

<p>（LVS现有三种负载均衡规则都需要打开此功能，如果不打开此功能，下面的配置配得再好都无济于事）</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">vim /etc/sysctl.conf</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>打开后修改里面“net.ipv4.ip_forward = 1”，修改好后保存退出，执行如下命令使设置立即生效</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sysctl -p</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>第二步：KeepAlivde的配置</strong></p>

<p>配置文件在这个位置： /etc/keepalived/keepalived.conf</p>

<p>启动KeepAlived时，它默认会去/etc/keepalived下面找它的配置文件，
所以上面命令中我们已经将这个配置文件复制过来了。现在进行修改：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
</pre></td><td class="code"><pre><code class=""><span class="line">! Configuration File for keepalived
</span><span class="line">
</span><span class="line">global_defs {
</span><span class="line">   notification_email {
</span><span class="line">     test@sina.com
</span><span class="line">   }
</span><span class="line">   notification_email_from admin@test.com
</span><span class="line">   smtp_server 127.0.0.1
</span><span class="line">   smtp_connect_timeout 30
</span><span class="line">   router_id LVS_MASTER
</span><span class="line">}
</span><span class="line">
</span><span class="line">vrrp_instance VI_1 {
</span><span class="line">    state MASTER
</span><span class="line">    interface eth0
</span><span class="line">    virtual_router_id 60
</span><span class="line">    priority 100
</span><span class="line">    advert_int 1
</span><span class="line">    authentication {
</span><span class="line">        auth_type PASS
</span><span class="line">        auth_pass 1111
</span><span class="line">    }
</span><span class="line">    virtual_ipaddress {
</span><span class="line">        192.168.203.107
</span><span class="line">    }
</span><span class="line">}
</span><span class="line">
</span><span class="line">virtual_server 192.168.203.107 8080 {
</span><span class="line">    delay_loop 6
</span><span class="line">    lb_algo rr
</span><span class="line">    lb_kind DR
</span><span class="line">    nat_mask 255.255.255.0
</span><span class="line">    persistence_timeout 50
</span><span class="line">    protocol TCP
</span><span class="line">
</span><span class="line">    real_server 192.168.203.93 8080 {
</span><span class="line">        weight 1
</span><span class="line">        TCP_CHECK {
</span><span class="line">            connect_timeout 3
</span><span class="line">            nb_get_retry 3
</span><span class="line">            delay_before_retry 3
</span><span class="line">        }
</span><span class="line">    }
</span><span class="line">
</span><span class="line">    real_server 192.168.203.94 8080 {
</span><span class="line">        weight 1
</span><span class="line">        TCP_CHECK {
</span><span class="line">            connect_timeout 3
</span><span class="line">            nb_get_retry 3
</span><span class="line">            delay_before_retry 3
</span><span class="line">
</span><span class="line">    }
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>以上就完成了keepAlived的配置，下面进行启动</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">chkconfig keepalived on
</span><span class="line">service keepalived start</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>查看进程</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ps aux | grep keepalived</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>Keepalived正常运行时，共启动3个进程，其中一个进程是父进程，负责监控其子进程；
一个是vrrp子进程；另外一个是checkers子进程。</p>

<p>查看下虚拟IP是否已经加上（重要）</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[root@centos03 keepalived-1.2.7]# ip a
</span><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
</span><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span><span class="line">    inet 127.0.0.1/8 scope host lo
</span><span class="line">    inet6 ::1/128 scope host
</span><span class="line">       valid_lft forever preferred_lft forever
</span><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
</span><span class="line">    link/ether 08:00:27:81:29:7d brd ff:ff:ff:ff:ff:ff
</span><span class="line">    inet 192.168.203.103/24 brd 192.168.203.255 scope global eth0
</span><span class="line">    inet 192.168.203.107/32 scope global eth0
</span><span class="line">    inet6 fe80::a00:27ff:fe81:297d/64 scope link
</span><span class="line">       valid_lft forever preferred_lft forever</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>说明虚拟IP已经自动配置上了。</p>

<p>还有3个命令在先列示下，并不用执行</p>

<ul>
  <li>显示集群中服务器ip信息：<code>ipvsadm -ln</code></li>
  <li>查看日志：<code>tail -f /var/log/messages</code></li>
  <li>查看请求转发情况：<code>ipvsadm -lcn | grep 虚拟IP</code></li>
</ul>

<p>至此，LVS_MASTER服务器已经配置好并启动了，接下来我们配置web服务器。</p>

<h4 id="webweb1realserver">5) WEB服务器WEB1_RealServer的配置</h4>

<p>1. 克隆虚拟机WEB1_RealServer(192.168.203.93)；
2. 配置虚拟IP启动脚本</p>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">vim /etc/init.d/realserver.sh</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>在文件中输入如下脚本：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line"><span class="nv">SNS_VIP</span><span class="o">=</span>192.168.203.107
</span><span class="line">. /etc/rc.d/init.d/functions
</span><span class="line"><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class="line">start<span class="o">)</span>
</span><span class="line"> ifconfig lo:0 <span class="nv">$SNS_VIP</span> netmask 255.255.255.255 broadcast <span class="nv">$SNS_VIP</span>
</span><span class="line"> /sbin/route add -host <span class="nv">$SNS_VIP</span> dev lo:0
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;1&quot;</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;2&quot;</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;1&quot;</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;2&quot;</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce
</span><span class="line"> sysctl -p &gt;/dev/null 2&gt;<span class="p">&amp;</span>1
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;RealServer Start OK&quot;</span>
</span><span class="line"> <span class="p">;;</span>
</span><span class="line">stop<span class="o">)</span>
</span><span class="line"> ifconfig lo:0 down
</span><span class="line"> route del <span class="nv">$SNS_VIP</span> &gt;/dev/null 2&gt;<span class="p">&amp;</span>1
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;0&quot;</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;0&quot;</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;0&quot;</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;0&quot;</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;RealServer Stoped&quot;</span>
</span><span class="line"> <span class="p">;;</span>
</span><span class="line"> *<span class="o">)</span>
</span><span class="line"> <span class="nb">echo</span> <span class="s2">&quot;Usage: $0 {start|stop}&quot;</span>
</span><span class="line"> <span class="nb">exit </span>1
</span><span class="line"><span class="k">esac</span>
</span><span class="line"><span class="nb">exit </span>0
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>3. 安装配置TOMCAT</p>

<p>我测试用的是TOMCAT6</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">yum -y install tomcat6 tomcat6-webapps tomcat6-admin-webapps
</span><span class="line">service tomcat6 start
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>关闭防火墙：service iptables stop</p>

<p>打开浏览器：http://192.168.203.93:8080</p>

<p>会看到TOMCAT的熟悉页面了。</p>

<p>为了测试负载均衡，我们将这个页面改下，以更好的标识这个网页是本服务器的</p>

<p>Tomcat6安装目录位于/usr/share/tomcat6，所以我们要编辑tomcat下的webapps/ROOT/index.html这个文件。</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">cd</span> /usr/share/tomcat6/webapps/ROOT/
</span><span class="line">cat /dev/null &gt; index.html
</span><span class="line">vim index.html
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>将如下文本写入index.html，然后打开浏览器：http://192.168.203.93:8080，已经改变：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">web1 192.168.203.93
</span></code></pre></td></tr></table></div></figure></notextile></div>
<ul>
  <li>启动虚拟IP的脚本</li>
</ul>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sh /etc/init.d/realserver.sh start
</span><span class="line">ifconfig
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>运行后会看到网络有一个虚拟IP：</p>

<pre><code>[root@centos01 ROOT]# ifconfig
eth0      Link encap:Ethernet  HWaddr 08:00:27:59:AB:1D
          inet addr:192.168.203.93  Bcast:192.168.203.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:fe59:ab1d/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:81006 errors:0 dropped:0 overruns:0 frame:0
          TX packets:12305 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:83023415 (79.1 MiB)  TX bytes:1645604 (1.5 MiB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:46 errors:0 dropped:0 overruns:0 frame:0
          TX packets:46 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:3559 (3.4 KiB)  TX bytes:3559 (3.4 KiB)

lo:0      Link encap:Local Loopback
          inet addr:192.168.203.107  Mask:255.255.255.255
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
</code></pre>

<p>4. 去LVS_MASTER服务器的终端查看下ipvsadm，查看已经连接上了WEB1服务器，运行命令</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">ipvsadm -ln
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>结果如下：</p>

<pre><code>[root@centos03 keepalived-1.2.7]# ipvsadm -ln
IP Virtual Server version 1.2.1 (size=4096)
Prot LocalAddress:Port Scheduler Flags
  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn
TCP  192.168.203.107:8080 rr persistent 50
  -&gt; 192.168.203.93:8080          Route   1      0          0
</code></pre>

<p>已经可以看到有服务器加入进来了。
此时我们访问网页http://192.168.203.107:8080，出现界面显示web1 192.168.203.93；
OK，至此已经能实现负载均衡了，接下来我们通过克隆实现多个主机的试验。</p>

<p>5. 服务器克隆</p>

<p>1) 从LVS_MASTER克隆一个LVS_BACKUP服务器，然后修改其中的参数，
MASTER与BACKUP配置仅三处不同：global_defs中的router_id、vrrp_instance中的state、priority
（注意keepAlived的配置文件中有一个网卡设备，虚拟机的网卡设备可能是不一样的，
有的是eth0，有的是eth1，所以也是要改动的，否则从服务器的服务器很有可能服务不正常）</p>

<p>配置好的如下文：</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">! Configuration File <span class="k">for</span> keepalived
</span><span class="line">
</span><span class="line">global_defs <span class="o">{</span>
</span><span class="line">   notification_email <span class="o">{</span>
</span><span class="line">     <span class="nb">test</span>@sina.com
</span><span class="line">   <span class="o">}</span>
</span><span class="line">   notification_email_from admin@test.com
</span><span class="line">   smtp_server 127.0.0.1
</span><span class="line">   smtp_connect_timeout 30
</span><span class="line">   router_id LVS_BACKUP
</span><span class="line"><span class="o">}</span>
</span><span class="line">
</span><span class="line">vrrp_instance VI_1 <span class="o">{</span>
</span><span class="line">    state BACKUP
</span><span class="line">    interface eth0
</span><span class="line">    virtual_router_id 60
</span><span class="line">    priority 90
</span><span class="line">    advert_int 1
</span><span class="line">    authentication <span class="o">{</span>
</span><span class="line">        auth_type PASS
</span><span class="line">        auth_pass 1111
</span><span class="line">    <span class="o">}</span>
</span><span class="line">    virtual_ipaddress <span class="o">{</span>
</span><span class="line">        192.168.203.107
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line">
</span><span class="line">virtual_server 192.168.203.107 <span class="m">8080</span> <span class="o">{</span>
</span><span class="line">    delay_loop 6
</span><span class="line">    lb_algo rr
</span><span class="line">    lb_kind DR
</span><span class="line">    nat_mask 255.255.255.0
</span><span class="line">    persistence_timeout 50
</span><span class="line">    protocol TCP
</span><span class="line">
</span><span class="line">    real_server 192.168.203.93 <span class="m">8080</span> <span class="o">{</span>
</span><span class="line">        weight 1
</span><span class="line">        TCP_CHECK <span class="o">{</span>
</span><span class="line">            connect_timeout 3
</span><span class="line">            nb_get_retry 3
</span><span class="line">            delay_before_retry 3
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line">
</span><span class="line">    real_server 192.168.203.94 <span class="m">8080</span> <span class="o">{</span>
</span><span class="line">        weight 1
</span><span class="line">        TCP_CHECK <span class="o">{</span>
</span><span class="line">            connect_timeout 3
</span><span class="line">            nb_get_retry 3
</span><span class="line">            delay_before_retry 3
</span><span class="line">        <span class="o">}</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>2) 从WEB1_RealServer克隆一个WEB2_RealServer，将tomcat的index.html文件改为web2 192.168.203.94。
（这里的IP是我测试的，您的可以自定义）启动realserver.sh脚本。</p>

<p>3) OK，至此我们已经虚拟出2个LVS服务器，一对主从；2个WEB服务器，web1和web2。
接下来我们进行测试，看能否满足我们的初始需求。</p>

<h2 id="section-3">三、负载和可用性测试</h2>

<p>开启每个服务器的相关服务，关闭防火墙，我们开始进行测试。</p>

<p>测试LVS层</p>

<p>1）首先执行ip a命令，主服务器会存在一个虚拟IP，从服务器不会存在这个虚拟IP。现在浏览网页显示正常。虚拟IP如图所示：</p>

<pre><code>显示集群中服务器ip信息：ipvsadm -ln
查看日志：tail -f /var/log/messages
查看请求转发情况：ipvsadm -lcn | grep 虚拟IP
</code></pre>

<p>2）现在停掉LVS_MASTER的keepAlived服务，看LVS_BACKUP是否可以自动加上虚拟IP地址，并且开始转发请求。</p>

<p>（注意keepAlived的配置文件中有一个网卡设备，虚拟机的网卡设备可能是不一样的，有的是eth0，
有的是eth1，所以也是要改动的，否则从服务器的服务器很有可能服务不正常）
之后你通过命令：ip a去分别查看LVS_MASTER和LVS_BACKUP机器，结果正如预料一样，BACKUP立即接管了MASTER的工作。
切换很快，访问网页：http://192.168.203.107:8080也能正常显示。</p>

<p>3）恢复主服务器的keepAlived服务后，主服务器立刻接替了从服务器的工作，就不做截图了。和第1）个正常效果是一样的。</p>

<p>4）测试WEB服务器，看能否正常提供服务。先断掉WEB1，看下效果。</p>

<p>ipvsadm中的服务器列表，已经去掉了WEB1服务器，访问网页也只能访问到WEB2服务器了。</p>

<p>5）开启WEB1，关掉WEB2。测试正常。</p>

<h2 id="section-4">四、总结</h2>

<p>经过不断的测试，终于完成了这篇稿子，望大家能够指正。还有一点就是很多时候都是配置文件中的一些小毛病造成的，比如：</p>

<ol>
  <li>keepAlived中的通知邮箱好像必须要写，否则不正确；</li>
  <li>keepAlived中的网卡设备要注意，按照服务器的实际情况填写；</li>
  <li>使用时，必要的端口要打开，或者关掉防火墙。否则有事不提供服务；</li>
  <li>一些命令行的执行，少一些参数执行就可能会有一些问题。</li>
  <li>LINUX系统的目录结构也头疼，要不断的熟悉，否则也让你故意弄混了。</li>
</ol>

<p>—————————————————全文完——————————————–</p>

]]></content>
  </entry>
  
</feed>
