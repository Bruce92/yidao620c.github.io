<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类目录：octopress | 笨跑的一刀]]></title>
  <link href="http://yidao620c.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://yidao620c.github.io/"/>
  <updated>2015-04-27T12:09:18+08:00</updated>
  <id>http://yidao620c.github.io/</id>
  <author>
    <name><![CDATA[熊能]]></name>
    <email><![CDATA[yidao620@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[windows7上面使用Octopress搭建GitHub博客]]></title>
    <link href="http://yidao620c.github.io/blog/20150318/octopress-blog.html"/>
    <updated>2015-03-18T17:41:21+08:00</updated>
    <id>http://yidao620c.github.io/blog/20150318/octopress-blog</id>
    <content type="html"><![CDATA[<h3 id="section">前言</h3>
<p>经过iteye博客——WordPress——github的三重进化，时间来到了2015年，
荒废了两年的Blog大业再次东山再起，于是经过一天的配置，本博客终于展现在你的眼前。
本博客基于Octopress+Github Pages搭建，可以搭建全免费、稳定运行的个人博客。
本文将简述在Windows平台（Win7 64bit）上搭建这套系统的全流程和要点。
在继续看本文之前，请先确定你具有折腾的精神。</p>

<h3 id="section-1">介绍</h3>
<p><a href="https://github.com/imathis/octopress">Octopress</a>是一个基于Ruby语言的开源静态网站框架，
所谓静态，是指网站的所有内容都是生成好的静态HTML，不含任何后台处理程序，也没有数据库。
这样的好处是网站的加载速度会非常快，整体程序规模也非常轻量级。</p>

<p><a href="https://pages.github.com/">Github Pages</a>是Github上的一项服务，
注册用户可以申请一个和自己账号关联的二级域名，
在上面可以托管一个静态网站，网站内容本身就是Github的一个repository也就是项目，
维护这个项目的代码就是在维护自己的网站。<!--more--></p>

<p>此外，用户撰写日志使用的是Markdown语法。这是一种极简化的语法，
它的好处在于可以以纯文本形式表现文章，用户不用关心排版的问题。
基本上来说它相当于HTML标签的最小子集做了一个转义。</p>

<p>综上所述，使用本文所述的配置环境，你将得到一个如下的个人网站：</p>

<ul>
  <li>完全免费的空间和域名</li>
  <li>在本地撰写日志和管理网站，不用考虑备份问题</li>
  <li>无需管理数据库</li>
  <li>满足你的折腾欲</li>
</ul>

<h3 id="section-2">安装</h3>

<h4 id="ruby">Ruby环境的安装</h4>

<p>Octopress是基于Ruby的，我们需要安装一个Ruby环境和一个开发包。</p>

<p>首先我们<a href="http://rubyinstaller.org/downloads/">下载Ruby</a>环境。这里要注意一下版本，
请选择和当前Ocotopress官网的建议相同的版本。
本文目前要下载的是<a href="http://dl.bintray.com/oneclick/rubyinstaller/rubyinstaller-1.9.3-p551.exe?direct">Ruby 1.93</a>。
安装时注意选中“Add Ruby executables to your PATH”的选项，
将Ruby程序加入环境变量，这样才能在Windows任意位置使用cmd运行Ruby命令。</p>

<p>安装结束后，可以在cmd输入如下命令检测ruby是否安装成功：
<code>
ruby --version
</code></p>

<p>下面需要安装<a href="https://github.com/oneclick/rubyinstaller/wiki/Development-Kit">DevKit</a>。DevKit是专在Windows上为了方便使用Ruby的一个开发包，
在它主页的Requirements一段有写根据你的Ruby版本，对应的DevKits版本也不同。
本文需下载<a href="https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">DevKit 4.5.2</a>版本。</p>

<p>下载解压到没有空格的路径，然后在此路径打开cmd，执行以下命令：</p>

<p><code>
ruby dk.rb init
ruby dk.rb install
</code></p>

<h4 id="octopress">Octopress的安装</h4>
<p>进入<a href="https://github.com/imathis/octopress">OCtopress页面</a>，点击右边的Downloadzip。
会用Github的玩家可以直接git clone，不多叙述。
下载下来之后解压，把目录名字改成octopress。</p>

<p>下面我们先做个预备操作：更改gem的更新源。
由于后续安装需要gem自己从服务器上拿资源，默认的服务器地址速度很慢，因此我们改成淘宝的源。</p>

<p><code>
gem sources -a http://ruby.taobao.org/
gem sources -r http://rubygems.org/
gem sources -l
</code>
三行命令的作用分别是：添加淘宝源；删除默认源；显示当前源列表。显示淘宝地址就表示成功。</p>

<p>然后，我们还要改一下Octopress的gem更新源</p>

<p>在octopress的目录下，打开Gemfile文件，
查找source “http://rubygems.org/”改为source “http://ruby.taobao.org/”</p>

<p>好了下面我们进入本节的最后一步：安装Octopress依赖。在Octopress的目录下执行命令：
<code>
gem install bundler
bundler install
</code>
这一步需要等待一段时间，耐心等待出现Complete以后，执行以下命令安装Octopress的默认主题：
<code>
rake install
</code></p>

<h4 id="section-3">测试</h4>
<p>现在我们本地已经环境全部安装完毕了，你可以在自己的电脑上开始耍了。</p>

<p>由于网站是静态的，所以每次改动（修改网页，写日志等）之后需要使用以下命令生成页面：
<code>
rake generate
</code>
生成完毕后，使用以下命令启动网站进程，默认占用4000端口：
<code>
rake preview
</code>
注意这个命令运行之后当前窗口会一直以阻塞模式监听http请求和显示状态，所以要输入新命令请新开一个cmd。</p>

<p>之后在浏览器输入http://localhost:4000就可以看到网站的界面了。</p>

<h3 id="section-4">配置</h3>

<h4 id="section-5">基础配置</h4>

<p>网站的通用配置文件是根目录下的_config.yml，内有注释已经将配置分成几个部分。
我会把我改动过的部分列出来，其余的部分略过，可以自己研究。</p>

<p><strong>1) 主配置Main Configs</strong></p>

<pre><code>url: http://yidao620c.github.io
title: 笨跑的一刀
subtitle: Code is sexy, like Amy
author: 熊能
simple_search: https://www.google.com.hk/search
description:
date_format: "%Y年%m月%d日"
</code></pre>

<p><strong>2) 第三方插件 3rd Party Settings</strong></p>

<p>这里设置第三方插件的设定，譬如Github个人资料、Twitter、G+、Pinboard、facebook等。
总之基本上要打开就改成true否则就false，要填用户名就填就可以了。</p>

<p>由于是纯静态网站，因此网站评论必须使用第三方插件。我选择了国内的一个同类产品——多说（其实应该是山寨Disqus的）。</p>

<p><strong>3) 国内访问加速</strong></p>

<p>由于防火长城的原因，脸书、推、G+的服务在国内都没法用，加上Octopress引用的一些资源都来自Google，
导致默认的网站加载起来非常非常慢（因为加载资源超时拖慢了整体速度）。
因此我们需要对这些引用做一些改动以加快速度。</p>

<p>1) 修改jQuery的源
打开source/_includes/head.html，找到如下字串
<code>
&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;
</code>
改为
<code>
&lt;script src="//ajax.aspnetcdn.com/ajax/jQuery/jquery-1.9.1.min.js"&gt;&lt;/script&gt;
</code>
2）修改字体源</p>

<p>Octopress的英文字体是加载的Google Fonts，我们将其改成国内的CDN源，
打开source/_includes/custom/head.html,
将其中的https://fonts.googleapis.com改为http://fonts.useso.com即可。</p>

<p>3） 关闭Twitter插件</p>

<p>在前面提到的_config.yml中twitter_tweet_butto改为false即可。</p>

<h4 id="section-6">中文化</h4>
<p>Octopress的页面中很多显示信息都是英文的，我们可以改成中文。直接打开文件改对应字符串保存即可。</p>

<ul>
  <li>顶部导航在source/_includes/custom/navigation.html</li>
  <li>底部版权在source/_includes/custom/footer.html</li>
  <li>侧边栏的RecentPosts标题在source/_includes/asides/recent_posts.html</li>
</ul>

<p>这里写到的只是其中的一部分，总之源码都在source目录，需要改动哪个部分找字串然后改了保存就可以汉化了。</p>

<h3 id="section-7">撰写日志</h3>
<p>要发布一篇新文章，在命令行中输入以下命令：
<code>
rake new_post["mypost"]
</code>
之后在source/_posts里就可以找到这个文件形如2015-03-10-mypost.markdown，打开编辑就可以写日志内容了。</p>

<p>文件里已经默认有一段基本属性的说明：</p>

<pre><code>---
layout: post
title: "mypost"
date: 2015-03-10 03:02:43 +0800
comments: true
categories: octopress
---
</code></pre>

<p>title默认和你新建文章时的名字相同，这里可以修改。comments表示是否允许评论。categories是自己分类用的目录。
之后文章正文的语法就用Markdown来写。语法参考可见<a href="http://wowubuntu.com/markdown">这里</a>。</p>

<p>写完文章之后就可以用rake generate生成一下静态了。
如果你之前已经运行了rake preview启动了网站，那么文章保存后自动就生成静态了，比较方便即时查看。</p>

<p>另外还需要注意一下，写好的文章要保存为utf-8无bom格式，否则对中文支持会有问题。</p>

<h3 id="section-8">发布</h3>

<h4 id="section-9">申请空间</h4>
<p>在Github注册一个账号。登录，创建一个新仓库（Create new repository），
Repository name一定要写成username.github.io的形式，
username是你刚注册的账号名称。其他的不用变。
申请完毕后大约几分钟，域名https://username.github.io就可以访问了。</p>

<h4 id="section-10">本地配置</h4>

<ul>
  <li>在Git官网下载git for windows并安装。安装完成后可在cmd输入git version来确认是否安装成功。</li>
  <li>在octopress的目录下输入命令rake setup_github_pages进行一系列自动的设置。
期间会让你输入以下你的Github账号和密码。</li>
  <li>完毕以后就可以准备发布了，生成还是rake generate，发布请执行rake deploy。</li>
  <li>发布完毕后查看https://username.github.io就可以看到我们的网站已经运行了。</li>
  <li>发布源码
<code>
git add .
git commit -m "push source"
git push origin source
</code></li>
  <li>发布时可能会提示你 Updates were rejected because the tip of your current
branch is behind its remote counterpart.也就是告诉你远程目录已经有内容了，
此时请到发布的目录_deploy下，打开一个新的cmd，运行命令：git push -f，强制用本地内容覆盖远程即可。</li>
</ul>

<h3 id="section-11">结语</h3>
<p>正如octopress的标语所说的那样：</p>

<pre><code>A blogging framework for hackers.
</code></pre>

<p>这是一个生来就给人折腾的博客……</p>

<p>欢迎来折腾。</p>

<h3 id="section-12">问题记录</h3>
<ul>
  <li>在引用代码的时候，如果代码中有<code>{ %</code>的标签，需要使用<code>{ % raw % }{ % endraw % }</code>包围</li>
  <li>在在代码片段的前后都应该有一个空号</li>
  <li>引用html代码的时候，&lt;html&gt;标签还得有&lt;/html&gt;闭合</li>
</ul>

]]></content>
  </entry>
  
</feed>
